{"version":3,"sources":["webpack://cornerstoneTools/webpack/universalModuleDefinition","webpack://cornerstoneTools/../node_modules/lodash.clonedeep/index.js","webpack://cornerstoneTools/external \"vtk.js/Sources/Common/Core/Math\"","webpack://cornerstoneTools/external \"vtk.js/Sources/Common/Core/MatrixBuilder\"","webpack://cornerstoneTools/external {\"root\":\"window\",\"commonjs\":\"cornerstoneImageLoaderStreamingVolume\",\"commonjs2\":\"cornerstoneImageLoaderStreamingVolume\",\"amd\":\"cornerstoneImageLoaderStreamingVolume\"}","webpack://cornerstoneTools/external {\"root\":\"window\",\"commonjs\":\"cornerstoneRender\",\"commonjs2\":\"cornerstoneRender\",\"amd\":\"cornerstoneRender\"}","webpack://cornerstoneTools/external {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}","webpack://cornerstoneTools/webpack/bootstrap","webpack://cornerstoneTools/webpack/runtime/compat get default export","webpack://cornerstoneTools/webpack/runtime/define property getters","webpack://cornerstoneTools/webpack/runtime/global","webpack://cornerstoneTools/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstoneTools/webpack/runtime/make namespace object","webpack://cornerstoneTools/webpack/runtime/node module decorator","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://cornerstoneTools/./src/util/uuidv4.js","webpack://cornerstoneTools/./src/enums/ToolBindings.ts","webpack://cornerstoneTools/./src/stateManagement/FrameOfReferenceSpecificToolStateManager.ts","webpack://cornerstoneTools/./src/enums/ToolModes.ts","webpack://cornerstoneTools/./src/enums/ToolDataStates.ts","webpack://cornerstoneTools/./src/enums/CornerstoneTools3DEvents.ts","webpack://cornerstoneTools/./src/stateManagement/toolStyle.ts","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://cornerstoneTools/./src/util/math/vec2/findClosestPoint.ts","webpack://cornerstoneTools/./src/util/math/vec2/liangBarksyClip.ts","webpack://cornerstoneTools/./src/util/math/vec2/index.ts","webpack://cornerstoneTools/./src/util/math/vec2/isEqual.ts","webpack://cornerstoneTools/./src/util/math/ellipse/pointInEllipse.ts","webpack://cornerstoneTools/./src/util/math/line/distanceToPointSquared.ts","webpack://cornerstoneTools/./src/util/math/line/intersectLine.ts","webpack://cornerstoneTools/./src/util/math/line/index.ts","webpack://cornerstoneTools/./src/util/math/line/distanceToPoint.ts","webpack://cornerstoneTools/./src/util/math/rectangle/index.ts","webpack://cornerstoneTools/./src/util/math/rectangle/distanceToPoint.ts","webpack://cornerstoneTools/./src/util/math/index.ts","webpack://cornerstoneTools/./src/util/math/vec3/index.ts","webpack://cornerstoneTools/./src/util/math/vec3/isEqual.ts","webpack://cornerstoneTools/./src/util/math/vec3/isOpposite.ts","webpack://cornerstoneTools/./src/util/math/ellipse/index.ts","webpack://cornerstoneTools/./src/util/planar/getSpacingInNormalDirection.ts","webpack://cornerstoneTools/./src/util/planar/getTargetVolume.ts","webpack://cornerstoneTools/./src/util/planar/getToolStateWithinSlice.ts","webpack://cornerstoneTools/./src/util/planar/getWorldWidthAndHeightInPlane.ts","webpack://cornerstoneTools/./src/util/planar/getVoxelPositionBasedOnIntensity.ts","webpack://cornerstoneTools/./src/store/svgNodeCache.ts","webpack://cornerstoneTools/./src/store/state.ts","webpack://cornerstoneTools/./src/store/addTool.ts","webpack://cornerstoneTools/./src/store/resetToolsState.ts","webpack://cornerstoneTools/./src/eventListeners/mouse/getMouseEventPoints.ts","webpack://cornerstoneTools/./src/eventListeners/mouse/mouseDoubleClickListener.ts","webpack://cornerstoneTools/./src/eventListeners/mouse/mouseMoveListener.ts","webpack://cornerstoneTools/./src/eventListeners/mouse/mouseDownListener.ts","webpack://cornerstoneTools/./src/eventListeners/mouse/index.ts","webpack://cornerstoneTools/./src/eventListeners/wheel/wheelListener.ts","webpack://cornerstoneTools/./src/eventListeners/wheel/normalizeWheel.js","webpack://cornerstoneTools/./src/eventListeners/wheel/index.ts","webpack://cornerstoneTools/./src/drawingSvg/getSvgDrawingHelper.ts","webpack://cornerstoneTools/./src/drawingSvg/draw.ts","webpack://cornerstoneTools/./src/drawingSvg/_getHash.ts","webpack://cornerstoneTools/./src/drawingSvg/drawEllipse.ts","webpack://cornerstoneTools/./src/drawingSvg/drawHandles.ts","webpack://cornerstoneTools/./src/drawingSvg/drawLine.ts","webpack://cornerstoneTools/./src/drawingSvg/drawTextBox.ts","webpack://cornerstoneTools/./src/drawingSvg/drawLink.ts","webpack://cornerstoneTools/./src/drawingSvg/drawLinkedTextBox.ts","webpack://cornerstoneTools/./src/drawingSvg/drawRect.ts","webpack://cornerstoneTools/./src/eventDispatchers/shared/getToolsWithModesForMouseEvent.ts","webpack://cornerstoneTools/./src/eventDispatchers/imageRenderedEventDispatcher.ts","webpack://cornerstoneTools/./src/eventDispatchers/shared/customCallbackHandler.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseClick.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseDoubleClick.ts","webpack://cornerstoneTools/./src/stateManagement/toolDataSelection.ts","webpack://cornerstoneTools/./src/store/getToolsWithDataForElement.ts","webpack://cornerstoneTools/./src/eventDispatchers/shared/getActiveToolForMouseEvent.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseDown.ts","webpack://cornerstoneTools/./src/store/getToolsWithMoveableHandles.ts","webpack://cornerstoneTools/./src/store/getMoveableAnnotationTools.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseDownActivate.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseDrag.js","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseMove.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseUp.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseEventHandlers/mouseWheel.ts","webpack://cornerstoneTools/./src/eventDispatchers/mouseToolEventDispatcher.ts","webpack://cornerstoneTools/./src/eventDispatchers/cameraModifiedEventDispatcher.ts","webpack://cornerstoneTools/./src/store/addEnabledElement.ts","webpack://cornerstoneTools/./src/store/removeEnabledElement.ts","webpack://cornerstoneTools/./src/store/ToolGroupManager/createToolGroup.ts","webpack://cornerstoneTools/./src/store/ToolGroupManager/index.js","webpack://cornerstoneTools/./src/store/ToolGroupManager/destroy.ts","webpack://cornerstoneTools/./src/store/ToolGroupManager/destroyToolGroupById.ts","webpack://cornerstoneTools/./src/store/ToolGroupManager/getToolGroupById.ts","webpack://cornerstoneTools/./src/store/ToolGroupManager/getToolGroups.ts","webpack://cornerstoneTools/./src/store/SynchronizerManager/Synchronizer.ts","webpack://cornerstoneTools/./src/store/SynchronizerManager/index.js","webpack://cornerstoneTools/./src/store/SynchronizerManager/createSynchronizer.ts","webpack://cornerstoneTools/./src/store/SynchronizerManager/destroy.ts","webpack://cornerstoneTools/./src/store/SynchronizerManager/getSynchronizerById.ts","webpack://cornerstoneTools/./src/store/SynchronizerManager/getSynchronizers.ts","webpack://cornerstoneTools/./src/store/SynchronizerManager/getAllSynchronizers.ts","webpack://cornerstoneTools/./src/store/getToolDataNearPoint.ts","webpack://cornerstoneTools/./src/util/viewportFilters/filterViewportsWithToolEnabled.ts","webpack://cornerstoneTools/./src/util/viewportFilters/getViewportUIDsWithToolToRender.ts","webpack://cornerstoneTools/./src/util/viewportFilters/filterViewportsWithFrameOfReferenceUID.ts","webpack://cornerstoneTools/./src/util/vtkjs/indexWithinDimensions.ts","webpack://cornerstoneTools/./src/util/drawing/getTextBoxCoordsCanvas.ts","webpack://cornerstoneTools/./src/util/stackScrollTool/snapFocalPointToSlice.ts","webpack://cornerstoneTools/./src/util/stackScrollTool/getSliceRange.ts","webpack://cornerstoneTools/./src/util/vtkjs/getVolumeActorCorners.ts","webpack://cornerstoneTools/./src/util/clip.js","webpack://cornerstoneTools/./src/util/stackScrollTool/scrollThroughStack.ts","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://cornerstoneTools/./src/util/isObject.js","webpack://cornerstoneTools/./src/util/deepMerge.js","webpack://cornerstoneTools/./src/util/throttle.js","webpack://cornerstoneTools/./src/util/debounce.js","webpack://cornerstoneTools/./src/util/getDefault.js","webpack://cornerstoneTools/./src/stateManagement/toolState.ts","webpack://cornerstoneTools/./src/stateManagement/getStyle.ts","webpack://cornerstoneTools/./src/stateManagement/setGlobalStyle.ts","webpack://cornerstoneTools/./src/stateManagement/setToolStyle.ts","webpack://cornerstoneTools/./src/stateManagement/setToolDataStyle.ts","webpack://cornerstoneTools/./src/init.ts","webpack://cornerstoneTools/./src/drawing/draw.js","webpack://cornerstoneTools/./src/drawing/path.js","webpack://cornerstoneTools/./src/drawing/drawLine.js","webpack://cornerstoneTools/./src/drawing/drawJoinedLines.js","webpack://cornerstoneTools/./src/util/index.ts","webpack://cornerstoneTools/./src/drawing/drawLink.js","webpack://cornerstoneTools/./src/drawing/fillTextLines.js","webpack://cornerstoneTools/./src/drawing/fillBox.js","webpack://cornerstoneTools/./src/drawing/drawTextBox.js","webpack://cornerstoneTools/./src/drawing/index.js","webpack://cornerstoneTools/./src/drawing/drawArrow.js","webpack://cornerstoneTools/./src/drawing/drawCircle.js","webpack://cornerstoneTools/./src/drawing/drawEllipse.js","webpack://cornerstoneTools/./src/drawing/drawHandles.js","webpack://cornerstoneTools/./src/drawing/drawLines.js","webpack://cornerstoneTools/./src/drawing/drawLinkedTextBox.js","webpack://cornerstoneTools/./src/drawing/drawRect.js","webpack://cornerstoneTools/./src/drawing/fillOutsideRect.js","webpack://cornerstoneTools/./src/drawing/getNewContext.js","webpack://cornerstoneTools/./src/drawing/setShadow.js","webpack://cornerstoneTools/./src/synchronizers/callbacks/cameraSyncCallback.ts","webpack://cornerstoneTools/./src/synchronizers/synchronizers/createCameraPositionSynchronizer.ts","webpack://cornerstoneTools/./src/synchronizers/callbacks/voiSyncCallback.ts","webpack://cornerstoneTools/./src/synchronizers/synchronizers/createVOISynchronizer.ts","webpack://cornerstoneTools/./src/synchronizers/index.ts","webpack://cornerstoneTools/./src/synchronizers/synchronizers/index.ts","webpack://cornerstoneTools/./src/tools/base/BaseTool.ts","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://cornerstoneTools/./src/tools/base/BaseAnnotationTool.ts","webpack://cornerstoneTools/./src/util/getToolDataStyle.ts","webpack://cornerstoneTools/./src/tools/PanTool.ts","webpack://cornerstoneTools/./src/tools/WindowLevelTool.ts","webpack://cornerstoneTools/./src/tools/PetThresholdTool.ts","webpack://cornerstoneTools/./src/tools/StackScrollTool.ts","webpack://cornerstoneTools/./src/tools/StackScrollToolMouseWheelTool.ts","webpack://cornerstoneTools/./src/tools/ZoomTool.ts","webpack://cornerstoneTools/./src/tools/VolumeRotateMouseWheelTool.ts","webpack://cornerstoneTools/./src/store/toolCursor.ts","webpack://cornerstoneTools/./src/tools/CrosshairsTool.ts","webpack://cornerstoneTools/./src/drawingSvg/drawCircle.ts","webpack://cornerstoneTools/./src/tools/MIPJumpToClickTool.ts","webpack://cornerstoneTools/./src/tools/annotation/BidirectionalTool.ts","webpack://cornerstoneTools/./src/tools/annotation/LengthTool.ts","webpack://cornerstoneTools/./src/util/planar/getImageIdForTool.ts","webpack://cornerstoneTools/./src/util/planar/getToolStateForDisplay.ts","webpack://cornerstoneTools/./src/tools/annotation/ProbeTool.ts","webpack://cornerstoneTools/./src/tools/annotation/RectangleRoiTool.ts","webpack://cornerstoneTools/./src/tools/annotation/EllipticalRoiTool.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__45__","__WEBPACK_EXTERNAL_MODULE__167__","__WEBPACK_EXTERNAL_MODULE__812__","__WEBPACK_EXTERNAL_MODULE__653__","__WEBPACK_EXTERNAL_MODULE__708__","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","g","Object","freeSelf","self","Function","freeExports","nodeType","freeModule","moduleExports","addMapEntry","map","pair","set","addSetEntry","value","add","arrayReduce","array","iteratee","accumulator","initAccum","index","length","isHostObject","result","toString","e","mapToArray","Array","size","forEach","key","overArg","func","transform","arg","setToArray","uid","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Buffer","undefined","Symbol","Uint8Array","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","ListCache","MapCache","Stack","__data__","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isObject","isArr","isArray","constructor","input","initCloneArray","source","copyArray","tag","getTag","isFunc","buffer","slice","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","symbol","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","initCloneByTag","stacked","get","props","keysFunc","symbolsFunc","values","offset","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","arrayBuffer","newValue","getMapData","type","data","getValue","isFunction","test","baseIsNative","has","pop","push","cache","pairs","LARGE_ARRAY_SIZE","isIndex","other","ArrayBuffer","resolve","ctorString","isArrayLike","isLength","inherited","isObjectLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","arrayLikeKeys","baseKeys","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","defineProperty","enumerable","globalThis","window","obj","prop","r","toStringTag","nmd","paths","children","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","i","descriptor","configurable","writable","_createClass","protoProps","staticProps","_defineProperty","uuidv4","c","crypto","getRandomValues","Mouse","Touch","FrameOfReferenceSpecificToolStateManager","evt","FrameOfReferenceUID","detail","frameOfReferenceSpecificToolState","toolState","toolName","toolData","invalidated","toolUID","filter","toolSpecificToolStateAndIndex","_getToolSpecificToolStateAndIndex","toolSpecificToolState","metadata","Error","findIndex","cloneDeep","state","eventTarget","RENDERING_EVENTS","_imageVolumeModifiedHandler","frameOfReferenceUIDKeys","numFrameOfReferenceUIDKeys","toolNameKeys","numToolNameKeys","j","defaultFrameOfReferenceSpecificToolStateManager","ToolModes","ToolDataStates","CornerstoneTools3DEvents","initializeDefaultStyleAlternatives","modes","states","defaultSettings","Settings","name","nameEndsWith","string","endsWith","some","mode","getStyleAlternatives","property","list","getStyleProperty","settings","alternatives","style","getDefaultStyleProperty","getFont","sty","fontSize","fontFamily","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","from","_slicedToArray","_i","iterator","_s","_e","_arr","_n","_d","next","done","err","_toConsumableArray","iter","findClosestPoint","sourcePoints","targetPoint","minPoint","minDistance","Number","sourcePoint","p2","x1","y1","x2","y2","distance","Math","sqrt","pow","color","colorHighlighted","colorSelected","colorLocked","lineWidth","lineDash","textBox","background","link","EPSILON","clipT","num","denom","tE","tL","abs","t","isEqual","v1","v2","tolerance","liangBarksyClip","b","box","da","db","dx","dy","pointInEllipse","ellipse","location","xRadius","width","yRadius","height","center","left","top","normalized","dist2","p1","distanceToPointSquared","lineStart","lineEnd","point","d2","sign","x","NaN","distanceToPoint","intersectLine","line1Start","line1End","line2Start","line2End","x3","y3","x4","y4","a1","b1","c1","r3","r4","a2","b2","c2","r1","r2","rect","lineSegments","right","bottom","rectToLineSegments","segment","lineSegment","vec2","vec3","isOpposite","rectangle","getSpacingInNormalDirection","imageVolume","viewPlaneNormal","direction","spacing","iVector","jVector","kVector","dotProducts","projectedSpacing","getTargetVolume","scene","camera","targetVolumeUID","volumeActors","getVolumeActors","spacingInNormalDirection","numVolumeActors","imageVolumes","va","find","iv","smallest","Infinity","getToolStateWithinSlice","toolStateWithSameNormal","td","toolDataViewPlaneNormal","math","halfSpacingInNormalDirection","focalPoint","toolStateWithinSlice","handles","points","dir","dot","getWorldWidthAndHeightInPlane","viewUp","worldPos1","worldPos2","xDir","yDir","iDirection","jDirection","kDirection","viewRight","console","warn","worldWidth","worldHeight","_inBounds","bounds","xMin","xMax","yMin","yMax","zMin","zMax","isToolLocked","isMultiPartToolActive","tools","toolGroups","synchronizers","svgNodeCache","enabledElements","handleRadius","addTool","ToolClass","toolOptions","tool","hasToolName","toolAlreadyAdded","toolClass","resetToolsState","getMouseEventPoints","element","canvas","enabledElement","getEnabledElement","pagePoint","pageX","pageY","_pageToPoint","canvasPoint","DomCanvasElement","getBoundingClientRect","pageXOffset","pageYOffset","_pagePointsToCanvasPoints","worldPoint","viewport","canvasToWorld","page","client","_clientToPoint","world","clientX","clientY","startPoints","eventData","event","lastPoints","currentPoints","deltaPoints","eventName","triggerEvent","currentTarget","renderingEngineUID","sceneUID","viewportUID","MOUSE_DOWN","MOUSE_DOWN_ACTIVATE","defaultState","renderingEngingUID","isClickEvent","clickDelay","preventClickTimeout","_onMouseDrag","_updateMouseEventsLastPoints","_getDeltaPoints","_copyPoints","_onMouseUp","clearTimeout","document","removeEventListener","addEventListener","mouseMoveListener","JSON","parse","stringify","_preventClickHandler","_subtractPoints","point0","point1","setTimeout","disable","enabledDomElement","mouseDoubleClickListener","mouseDownListener","enable","deltaY","preventDefault","spinX","spinY","pixelX","pixelY","wheelDelta","wheelDeltaY","wheelDeltaX","deltaX","deltaMode","normalizeWheel","wheel","wheelListener","passive","getSvgNode","canvasHash","cacheKey","domRef","appendNode","svgLayerElement","svgNode","touched","appendChild","setNodeTouched","clearUntouched","cacheEntry","removeChild","canvasElement","fn","svgDrawingHelper","parentNode","querySelector","_getSvgLayer","_canvasElement","_svgLayerElement","_svgNodeCacheForCanvas","_getSvgNode","bind","_appendNode","_setNodeTouched","_clearUntouched","getSvgDrawingHelper","annotationUID","drawingElementType","nodeUID","ellipseUID","corner1","corner2","options","assign","strokeWidth","svgns","svgNodeHash","_getHash","existingEllipse","w","h","min","radiusX","radiusY","setAttribute","removeAttribute","svgEllipseElement","createElementNS","handleGroupUID","handlePoints","fill","handle","existingHandleElement","handleRadiusFloat","parseFloat","side","y","newHandleElement","drawLine","lineUID","start","end","existingLine","newLine","_drawTextGroup","textUID","textLines","position","textGroupBoundingBox","padding","existingTextGroup","textElement","textSpans","textSpanElement","text","textContent","_drawTextBackground","getBBox","textGroup","combinedStyle","_createTextElement","textSpan","_createTextSpan","group","insertBefore","firstChild","bBox","mergedOptions","centerX","centerY","_boundingBoxPoints","boundingBox","halfWidth","halfHeight","linkUID","annotationAnchorPoints","refPoint","boundingBoxPoints","textBoxUID","textBoxPosition","centering","canvasBoundingBox","drawTextBox","drawLink","drawRect","rectangleUID","_width","existingRect","tlhc","svgRectElement","getToolsWithModesForMouseEvent","modesFilter","evtButton","ToolGroupManager","getToolGroups","enabledTools","toolGroup","toolGroupToolNames","includes","bindings","toolInstance","_tools","Active","Passive","Enabled","onImageRendered","drawSvg","renderToolData","customCallbackHandler","handlerType","customFunction","activeTool","selectedToolData","selectToolData","preserveSelected","makeEventDetail","clearSelectionSet","added","publish","deselectToolData","delete","removed","getSelectedToolData","getSelectedToolDataByUID","isToolDataSelected","getSelectionSize","freeze","selection","selectionSet","item","getToolsWithDataForElement","getToolState","filterInteractableToolStateForElement","getActiveToolForMouseEvent","mouseEvent","buttons","mouseDown","preMouseDownCallback","isPrimaryClick","activeToolsWithEventBinding","passiveToolsIfEventWasPrimaryMouseButton","applicableTools","annotationTools","canvasCoords","annotationToolsWithMoveableHandles","toolAndToolStateArray","toolsWithMoveableHandles","getHandleNearImagePoint","getToolsWithMoveableHandles","isMultiSelect","shiftKey","toggleToolDataSelection","handleSelectedCallback","moveableAnnotationTools","pointNearTool","getMoveableAnnotationTools","toolSelectedCallback","postMouseDownCallback","mouseDownActivate","addNewMeasurement","mouseDrag","mouseDragCallback","mouseMove","activeAndPassiveTools","numAnnotationTools","imageNeedsUpdate","mouseMoveCallback","render","mouseClick","mouseDoubleClick","mouseUp","mouseWheel","onCameraModified","addEnabledElement","newNode","referenceNode","svgLayer","classList","pointerEvents","defs","feOffset","feColorMatrix","feGaussianBlur","feBlend","_createSvgAnnotationLayer","dataset","viewportUid","sceneUid","renderingEngineUid","_setSvgNodeCacheForCanvas","nextSibling","mouseEventListeners","wheelEventListener","RenderingEngineEvents","cameraModifiedEventDispatcher","mouseToolEventDispatcher","elementDisabledEvt","foundElementIndex","Disabled","createToolGroup","toolGroupId","tg","viewports","getToolInstance","toolConfiguration","toolDefinition","localToolInstance","defaultToolOptions","mergedToolConfiguration","instantiatedTool","addViewports","setToolActive","toolModeOptions","toolModeOptionsWithMode","refreshViewports","setToolPassive","setToolEnabled","setToolDisabled","getRenderingEngine","renderViewport","destroy","destroyToolGroupById","toolGroupIndex","getToolGroupById","s","vp","_getViewportIndex","ar","synchronizerId","eventHandler","_enabled","_eventName","_eventHandler","_ignoreFiredEvents","_sourceViewports","_targetViewports","_hasSourceElements","addTarget","addSource","getScene","getViewport","getCanvas","_onEvent","_updateDisableHandlers","removeSource","removeTarget","sourceViewport","sourceEvent","isDisabled","targetViewport","ex","fireEvent","vp1","vp2","unique","vps","concat","u","_getUniqueViewports","_remove","remove","disableHandler","elementDisabledEvent","vUid","createSynchronizer","synchronizer","Synchronizer","getSynchronizerById","getSynchronizers","synchronizersFilteredByUIDs","notDisabled","hasSourceViewport","getAllSynchronizers","getToolDataNearPoint","proximity","getToolDataNearPointOnEnabledElement","found","findToolDataNearPointByTool","_toolGroupHasActiveEnabledOrPassiveTool","toolMode","getViewportUIDsWithToolToRender","renderingEngine","getViewports","numViewports","viewportsWithToolEnabled","filterViewportsWithToolEnabled","viewportsWithFrameOfReferenceUID","getFrameOfReferenceUID","filterViewportsWithFrameOfReferenceUID","indexWithinDimensions","dimensions","getTextBoxCoordsCanvas","annotationCanvasPoints","canvasPoints","handlesLeftToRight","handlesTopToBottom","corners","sort","snapFocalPointToSlice","scrollRange","deltaFrames","max","current","posDiffFromFocalPoint","steps","round","floatingStepNumber","frameIndex","newFocalPoint","newSlicePosFromMin","newPosition","getSliceRange","volumeActor","getMapper","getBounds","getVolumeActorCorners","vtkMatrixBuilder","identity","rotateFromDirections","pt","apply","transformedFocalPoint","currentSlice","minX","maxX","val","low","high","scrollThroughStack","volumeUID","invert","viewportType","getCamera","StackViewport","currentImageIdIndex","getCurrentImageIdIndex","numberOfFrames","getImageIds","stackDirection","newImageIdIndex","clip","setImageIdIndex","VolumeViewport","getVolumeActor","setCamera","_typeof","isMergeableObject","cloneIfNecessary","optionsArgument","clone","deepmerge","defaultArrayMerge","destination","indexOf","mergeObject","arrayMerge","wait","leading","trailing","Boolean","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","useRAF","requestAnimationFrame","invokeFunc","time","args","thisArg","startTimer","pendingFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","Date","now","trailingEdge","timeSinceLastInvoke","timeWaiting","remainingWait","debounced","isInvoking","cancel","cancelAnimationFrame","cancelTimer","flush","pending","debounce","defaultValue","getViewportSpecificStateManager","toolStateManager","addToolState","getStyle","setGlobalStyle","setToolStyle","setToolDataStyle","elementEnabledEvent","removeEnabledElement","_removeCornerstoneEventListeners","_addCornerstoneEventListeners","context","save","restore","fillStyle","shouldDrawLines","beginPath","strokeStyle","parseInt","setLineDash","stroke","path","moveTo","lineTo","vec2Utils","linkAnchorPoints","font","textBaseline","fillText","fillRect","textBoxWidth","origFont","measureText","backgroundColor","maxWidth","draw","debug","fillBox","fillTextLines","drawArrow","angle","atan2","drawJoinedLines","cos","PI","sin","drawCircle","radius","arc","drawEllipse","closePath","drawHandles","defaultColor","handleKeys","handleKey","drawnIndependently","drawHandlesIfActive","active","drawLines","lines","line","drawLinkedTextBox","textCoords","textBoxAnchorPoints","xOffset","yCenter","hasMoved","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","inputCorner1","inputCorner2","corner3","corner4","fillOutsideRect","clientWidth","clientHeight","getNewContext","getContext","setShadow","shadow","shadowColor","getDefault","shadowBlur","shadowOffsetX","shadowOffsetY","cameraSyncCallback","synchronizerInstance","cameraModifiedEvent","tViewport","CAMERA_MODIFIED","voiSyncCallback","voiModifiedEvent","range","tScene","getProperty","getRGBTransferFunction","setRange","lower","upper","VOI_MODIFIED","createCameraPositionSynchronizer","synchronizerName","SynchronizerManager","createVOISynchronizer","defaultToolConfiguration","initialConfiguration","deepMerge","strategies","defaultStrategy","configuration","supportedInteractionTypes","activeStrategy","operationData","strategyName","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","_possibleConstructorReturn","_getPrototypeOf","filteredToolState","activateHandleIndex","activeHandleIndex","near","_imagePointNearToolOrHandle","nearToolAndNotMarkedActive","notNearToolAndMarkedActive","getToolDataStyle","BaseTool","PanTool","touchDragCallback","_dragCallback","deltaPointsWorld","updatedPosition","updatedFocalPoint","WindowLevelTool","getVolume","scalarData","middleSliceIndex","floor","StreamingImageVolume","loadStatus","cachedFrames","DEFAULT_IMAGE_DYNAMIC_RANGE","bytesPerVoxel","TypedArrayConstructor","frameLength","Float32Array","frame","voxel","windowWidth","windowCenter","getDefaultActor","getActors","rgbTransferFunction","deltaPointsCanvas","multiplier","imageDynamicRange","_getImageDynamicRange","wwDelta","wcDelta","getRange","_toWindowLevel","newRange","_toLowHighRange","setMappingRange","eventDetail","EVENTS","setStackActorVOI","PetThresholdTool","StackScrollTool","StackScrollMouseWheelTool","ZoomTool","zoomScale","k","parallelScale","clippingRange","directionOfProjection","tmp","parallelProjection","_dragParallelProjection","_dragPerspectiveProjection","DIRECTIONS","X","Y","Z","CUSTOM","VolumeRotateMouseWheelTool","rotateIncrementDegrees","cx","cy","cz","ax","ay","az","newViewUp","mat4","showToolCursor","_setCursorStyle","hideToolCursor","cursorStyle","cursor","defaultReferenceLineColor","defaultReferenceLineControllable","defaultReferenceLineDraggableRotatable","defaultReferenceLineSlabThicknessControlsOn","CrosshairsTool","_getRotationHandleNearImagePoint","_getSlabThicknessHandleNearImagePoint","_activateModify","interactionType","_pointNearTool","activeViewportUIDs","jumpWorld","_jump","rotationPoints","viewportUIDArray","otherViewport","viewportControllable","_getReferenceLineControllable","viewportDraggableRotatable","_getReferenceLineDraggableRotatable","activeOperation","viewportUIDsToRender","_initCrosshairs","viewportToolData","currentCamera","oldCameraPosition","cameraPosition","deltaCameraPosition","vtkMath","oldCameraFocalPoint","cameraFocalPoint","deltaCameraFocalPoint","IsTranslation","otherLinkedViewportsToolDataWithSameCameraDirection","_filterLinkedViewportWithSameOrientationAndScene","toolCenter","renderViewports","previousActiveOperation","previousActiveViewportUIDs","_areViewportUIDArraysEqual","viewportUIDArrayOne","viewportUIDArrayTwo","itemFound","otherViewportToolData","cameraOfTarget","otherLinkedViewportToolDataFromSameScene","otherScene","otherViewportControllable","otherCamera","otherViewPlaneNormal","otherViewportsToolDataWithUniqueCameras","cameraFound","jj","cameraOfStocked","otherNonLinkedViewportToolDataFromSameScene","_filterViewportOrientations","sHeight","sWidth","centerCanvas","slabThicknessPoints","delta","viewportsToolDataToUpdate","_applyDeltaShiftToSelectedViewportCameras","_applyDeltaShiftToViewportCamera","lineViewport","lineSegment1","distanceToPoint1","lineSegment2","distanceToPoint2","_getReferenceLineColor","getReferenceLineColor","getReferenceLineControllable","getReferenceLineDraggableRotatable","_getReferenceLineSlabThicknessControlsOn","getReferenceLineSlabThicknessControlsOn","_deactivateModify","_mouseUpCallback","_mouseDragCallback","isCrosshairsActive","canvasDiagonalLength","crosshairCenterCanvas","worldToCanvas","_filterUniqueViewportOrientations","referenceLines","otherViewportDraggableRotatable","otherViewportSlabThicknessControlsOn","otherCanvasDiagonalLength","otherCanvasCenter","otherViewportCenterWorld","pointWorld0","pointWorld1","pointCanvas0","focalPointCanvas","canvasBox","otherViewportCenterCanvas","canvasUnitVectorFromCenter","canvasVectorFromCenterLong","canvasVectorFromCenterMid","canvasVectorFromCenterShort","canvasVectorFromCenterStart","refLinePointOne","refLinePointTwo","refLinePointThree","refLinePointFour","refLinesCenter","rotHandleOne","rotHandleTwo","stHanlesCenterCanvas","stHanlesCenterWorld","worldUnitVectorFromCenter","matrix","rotate","worldUnitOrthoVectorFromCenter","slabThicknessValue","getSlabThickness","worldOrthoVectorFromCenter","worldVerticalRefPoint","canvasVerticalRefPoint","canvasOrthoVectorFromCenter","stLinePointOne","stLinePointTwo","stLinePointThree","stLinePointFour","stHandleOne","stHandleTwo","stHandleThree","stHandleFour","newRtpoints","newStpoints","viewportColor","lineIndex","viewportSlabThicknessControlsOn","selectedViewportUID","lineActive","drawLineSvg","rotHandlesActive","rotationHandles","rotHandleWorldOne","rotHandleWorldTwo","slabThicknessHandlesActive","slabThicknessHandles","slabThicknessHandleWorldOne","slabThicknessHandleWorldTwo","slabThicknessHandleWorldThree","slabThicknessHandleWorldFour","handleUID","drawHandlesSvg","referenceColorCoordinates","circleRadius","circleUID","existingCircleElement","newCircleElement","drawCircleSvg","editData","otherViewportRotatable","dir1","dir2","finalPointCanvas","originalPointCanvas","_isClockWise","rotationAxis","translate","normal","dotProd","projectedDelta","mod","currentPoint","currentCenter","otherViewportRotationPoints","point2","dotProdDirection","projectedDirection","normalizedProjectedDirection","normalizedProjectedDelta","_pointNearReferenceLine","setSlabThickness","toolDataCanvasCoordinate","stPointLineCanvas1","stPointLineCanvas2","stPointLineCanvas1Start","stPointLineCanvas2Start","BaseAnnotationTool","MIPJumpToClickTool","_getTargetVolumeUID","maxIntensity","brightestPoint","criteriaFunction","canvasPointInWorld","pickedPoint","stepSize","vector","pointT","pointToPick","getIntensityFromWorld","getVoxelPositionBasedOnIntensity","intensity","getScenesContainingVolume","crosshairs","jumpToWorld","BidirectionalTool","worldPos","worldPosition","cachedStats","handleIndex","movingTextBox","newAnnotation","_activateDraw","bottmRight","canavasPoint1","canavasPoint2","_deactivateDraw","firstLineSegmentLength","longAxis","shortAxisPoint0","shortAxisPoint1","longAxisVector","counterClockWisePerpendicularToLongAxis","shortAxis","currentShortAxisVector","canvasCoordPoints","shortAxisDistFromCenter","vectorX","vectorY","xMid","yMid","startX","startY","endX","endY","worldPosDelta","_mouseDragModifyHandle","canvasCoordHandlesCurrent","firstLineSegment","secondLineSegment","proposedPoint","proposedCanvasCoord","fixedCanvasCoord","proposedFirstLineSegment","_movingLongAxisWouldPutItThroughShortAxis","intersectionPoint","intersectionCoord","distFromLeftHandle","distFromRightHandle","distIntersectAndFixedPoint","intersectX","intersectY","leftX","leftY","rightX","rightY","translateHandleIndex","proposedCanvasCoordPoint","canvasCoordsCurrent","longLineSegment","shortLineSegment","helperLine","newIntersectionPoint","distFromTranslateHandle","translatedHandleCoords","vectorInSecondLineDirection","extendedSecondLineSegment","_mouseDragDrawCallback","_mouseDragModifyCallback","toFixed","worldPos3","worldPos4","dist1","index1","index2","_throttledCalculateCachedStats","throttle","_calculateCachedStats","canvasCoordinates","activeHandleCanvasCoords","_getTextLines","canvasTextBoxCoords","drawLinkedTextBoxSvg","getLinkedTextBoxStyle","referencedImageId","getCurrentImageId","imageIds","imageIdForTool","imageId","imagePositionPatient","metaData","getImageIdForTool","colonIndex","substring","LengthTool","canvasPoint1","canvasPoint2","getToolStateForDisplay","VIEWPORT_TYPE","volumeUIDs","ProbeTool","textCanvasCoorinates","drawTextBoxSvg","cachedVolumeStats","Modality","scaling","PET","suvbwToSuvbsa","suvbwToSuvlbm","SUVLbm","SUVBsa","imageData","vtkImageData","worldToIndexVec3","yMultiple","zMultiple","RectangleRoiTool","_getRectangleImageCoordinates","bottomLeftCanvas","bottomRightCanvas","topLeftCanvas","topRightCanvas","bottomLeftWorld","bottomRightWorld","topLeftWorld","topRightWorld","area","mean","stdDev","areaLine","fromCharCode","meanLine","stdDevLine","worldPos1Index","worldPos2Index","_isInsideVolume","iMin","iMax","jMin","jMax","kMin","kMax","count","valueMinusMean","drawRectSvg","EllipticalRoiTool","canvasPos","isDrawing","_getCanvasEllipseCorners","minorEllipse","majorEllipse","pointInMinorEllipse","canvasWidth","canvasHeight","originalHandleCanvas","pointsCanvas","currentCanvasPoints","dX","dY","bottomCanvas","topCanvas","leftCanvas","rightCanvas","_dragHandle","dYCanvas","canvasBottom","canvasTop","newHalfCanvasWidth","canvasLeft","canvasRight","dXCanvas","newHalfCanvasHeight","isEmptyArea","canvasCorners","worldPosStart","indexToWorldVec3","canvasPosStart","startPlusI","startPlusJ","startPlusK","worldPosStartPlusI","plusICanvasDelta","canvasPosStartPlusI","worldPosStartPlusJ","plusJCanvasDelta","canvasPosStartPlusJ","worldPosStartPlusK","plusKCanvasDelta","canvasPosStartPlusK","dI","dJ","dK","drawEllipseSvg"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cornerstoneRender\"), require(\"gl-matrix\"), require(\"vtk.js/Sources/Common/Core/Math\"), require(\"vtk.js/Sources/Common/Core/MatrixBuilder\"), require(\"cornerstoneImageLoaderStreamingVolume\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cornerstoneRender\", \"gl-matrix\", \"vtk.js/Sources/Common/Core/Math\", \"vtk.js/Sources/Common/Core/MatrixBuilder\", \"cornerstoneImageLoaderStreamingVolume\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneTools\"] = factory(require(\"cornerstoneRender\"), require(\"gl-matrix\"), require(\"vtk.js/Sources/Common/Core/Math\"), require(\"vtk.js/Sources/Common/Core/MatrixBuilder\"), require(\"cornerstoneImageLoaderStreamingVolume\"));\n\telse\n\t\troot[\"cornerstoneTools\"] = factory(root[\"window\"], root[\"window\"], root[\"vtk.js/Sources/Common/Core/Math\"], root[\"vtk.js/Sources/Common/Core/MatrixBuilder\"], root[\"window\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__45__, __WEBPACK_EXTERNAL_MODULE__167__, __WEBPACK_EXTERNAL_MODULE__812__, __WEBPACK_EXTERNAL_MODULE__653__, __WEBPACK_EXTERNAL_MODULE__708__) {\nreturn ","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__812__;","module.exports = __WEBPACK_EXTERNAL_MODULE__653__;","module.exports = __WEBPACK_EXTERNAL_MODULE__708__;","module.exports = __WEBPACK_EXTERNAL_MODULE__45__;","module.exports = __WEBPACK_EXTERNAL_MODULE__167__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// From: https://stackoverflow.com/a/2117523/1867984\r\n\r\n// prettier-ignore\r\nexport default function uuidv4() {\r\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n","/**\r\n * @enum Mouse This enum enumerates the different buttons returned by `.buttons` on the mouse event.\r\n * These values are used when setting a tool active in a tool group.\r\n *\r\n * See also: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\r\n */\r\nenum Mouse {\r\n  Primary = 1,\r\n  Secondary = 2,\r\n  Primary_And_Secondary = 3,\r\n  Auxiliary = 4,\r\n  Primary_And_Auxiliary = 5,\r\n  Secondary_And_Auxiliary = 6,\r\n  Primary_And_Secondary_And_Auxiliary = 7,\r\n  Fourth_Button = 8,\r\n  Fifth_Button = 16,\r\n}\r\n\r\nenum Touch {}\r\n\r\nconst enums = {\r\n  Mouse,\r\n  Touch,\r\n}\r\n\r\nexport default enums\r\n","import uuidv4 from '../util/uuidv4'\r\nimport {\r\n  ToolSpecificToolData,\r\n  ToolSpecificToolState,\r\n  FrameOfReferenceSpecificToolState,\r\n  ToolState,\r\n} from '../types/toolStateTypes'\r\nimport cloneDeep from 'lodash.clonedeep'\r\n\r\nimport {\r\n  EVENTS as RENDERING_EVENTS,\r\n  eventTarget,\r\n} from '@ohif/cornerstone-render'\r\n\r\ninterface FilterInterface {\r\n  FrameOfReferenceUID?: string\r\n  toolName?: string\r\n}\r\n\r\n/**\r\n * @class FrameOfReferenceSpecificToolStateManager\r\n *\r\n * This class stores toolState in per FrameOfReference. Tool coordinates are\r\n * in the world coordinates for the scene, which is the patient coordinate system for DICOM.\r\n *\r\n * Each FrameOfReferenceSpecificToolStateManager is seperate, so it is be possible\r\n * to render different annotations of the same tool on different scenes that share\r\n * the same FrameOfReferenceUID, however no core tool in this library currently does this.\r\n * This could be useful for e.g. viewing two different reads of the same data side-by-side.\r\n *\r\n\r\n */\r\nexport default class FrameOfReferenceSpecificToolStateManager {\r\n  private toolState: ToolState\r\n  public readonly uid: string\r\n\r\n  /**\r\n   * @constructor\r\n   * @memberof FrameOfReferenceSpecificToolStateManager\r\n   * @param {string} [uid] The uid of the state manager. If ommited it is autogenerated.\r\n   */\r\n  constructor(uid?: string) {\r\n    if (!uid) {\r\n      uid = uuidv4()\r\n    }\r\n    this.toolState = {}\r\n    this.uid = uid\r\n\r\n    // Listen to the IMAGE_VOLUME_MODIFIED event to invalidate data.\r\n    eventTarget.addEventListener(\r\n      RENDERING_EVENTS.IMAGE_VOLUME_MODIFIED,\r\n      this._imageVolumeModifiedHandler\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @method _imageVolumeModifiedHandler - When a volume is modified we invalidate all\r\n   * of the `toolState` on the volume's `FrameOfReferenceUID`. This is mainly to update\r\n   * statistics calculations when an annotation is drawn whilst data is still loading.\r\n   *\r\n   * @param {CustomEvent} evt - The IMAGE_VOLUME_MODIFIED rendering event.\r\n   */\r\n  _imageVolumeModifiedHandler = (evt: CustomEvent) => {\r\n    const eventData = evt.detail\r\n    const { FrameOfReferenceUID } = eventData\r\n\r\n    const toolState = this.toolState\r\n    const frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n\r\n    if (!frameOfReferenceSpecificToolState) {\r\n      return\r\n    }\r\n\r\n    Object.keys(frameOfReferenceSpecificToolState).forEach((toolName) => {\r\n      const toolSpecificToolState = frameOfReferenceSpecificToolState[toolName]\r\n\r\n      toolSpecificToolState.forEach((toolData) => {\r\n        const { data } = toolData\r\n\r\n        if (data && data.invalidated !== undefined) {\r\n          data.invalidated = true\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @method get - get `ToolSpecificToolState` from the the manager given the `FrameOfReferenceUID` and `toolName`.\r\n   *\r\n   * @param {string} FrameOfReferenceUID - The UID of the FrameOfReference to retrieve data for.\r\n   * @param {string} toolName - The name of the tool to retrieve data for.\r\n   */\r\n  get = (\r\n    FrameOfReferenceUID: string,\r\n    toolName: string\r\n  ): ToolSpecificToolState | undefined => {\r\n    const frameOfReferenceSpecificToolState = this.toolState[\r\n      FrameOfReferenceUID\r\n    ]\r\n\r\n    if (!frameOfReferenceSpecificToolState) {\r\n      return\r\n    }\r\n\r\n    return frameOfReferenceSpecificToolState[toolName]\r\n  }\r\n\r\n  /**\r\n   * @method getToolStateByToolUID Given the unique identified for the some `toolData`,\r\n   * returns the `toolData` from the `toolState`. Searches are more efficient if either/both of\r\n   * the `FrameOfReferenceUID` and the `toolName` are given by the `filter`.\r\n   *\r\n   * @param {string} toolUID The unique identifier of the `toolData`.\r\n   * @param {FilterInterface} [filter] A `filter` which reduces the scope of the search.\r\n   *\r\n   * @returns {ToolSpecificToolData} The retrieved `toolData`.\r\n   */\r\n  getToolStateByToolUID = (\r\n    toolUID: string,\r\n    filter: FilterInterface = {}\r\n  ): ToolSpecificToolData => {\r\n    const toolSpecificToolStateAndIndex = this._getToolSpecificToolStateAndIndex(\r\n      toolUID,\r\n      filter\r\n    )\r\n\r\n    if (!toolSpecificToolStateAndIndex) {\r\n      return\r\n    }\r\n\r\n    const { toolSpecificToolState, index } = toolSpecificToolStateAndIndex\r\n\r\n    return toolSpecificToolState[index]\r\n  }\r\n\r\n  /**\r\n   * @method addToolState Adds an instance of `ToolSpecificToolData` to the `toolState`.\r\n   *\r\n   * @param {ToolSpecificToolData} toolData The toolData to add.\r\n   */\r\n  addToolState = (toolData: ToolSpecificToolData) => {\r\n    const { metadata } = toolData\r\n    const { FrameOfReferenceUID, toolName } = metadata\r\n\r\n    const toolState = this.toolState\r\n\r\n    let frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n\r\n    if (!frameOfReferenceSpecificToolState) {\r\n      toolState[FrameOfReferenceUID] = {}\r\n\r\n      frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n    }\r\n\r\n    let toolSpecificToolState = frameOfReferenceSpecificToolState[toolName]\r\n\r\n    if (!toolSpecificToolState) {\r\n      frameOfReferenceSpecificToolState[toolName] = []\r\n\r\n      toolSpecificToolState = frameOfReferenceSpecificToolState[toolName]\r\n    }\r\n\r\n    toolSpecificToolState.push(toolData)\r\n  }\r\n\r\n  /**\r\n   * @method removeToolState Removes an instance of `ToolSpecificToolData` from the `toolState`.\r\n   *\r\n   * @param {ToolSpecificToolData} toolData The toolData to remove.\r\n   */\r\n  removeToolState = (toolData: ToolSpecificToolData) => {\r\n    const { metadata } = toolData\r\n    const { FrameOfReferenceUID, toolName, toolUID } = metadata\r\n    const toolState = this.toolState\r\n\r\n    const frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n\r\n    if (!frameOfReferenceSpecificToolState) {\r\n      throw new Error(\r\n        `frameOfReferenceSpecificToolState with FrameOfReferenceUID ${FrameOfReferenceUID} does not exist.`\r\n      )\r\n    }\r\n\r\n    const toolSpecificToolState = frameOfReferenceSpecificToolState[toolName]\r\n    if (!toolSpecificToolState) {\r\n      throw new Error(\r\n        `toolSpecificToolState for toolName ${toolName} on FrameOfReferenceUID ${FrameOfReferenceUID} does not exist.`\r\n      )\r\n    }\r\n\r\n    const index = toolSpecificToolState.findIndex(\r\n      (toolData) => toolData.metadata.toolUID === toolUID\r\n    )\r\n\r\n    toolSpecificToolState.splice(index, 1)\r\n  }\r\n\r\n  /**\r\n   * @method removeToolStateByToolUID Given the unique identified for the some `toolData`,\r\n   * removes the `toolData` from the `toolState`. Searches are more efficient if either/both of\r\n   * the `FrameOfReferenceUID` and the `toolName` are given by the `filter`.\r\n   *\r\n   * @param {string} toolUID The unique identifier of the `toolData` to remove.\r\n   * @param {FilterInterface} [filter] A `filter` which reduces the scope of the search.\r\n   */\r\n  removeToolStateByToolUID = (\r\n    toolUID: string,\r\n    filter: FilterInterface = {}\r\n  ) => {\r\n    const toolSpecificToolStateAndIndex = this._getToolSpecificToolStateAndIndex(\r\n      toolUID,\r\n      filter\r\n    )\r\n\r\n    if (!toolSpecificToolStateAndIndex) {\r\n      return\r\n    }\r\n\r\n    const { toolSpecificToolState, index } = toolSpecificToolStateAndIndex\r\n\r\n    toolSpecificToolState.splice(index, 1)\r\n  }\r\n\r\n  /**\r\n   * @method saveToolState Returns a section of the toolState. Useful for serialization.\r\n   *\r\n   * - If no arguments are given, the entire `ToolState` instance is returned.\r\n   * - If the `FrameOfReferenceUID` is given, the corresponding\r\n   * `FrameOfReferenceSpecificToolState` instance is returned.\r\n   * - If both the `FrameOfReferenceUID` and the `toolName` are are given, the\r\n   * corresponding `ToolSpecificToolState` instance is returned.\r\n   *\r\n   * @param {string} [FrameOfReferenceUID] A filter string for returning the `toolState` of a specific frame of reference.\r\n   * @param {string} [toolName] A filter string for returning `toolState` for a specific tool on a specific frame of reference.\r\n   *\r\n   * @returns {ToolSpecificToolData} The retrieved `toolData`.\r\n   */\r\n  saveToolState = (\r\n    FrameOfReferenceUID?: string,\r\n    toolName?: string\r\n  ): ToolState | FrameOfReferenceSpecificToolState | ToolSpecificToolState => {\r\n    const toolState = this.toolState\r\n\r\n    if (FrameOfReferenceUID && toolName) {\r\n      const frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n\r\n      if (!frameOfReferenceSpecificToolState) {\r\n        return\r\n      }\r\n\r\n      const toolSpecificToolState = frameOfReferenceSpecificToolState[toolName]\r\n\r\n      return cloneDeep(toolSpecificToolState)\r\n    } else if (FrameOfReferenceUID) {\r\n      const frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n\r\n      return cloneDeep(frameOfReferenceSpecificToolState)\r\n    }\r\n\r\n    return cloneDeep(toolState)\r\n  }\r\n\r\n  /**\r\n   * @method restoreToolState Restores a section of the `toolState`. Useful for loading in serialized data.\r\n   *\r\n   * - If no arguments are given, the entire `ToolState` instance is restored.\r\n   * - If the `FrameOfReferenceUID` is given, the corresponding\r\n   * `FrameOfReferenceSpecificToolState` instance is restored.\r\n   * - If both the `FrameOfReferenceUID` and the `toolName` are are given, the\r\n   * corresponding `ToolSpecificToolState` instance is restored.\r\n   *\r\n   * @param {string} [FrameOfReferenceUID] A filter string for restoring only the `toolState` of a specific frame of reference.\r\n   * @param {string} [toolName] A filter string for restoring `toolData` for a specific tool on a specific frame of reference.\r\n   */\r\n  restoreToolState = (\r\n    state:\r\n      | ToolState\r\n      | FrameOfReferenceSpecificToolState\r\n      | ToolSpecificToolState,\r\n    FrameOfReferenceUID?: string,\r\n    toolName?: string\r\n  ) => {\r\n    const toolState = this.toolState\r\n\r\n    if (FrameOfReferenceUID && toolName) {\r\n      // Set ToolSpecificToolState for FrameOfReferenceUID and toolName.\r\n\r\n      let frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n\r\n      if (!frameOfReferenceSpecificToolState) {\r\n        toolState[FrameOfReferenceUID] = {}\r\n\r\n        frameOfReferenceSpecificToolState = toolState[FrameOfReferenceUID]\r\n      }\r\n\r\n      frameOfReferenceSpecificToolState[toolName] = <ToolSpecificToolState>state\r\n    } else if (FrameOfReferenceUID) {\r\n      // Set FrameOfReferenceSpecificToolState for FrameOfReferenceUID.\r\n\r\n      toolState[FrameOfReferenceUID] = <FrameOfReferenceSpecificToolState>state\r\n    } else {\r\n      // Set entire toolState\r\n\r\n      this.toolState = <ToolState>state\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method _getToolSpecificToolStateAndIndex Given the unique identifier for a tool,\r\n   * returns the `ToolSpecificToolState` it belongs to, and the `index` of its position in that array.\r\n   *\r\n   * @param {string} toolUID The unique identifier of the `toolData`.\r\n   * @param {FilterInterface} [filter] A `filter` which reduces the scope of the search.\r\n   *\r\n   * @returns {object}\r\n   * @returns {object.toolSpecificToolState} The `ToolSpecificToolState` instance containing the `toolData`.\r\n   * @returns {object.index} The `index` of the `toolData` in the `toolSpecificToolState` array.\r\n   */\r\n  private _getToolSpecificToolStateAndIndex(\r\n    toolUID: string,\r\n    filter: FilterInterface\r\n  ): { toolSpecificToolState: ToolSpecificToolState; index: number } {\r\n    const { toolName, FrameOfReferenceUID } = filter\r\n    const toolState = this.toolState\r\n\r\n    let frameOfReferenceUIDKeys\r\n\r\n    if (FrameOfReferenceUID) {\r\n      frameOfReferenceUIDKeys = [FrameOfReferenceUID]\r\n    } else {\r\n      frameOfReferenceUIDKeys = Object.keys(toolState)\r\n    }\r\n\r\n    const numFrameOfReferenceUIDKeys = frameOfReferenceUIDKeys.length\r\n\r\n    for (let i = 0; i < numFrameOfReferenceUIDKeys; i++) {\r\n      const frameOfReferenceUID = frameOfReferenceUIDKeys[i]\r\n      const frameOfReferenceSpecificToolState = toolState[frameOfReferenceUID]\r\n\r\n      let toolNameKeys\r\n\r\n      if (toolName) {\r\n        toolNameKeys = [toolName]\r\n      } else {\r\n        toolNameKeys = Object.keys(frameOfReferenceSpecificToolState)\r\n      }\r\n\r\n      const numToolNameKeys = toolNameKeys.length\r\n\r\n      for (let j = 0; j < numToolNameKeys; j++) {\r\n        const toolName = toolNameKeys[j]\r\n\r\n        const toolSpecificToolState =\r\n          frameOfReferenceSpecificToolState[toolName]\r\n\r\n        const index = toolSpecificToolState.findIndex(\r\n          (toolData) => toolData.metadata.toolUID === toolUID\r\n        )\r\n\r\n        if (index !== -1) {\r\n          return { toolSpecificToolState, index }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst defaultFrameOfReferenceSpecificToolStateManager = new FrameOfReferenceSpecificToolStateManager(\r\n  'DEFAULT'\r\n)\r\n\r\nexport { defaultFrameOfReferenceSpecificToolStateManager }\r\n","/**\r\n * @enum ToolModes - This enum defines the 4 tool states which are available.\r\n *\r\n * Active:\r\n * - Can be actively used by mouse/touch events mapped to its `ToolBinding`s.\r\n * - Can add data if an annotation tool.\r\n * - Can be passively interacted by grabbing a tool or its handles.\r\n * - Renders data if the tool has a `renderToolData` method.\r\n * Passive:\r\n * - Can be passively interacted by grabbing a tool or its handles.\r\n * - Renders data if the tool has a `renderToolData` method.\r\n * Enabled:\r\n * - Renders data if the tool has a `renderToolData` method.\r\n * Disabled:\r\n * - Tool data does not render.\r\n */\r\nenum ToolModes {\r\n  Active = 'Active',\r\n  Passive = 'Passive',\r\n  Enabled = 'Enabled',\r\n  Disabled = 'Disabled',\r\n}\r\n\r\nexport default ToolModes\r\n","/**\r\n * @enum ToolDataStates - This enum defines the 3 possible states available for\r\n *  a ToolSpecificToolData instance.\r\n *\r\n * Default:\r\n *   The default state for the tool data instance\r\n * Highlighted:\r\n *   The tool data should be rendered in \"highlighted\" mode in response to\r\n *   direct user interaction;\r\n * Selected:\r\n *   The tool data has been selected by the user;\r\n * Locked:\r\n *   The tool data has been locked;\r\n */\r\n\r\nenum ToolDataStates {\r\n  Default = '',\r\n  Highlighted = 'Highlighted',\r\n  Selected = 'Selected',\r\n  Locked = 'Locked',\r\n}\r\n\r\nexport default ToolDataStates\r\n","/**\r\n *  @enum Enumerates the events for cornerstoneTools3D Tools. Native events are captured,\r\n *  normalized, and re-triggered with a `cornerstoneTools3D` prefix. This allows\r\n *  us to handle events consistently across different browsers. Event types:\r\n *\r\n * - Mouse\r\n * - Touch\r\n * - Keyboard\r\n *\r\n * Missing:\r\n *\r\n * - Pointer\r\n * - Non-interaction events (measurement removed/added)\r\n *\r\n *  @enum {String}\r\n *  @readonly\r\n */\r\nenum CornerstoneTools3DEvents {\r\n  //\r\n  // MOUSE\r\n  //\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/mousedown\r\n   *  @type {String}\r\n   */\r\n  MOUSE_DOWN = 'cornerstonetools3dmousedown',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/mouseup\r\n   *  @type {String}\r\n   */\r\n  MOUSE_UP = 'cornerstonetools3dmouseup',\r\n\r\n  /**\r\n   * Is fired if a handled `MOUSE_DOWN` event does not `stopPropagation`. The hook\r\n   * we use to create new measurement data for mouse events.\r\n   *  @type {String}\r\n   */\r\n  MOUSE_DOWN_ACTIVATE = 'cornerstonetools3dmousedownactivate',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/drag\r\n   *  @type {String}\r\n   */\r\n  MOUSE_DRAG = 'cornerstonetools3dmousedrag',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/mousemove\r\n   *  @type {String}\r\n   */\r\n  MOUSE_MOVE = 'cornerstonetools3dmousemove',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/click\r\n   *  @type {String}\r\n   */\r\n  MOUSE_CLICK = 'cornerstonetools3dmouseclick',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/dblclick\r\n   *  @type {String}\r\n   */\r\n  MOUSE_DOUBLE_CLICK = 'cornerstonetools3dmousedoubleclick',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n   *  @type {String}\r\n   */\r\n  MOUSE_WHEEL = 'cornerstonetools3dmousewheel',\r\n\r\n  //\r\n  // TOUCH\r\n  //\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/touchstart\r\n   *  @type {String}\r\n   */\r\n  TOUCH_START = 'cornerstonetools3dtouchstart',\r\n\r\n  /**\r\n   * Is fired if a handled `TOUCH_START` event does not `stopPropagation`. The hook\r\n   * we use to create new measurement data for touch events.\r\n   *  @type {String}\r\n   */\r\n  TOUCH_START_ACTIVE = 'cornerstonetools3dtouchstartactive',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  TOUCH_END = 'cornerstonetools3dtouchend',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  TOUCH_DRAG = 'cornerstonetools3dtouchdrag',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  TOUCH_DRAG_END = 'cornerstonetools3dtouchdragend',\r\n\r\n  /**\r\n   * http://hammerjs.github.io/recognizer-pinch/\r\n   *  @type {String}\r\n   */\r\n  TOUCH_PINCH = 'cornerstonetools3dtouchpinch',\r\n\r\n  /**\r\n   * http://hammerjs.github.io/recognizer-rotate/\r\n   *  @type {String}\r\n   */\r\n  TOUCH_ROTATE = 'cornerstonetools3dtouchrotate',\r\n\r\n  /**\r\n   * http://hammerjs.github.io/recognizer-press/\r\n   *  @type {String}\r\n   */\r\n  TOUCH_PRESS = 'cornerstonetools3dtouchpress',\r\n\r\n  /**\r\n   * http://hammerjs.github.io/recognizer-tap/\r\n   *  @type {String}\r\n   */\r\n  TAP = 'cornerstonetools3dtap',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  DOUBLE_TAP = 'cornerstonetools3ddoubletap',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  MULTI_TOUCH_START = 'cornerstonetools3dmultitouchstart',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  MULTI_TOUCH_START_ACTIVE = 'cornerstonetools3dmultitouchstartactive',\r\n\r\n  /**\r\n   *  @type {String}\r\n   */\r\n  MULTI_TOUCH_DRAG = 'cornerstonetools3dmultitouchdrag',\r\n\r\n  //\r\n  // KEYBOARD\r\n  //\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/keydown\r\n   *  @type {String}\r\n   */\r\n  KEY_DOWN = 'cornerstonetools3dkeydown',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/keyup\r\n   *  @type {String}\r\n   */\r\n  KEY_UP = 'cornerstonetools3dkeyup',\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/Events/keypress\r\n   *  @type {String}\r\n   */\r\n  KEY_PRESS = 'cornerstonetools3dkeypress',\r\n\r\n  //\r\n  // MEASUREMENTS\r\n  //\r\n\r\n  MEASUREMENT_SELECTION_CHANGE = 'cornerstonetools3dmeasurementselectionchange',\r\n}\r\n\r\nexport default CornerstoneTools3DEvents\r\n","import { Settings } from '@ohif/cornerstone-render'\r\nimport { ToolModes, ToolDataStates } from '../enums'\r\n\r\n/*\r\n * Initialization\r\n */\r\n\r\nSettings.getDefaultSettings().set('tool.style', {\r\n  color: 'rgb(255, 255, 0)',\r\n  colorHighlighted: 'rgb(0, 255, 0)',\r\n  colorSelected: 'rgb(0, 255, 0)',\r\n  colorLocked: 'rgb(255, 255, 0)',\r\n  lineWidth: '1',\r\n  lineDash: '',\r\n  textBox: {\r\n    fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\r\n    fontSize: '14px',\r\n    color: 'rgb(255, 255, 0)',\r\n    colorHighlighted: 'rgb(0, 255, 0)',\r\n    colorSelected: 'rgb(0, 255, 0)',\r\n    colorLocked: 'rgb(255, 255, 0)',\r\n    background: '',\r\n    link: {\r\n      lineWidth: '1',\r\n      lineDash: '2,3',\r\n    },\r\n  },\r\n})\r\n\r\ninitializeDefaultStyleAlternatives()\r\n\r\n/*\r\n * Definitions\r\n */\r\n\r\nfunction initializeDefaultStyleAlternatives(): void {\r\n  const modes = ['', ToolModes.Active, ToolModes.Passive]\r\n  const states = [\r\n    ToolDataStates.Default,\r\n    ToolDataStates.Highlighted,\r\n    ToolDataStates.Selected,\r\n    ToolDataStates.Locked,\r\n  ]\r\n  const defaultSettings = Settings.getDefaultSettings()\r\n  defaultSettings.forEach((name: string) => {\r\n    const nameEndsWith = (string) => string.length > 0 && name.endsWith(string)\r\n    if (states.some(nameEndsWith) || modes.some(nameEndsWith)) {\r\n      return\r\n    }\r\n    states.forEach((state) => {\r\n      modes.forEach((mode) => {\r\n        const key = `${name}${state}${mode}`\r\n        defaultSettings.set(key, defaultSettings.get(key))\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Build a list of alternative property names in ascending order of priority\r\n * @param {string} property The base property name -- e.g., 'color'\r\n * @param {ToolDataStates} state An optional state to determine the final property name\r\n * @param {ToolModes} mode An optional mode to determine the final property name\r\n * @returns {string[]} A list of alternative property names\r\n */\r\nfunction getStyleAlternatives(\r\n  property: string,\r\n  state?: ToolDataStates,\r\n  mode?: ToolModes\r\n): string[] {\r\n  const list = [`tool.style.${property}`]\r\n  if (state) list.push(`${list[0]}${state}`)\r\n  if (mode) list.push(`${list[list.length - 1]}${mode}`)\r\n  return list\r\n}\r\n\r\nfunction getStyleProperty(\r\n  settings: Settings,\r\n  property: string,\r\n  state?: ToolDataStates,\r\n  mode?: ToolModes\r\n): unknown {\r\n  // `alternatives` is a list of property names with priority in ascending\r\n  // order like: ['color', 'colorSelected', 'colorSelectedActive']\r\n  // Thus, we attempt resolving property names in reverse order\r\n  const alternatives = getStyleAlternatives(property, state, mode)\r\n  for (let i = alternatives.length - 1; i >= 0; --i) {\r\n    const style = settings.get(alternatives[i])\r\n    if (style !== undefined) {\r\n      return style\r\n    }\r\n  }\r\n}\r\n\r\nfunction getDefaultStyleProperty(\r\n  property: string,\r\n  state?: ToolDataStates,\r\n  mode?: ToolModes\r\n): unknown {\r\n  return getStyleProperty(Settings.getRuntimeSettings(), property, state, mode)\r\n}\r\n\r\n/**\r\n * @function getFont - Returns a font string of the form\r\n * \"{fontSize}px fontName\" used by `canvas`.\r\n * @param {Settings} settings An optional Settings instance to read from.\r\n * @param {ToolDataStates} state An optional state to determine the final property name\r\n * @param {ToolModes} mode An optional mode to determine the final property name\r\n * @returns {string} The font string.\r\n */\r\nfunction getFont(\r\n  settings?: Settings,\r\n  state?: ToolDataStates,\r\n  mode?: ToolModes\r\n): string {\r\n  const sty = Settings.assert(settings)\r\n  const fontSize = getStyleProperty(sty, 'textBox.fontSize', state, mode)\r\n  const fontFamily = getStyleProperty(sty, 'textBox.fontFamily', state, mode)\r\n  return `${fontSize}px ${fontFamily}`\r\n}\r\n\r\nexport {\r\n  initializeDefaultStyleAlternatives,\r\n  getStyleAlternatives,\r\n  getStyleProperty,\r\n  getDefaultStyleProperty,\r\n  getFont,\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Point2 } from '../../../types'\r\n\r\n/**\r\n * Find the closest point to the target point\r\n *\r\n * @public\r\n * @param sourcePoints The potential source points.\r\n * @param targetPoint The target point, used to find the closest source.\r\n * @returns The closest point in the array of point sources\r\n */\r\nexport default function findClosestPoint(\r\n  sourcePoints: Array<Point2>,\r\n  targetPoint: Point2\r\n): Point2 {\r\n  let minPoint = [0, 0]\r\n  let minDistance = Number.MAX_SAFE_INTEGER\r\n\r\n  sourcePoints.forEach(function (sourcePoint) {\r\n    const distance = _distanceBetween(targetPoint, sourcePoint)\r\n\r\n    if (distance < minDistance) {\r\n      minDistance = distance\r\n      minPoint = [...sourcePoint]\r\n    }\r\n  })\r\n\r\n  return minPoint as Point2\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param p1\r\n * @param p2\r\n */\r\nfunction _distanceBetween(p1: Point2, p2: Point2): number {\r\n  const [x1, y1] = p1\r\n  const [x2, y2] = p2\r\n\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n}\r\n","// Pulled from source: https://github.com/w8r/liang-barsky\r\n// MIT Licensed.\r\n\r\n/**\r\n * @preserve\r\n * Fast, destructive implemetation of Liang-Barsky line clipping algorithm.\r\n * It clips a 2D segment by a rectangle.\r\n * @author Alexander Milevski <info@w8r.name>\r\n * @license MIT\r\n */\r\n\r\nconst EPSILON = 1e-6\r\nconst INSIDE = 1\r\nconst OUTSIDE = 0\r\n\r\nfunction clipT(num, denom, c) {\r\n  const [tE, tL] = c\r\n  if (Math.abs(denom) < EPSILON) return num < 0\r\n  const t = num / denom\r\n\r\n  if (denom > 0) {\r\n    if (t > tL) return 0\r\n    if (t > tE) c[0] = t\r\n  } else {\r\n    if (t < tE) return 0\r\n    if (t < tL) c[1] = t\r\n  }\r\n  return 1\r\n}\r\n\r\n/**\r\n * @param  {Point} a\r\n * @param  {Point} b\r\n * @param  {BoundingBox} box [xmin, ymin, xmax, ymax]\r\n * @param  {Point?} [da]\r\n * @param  {Point?} [db]\r\n * @return {number}\r\n */\r\nexport default function clip(a, b, box, da?, db?) {\r\n  const [x1, y1] = a\r\n  const [x2, y2] = b\r\n  const dx = x2 - x1\r\n  const dy = y2 - y1\r\n\r\n  if (da === undefined || db === undefined) {\r\n    da = a\r\n    db = b\r\n  } else {\r\n    da[0] = a[0]\r\n    da[1] = a[1]\r\n    db[0] = b[0]\r\n    db[1] = b[1]\r\n  }\r\n\r\n  if (\r\n    Math.abs(dx) < EPSILON &&\r\n    Math.abs(dy) < EPSILON &&\r\n    x1 >= box[0] &&\r\n    x1 <= box[2] &&\r\n    y1 >= box[1] &&\r\n    y1 <= box[3]\r\n  ) {\r\n    return INSIDE\r\n  }\r\n\r\n  const c = [0, 1]\r\n  if (\r\n    clipT(box[0] - x1, dx, c) &&\r\n    clipT(x1 - box[2], -dx, c) &&\r\n    clipT(box[1] - y1, dy, c) &&\r\n    clipT(y1 - box[3], -dy, c)\r\n  ) {\r\n    const [tE, tL] = c\r\n    if (tL < 1) {\r\n      db[0] = x1 + tL * dx\r\n      db[1] = y1 + tL * dy\r\n    }\r\n    if (tE > 0) {\r\n      da[0] += tE * dx\r\n      da[1] += tE * dy\r\n    }\r\n    return INSIDE\r\n  }\r\n  return OUTSIDE\r\n}\r\n","import findClosestPoint from './findClosestPoint'\r\nimport liangBarksyClip from './liangBarksyClip'\r\nimport isEqual from './isEqual'\r\n\r\nexport default { isEqual, findClosestPoint, liangBarksyClip }\r\n","import { Point2 } from '../../../types'\r\n\r\n/**\r\n * @function isEqual returns equal if the two vec2s are identical within the\r\n * given tolerance in each dimension.\r\n *\r\n * @param {Point2} v1 - The first 2 vector\r\n * @param {Point2} v2 - The second 2 vector.\r\n * @param {number} [tolerance = 1e-5] The acceptable tolerance.\r\n *\r\n * @returns {boolean} True if the two values are within the tolerance levels.\r\n */\r\nexport default function isEqual(\r\n  v1: Point2,\r\n  v2: Point2,\r\n  tolerance = 1e-5\r\n): boolean {\r\n  return (\r\n    Math.abs(v1[0] - v2[0]) < tolerance && Math.abs(v1[1] - v2[1]) < tolerance\r\n  )\r\n}\r\n","import { Point2 } from '../../../types'\r\n\r\n/**\r\n * @function pointInEllipse Returns true if the `location ` is within the ellipse.\r\n *\r\n * A point is inside the ellipse if x^2/a^2 + y^2/b^2 <= 1,\r\n * Where [x,y] is the coordinate and a and b are the x and y axes of the ellipse.\r\n *\r\n * @param  {Object} ellipse  Object defining the ellipse.\r\n * @param  {Point2} location The location of the point.\r\n * @returns {boolean} True if the point is within the ellipse.\r\n */\r\nexport default function pointInEllipse(ellipse, location: Point2): boolean {\r\n  const xRadius = ellipse.width / 2\r\n  const yRadius = ellipse.height / 2\r\n\r\n  if (xRadius <= 0.0 || yRadius <= 0.0) {\r\n    return false\r\n  }\r\n\r\n  const center = [ellipse.left + xRadius, ellipse.top + yRadius]\r\n  const normalized = [location[0] - center[0], location[1] - center[1]]\r\n\r\n  const inEllipse =\r\n    (normalized[0] * normalized[0]) / (xRadius * xRadius) +\r\n      (normalized[1] * normalized[1]) / (yRadius * yRadius) <=\r\n    1.0\r\n\r\n  return inEllipse\r\n}\r\n","import { Types } from '@ohif/cornerstone-render'\r\nfunction dist2(p1: Types.Point2, p2: Types.Point2): number {\r\n  return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1])\r\n}\r\n\r\n/**\r\n * Calculates the distance-squared of the point to a line\r\n *\r\n * @param lineStart x,y coordinates of the start of the line\r\n * @param lineEnd x,y coordinates of the end of the line\r\n * @param point x,y of the point\r\n * @returns distance-squared\r\n */\r\nexport default function distanceToPointSquared(\r\n  lineStart: Types.Point2,\r\n  lineEnd: Types.Point2,\r\n  point: Types.Point2\r\n): number {\r\n  const d2 = dist2(lineStart, lineEnd)\r\n\r\n  if (d2 === 0) {\r\n    return dist2(point, lineStart)\r\n  }\r\n\r\n  const t =\r\n    ((point[0] - lineStart[0]) * (lineEnd[0] - lineStart[0]) +\r\n      (point[1] - lineStart[1]) * (lineEnd[1] - lineStart[1])) /\r\n    d2\r\n\r\n  if (t < 0) {\r\n    return dist2(point, lineStart)\r\n  }\r\n  if (t > 1) {\r\n    return dist2(point, lineEnd)\r\n  }\r\n\r\n  const pt = [\r\n    lineStart[0] + t * (lineEnd[0] - lineStart[0]),\r\n    lineStart[1] + t * (lineEnd[1] - lineStart[1]),\r\n  ]\r\n\r\n  return dist2(point, pt)\r\n}\r\n","import { Types } from '@ohif/cornerstone-render'\r\n\r\n// Returns sign of number\r\nfunction sign(x: any) {\r\n  return typeof x === 'number'\r\n    ? x\r\n      ? x < 0\r\n        ? -1\r\n        : 1\r\n      : x === x\r\n      ? 0\r\n      : NaN\r\n    : NaN\r\n}\r\n\r\n/**\r\n * Calculates the intersection point between two lines in the 2D plane\r\n *\r\n * @param line1Start - x,y coordinates of the start of the first line\r\n * @param line1End - x,y coordinates of the end of the first line\r\n * @param line2Start - x,y coordinates of the start of the second line\r\n * @param line2End - x,y coordinates of the end of the second line\r\n * @returns [x,y] - point x,y of the point\r\n */\r\n\r\nexport default function intersectLine(\r\n  line1Start: Types.Point2,\r\n  line1End: Types.Point2,\r\n  line2Start: Types.Point2,\r\n  line2End: Types.Point2\r\n): number[] {\r\n  const [x1, y1] = line1Start\r\n  const [x2, y2] = line1End\r\n  const [x3, y3] = line2Start\r\n  const [x4, y4] = line2End\r\n\r\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\r\n  const a1 = y2 - y1\r\n  const b1 = x1 - x2\r\n  const c1 = x2 * y1 - x1 * y2\r\n\r\n  // Compute r3 and r4\r\n  const r3 = a1 * x3 + b1 * y3 + c1\r\n  const r4 = a1 * x4 + b1 * y4 + c1\r\n\r\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\r\n   * same side of line 1, the line segments do not intersect.\r\n   */\r\n\r\n  if (r3 !== 0 && r4 !== 0 && sign(r3) === sign(r4)) {\r\n    return\r\n  }\r\n\r\n  // Compute a2, b2, c2\r\n  const a2 = y4 - y3\r\n  const b2 = x3 - x4\r\n  const c2 = x4 * y3 - x3 * y4\r\n\r\n  // Compute r1 and r2\r\n  const r1 = a2 * x1 + b2 * y1 + c2\r\n  const r2 = a2 * x2 + b2 * y2 + c2\r\n\r\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\r\n   * on same side of second line segment, the line segments do\r\n   * not intersect.\r\n   */\r\n\r\n  if (r1 !== 0 && r2 !== 0 && sign(r1) === sign(r2)) {\r\n    return\r\n  }\r\n\r\n  /* Line segments intersect: compute intersection point.\r\n   */\r\n\r\n  const denom = a1 * b2 - a2 * b1\r\n  let num\r\n\r\n  /* The denom/2 is to get rounding instead of truncating.  It\r\n   * is added or subtracted to the numerator, depending upon the\r\n   * sign of the numerator.\r\n   */\r\n\r\n  num = b1 * c2 - b2 * c1\r\n  const x = num / denom\r\n\r\n  num = a2 * c1 - a1 * c2\r\n  const y = num / denom\r\n\r\n  const intersectionPoint = [x, y]\r\n\r\n  return intersectionPoint\r\n}\r\n","import distanceToPoint from './distanceToPoint'\r\nimport distanceToPointSquared from './distanceToPointSquared'\r\nimport intersectLine from './intersectLine'\r\n\r\nconst lineSegment = {\r\n  distanceToPoint,\r\n  distanceToPointSquared,\r\n  intersectLine,\r\n}\r\n\r\nexport default lineSegment\r\n","import distanceToPointSquared from './distanceToPointSquared'\r\nimport { Types } from '@ohif/cornerstone-render'\r\n\r\n/**\r\n * Calculates the distance of the point to a line\r\n *\r\n * @param lineStart x,y coordinates of the start of the line\r\n * @param lineEnd x,y coordinates of the end of the line\r\n * @param point x,y of the point\r\n * @returns distance\r\n */\r\nexport default function distanceToPoint(\r\n  lineStart: Types.Point2,\r\n  lineEnd: Types.Point2,\r\n  point: Types.Point2\r\n): number {\r\n  if (lineStart.length !== 2 || lineEnd.length !== 2 || point.length !== 2) {\r\n    throw Error(\r\n      'lineStart, lineEnd, and point should have 2 elements of [x, y]'\r\n    )\r\n  }\r\n\r\n  return Math.sqrt(distanceToPointSquared(lineStart, lineEnd, point))\r\n}\r\n","import distanceToPoint from './distanceToPoint'\r\n\r\nconst rectangle = {\r\n  distanceToPoint,\r\n}\r\n\r\nexport default rectangle\r\n","import lineSegment from '../line'\r\nimport { Types } from '@ohif/cornerstone-render'\r\n\r\ntype rectLineSegmentas = {\r\n  top: number[][]\r\n  right: number[][]\r\n  bottom: number[][]\r\n  left: number[][]\r\n}\r\n\r\nfunction rectToLineSegments(\r\n  left: number,\r\n  top: number,\r\n  width: number,\r\n  height: number\r\n): rectLineSegmentas {\r\n  const topLineStart = [left, top]\r\n  const topLineEnd = [left + width, top]\r\n\r\n  const rigthLineStart = [left + width, top]\r\n  const rigthLineEnd = [left + width, top + height]\r\n\r\n  const bottomLineStart = [left + width, top + height]\r\n  const bottomLineEnd = [left, top + height]\r\n\r\n  const leftLineStart = [left, top + height]\r\n  const leftLineEnd = [left, top]\r\n\r\n  const lineSegments = {\r\n    top: [topLineStart, topLineEnd],\r\n    right: [rigthLineStart, rigthLineEnd],\r\n    bottom: [bottomLineStart, bottomLineEnd],\r\n    left: [leftLineStart, leftLineEnd],\r\n  }\r\n\r\n  return lineSegments\r\n}\r\n\r\n/**\r\n * Calculates distance of the point to the rectangle. It calculates the minimum\r\n * distance between the point and each line segment of the rectangle.\r\n *\r\n * @param rect : coordinates of the rectangle [left, top, width, height]\r\n * @param point : [x,y] coordinates of a point\r\n * @returns\r\n */\r\nexport default function distanceToPoint(\r\n  rect: number[],\r\n  point: Types.Point2\r\n): number {\r\n  if (rect.length !== 4 || point.length !== 2) {\r\n    throw Error(\r\n      'rectangle:[left, top, width, height] or point: [x,y] not defined correctly'\r\n    )\r\n  }\r\n\r\n  const [left, top, width, height] = rect\r\n\r\n  let minDistance = 655535\r\n  const lineSegments = rectToLineSegments(left, top, width, height)\r\n\r\n  Object.keys(lineSegments).forEach((segment) => {\r\n    const [lineStart, lineEnd] = lineSegments[segment]\r\n    const distance = lineSegment.distanceToPoint(lineStart, lineEnd, point)\r\n\r\n    if (distance < minDistance) {\r\n      minDistance = distance\r\n    }\r\n  })\r\n\r\n  return minDistance\r\n}\r\n","import vec2 from './vec2'\r\nimport vec3 from './vec3'\r\nimport ellipse from './ellipse'\r\nimport lineSegment from './line'\r\nimport rectangle from './rectangle'\r\n\r\nexport default { vec2, vec3, ellipse, lineSegment, rectangle }\r\nexport { vec2, vec3, ellipse, lineSegment, rectangle }\r\n","import isEqual from './isEqual'\r\nimport isOpposite from './isOpposite'\r\n\r\nexport { isEqual, isOpposite }\r\n\r\nexport default { isEqual, isOpposite }\r\n","import { Point3 } from '../../../types'\r\n\r\n/**\r\n * @function isEqual returns equal if the two vec3s are identical within the\r\n * given tolerance in each dimension.\r\n *\r\n * @param {Point3} v1 - The first 3 vector\r\n * @param {Point3} v2 - The second 3 vector.\r\n * @param {number} [tolerance = 1e-5] The acceptable tolerance.\r\n *\r\n * @returns {boolean} True if the two values are within the tolerance levels.\r\n */\r\nexport default function isEqual(\r\n  v1: Point3,\r\n  v2: Point3,\r\n  tolerance = 1e-5\r\n): boolean {\r\n  return (\r\n    Math.abs(v1[0] - v2[0]) < tolerance &&\r\n    Math.abs(v1[1] - v2[1]) < tolerance &&\r\n    Math.abs(v1[2] - v2[2]) < tolerance\r\n  )\r\n}\r\n","import { Point3 } from '../../../types'\r\n\r\n/**\r\n * @function isOpposite returns equal if the two vec3s are opposite within the\r\n * given tolerance in each dimension.\r\n *\r\n * @param {Point3} v1 - The first 3 vector\r\n * @param {Point3} v2 - The second 3 vector.\r\n * @param {number} [tolerance = 1e-5] The acceptable tolerance.\r\n *\r\n * @returns {boolean} True if the two values are within the tolerance levels.\r\n */\r\nexport default function isOpposite(\r\n  v1: Point3,\r\n  v2: Point3,\r\n  tolerance = 1e-5\r\n): boolean {\r\n  return (\r\n    Math.abs(v1[0] + v2[0]) < tolerance &&\r\n    Math.abs(v1[1] + v2[1]) < tolerance &&\r\n    Math.abs(v1[2] + v2[2]) < tolerance\r\n  )\r\n}\r\n","import pointInEllipse from './pointInEllipse'\r\n\r\nexport { pointInEllipse }\r\nexport default { pointInEllipse }\r\n","import { Point3 } from '../../types'\r\nimport { vec3 } from 'gl-matrix'\r\n\r\n/**\r\n * @function getSpacingInNormalDirection Given an `imageVolume` and a\r\n * normal direction (`viewPlaneNormal`), calculates the spacing between voxels\r\n * in the normal direction. If (`viewPlaneNormal`) is parallell to one of the\r\n * directions you will obtain the spacing in that direction. Otherwise each of\r\n * the `imageVolume`'s directions are projected onto the volume, so that you obtain\r\n * a spacing of the order of \"seeing a new set of voxels if the camera where to dolly\".\r\n *\r\n * @param {object} imageVolume\r\n * @param {Point3} viewPlaneNormal\r\n * @returns\r\n */\r\nexport default function getSpacingInNormalDirection(\r\n  imageVolume,\r\n  viewPlaneNormal: Point3\r\n) {\r\n  const { direction, spacing } = imageVolume\r\n\r\n  // Calculate size of spacing vector in normal direction\r\n  const iVector = direction.slice(0, 3)\r\n  const jVector = direction.slice(3, 6)\r\n  const kVector = direction.slice(6, 9)\r\n\r\n  const dotProducts = [\r\n    vec3.dot(iVector, <vec3>viewPlaneNormal),\r\n    vec3.dot(jVector, <vec3>viewPlaneNormal),\r\n    vec3.dot(kVector, <vec3>viewPlaneNormal),\r\n  ]\r\n\r\n  const projectedSpacing = vec3.create()\r\n\r\n  vec3.set(\r\n    projectedSpacing,\r\n    dotProducts[0] * spacing[0],\r\n    dotProducts[1] * spacing[1],\r\n    dotProducts[2] * spacing[2]\r\n  )\r\n\r\n  const spacingInNormalDirection = vec3.length(projectedSpacing)\r\n\r\n  return spacingInNormalDirection\r\n}\r\n","import { cache } from '@ohif/cornerstone-render'\r\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection'\r\n\r\n/**\r\n * @function getTargetVolume Given a scene and camera, find the target volume for a tool.\r\n *\r\n * @param {object} scene\r\n * @param {object} camera\r\n * @param {string} [targetVolumeUID] If a target volumeUID is given that volume\r\n * is forced to be used.\r\n *\r\n * @returns {object} The imageVolume specified or the volume with the smallest\r\n * spacing in the normal direction of the camera.\r\n */\r\nexport default function getTargetVolume(\r\n  scene,\r\n  camera,\r\n  targetVolumeUID?: string\r\n) {\r\n  const { viewPlaneNormal } = camera\r\n\r\n  const volumeActors = scene.getVolumeActors()\r\n\r\n  if (!volumeActors && !volumeActors.length) {\r\n    // No stack to scroll through\r\n    return { spacingInNormalDirection: null, imageVolume: null }\r\n  }\r\n  const numVolumeActors = volumeActors.length\r\n\r\n  const imageVolumes = volumeActors.map((va) => cache.getVolume(va.uid))\r\n\r\n  if (targetVolumeUID) {\r\n    // If a volumeUID is defined, set that volume as the target\r\n    const imageVolume = imageVolumes.find((iv) => iv.uid === targetVolumeUID)\r\n\r\n    const spacingInNormalDirection = getSpacingInNormalDirection(\r\n      imageVolume,\r\n      viewPlaneNormal\r\n    )\r\n\r\n    return { imageVolume, spacingInNormalDirection }\r\n  }\r\n\r\n  // Fetch volume actor with finest resolution in direction of projection.\r\n\r\n  const smallest = {\r\n    spacingInNormalDirection: Infinity,\r\n    imageVolume: null,\r\n  }\r\n\r\n  for (let i = 0; i < numVolumeActors; i++) {\r\n    const imageVolume = imageVolumes[i]\r\n\r\n    const spacingInNormalDirection = getSpacingInNormalDirection(\r\n      imageVolume,\r\n      viewPlaneNormal\r\n    )\r\n\r\n    if (spacingInNormalDirection < smallest.spacingInNormalDirection) {\r\n      smallest.spacingInNormalDirection = spacingInNormalDirection\r\n      smallest.imageVolume = imageVolume\r\n    }\r\n  }\r\n\r\n  return smallest\r\n}\r\n","import { vec3 } from 'gl-matrix'\r\nimport math from '../math'\r\nimport { ToolSpecificToolState, Point3 } from '../../types'\r\n\r\n/**\r\n * @function getToolStateWithinSlice given some `ToolSpecificToolState`, and the slice\r\n * defined by the camera's normal direction and the spacing in the normal, filter\r\n * the `ToolSpecificToolState` which is within the slice.\r\n *\r\n * @param {ToolSpecificToolState} toolState\r\n * @param {object} camera\r\n * @param {number} spacingInNormalDirection\r\n * @returns {ToolSpecificToolState} The filtered `ToolSpecificToolState`.\r\n */\r\nexport default function getToolStateWithinSlice(\r\n  toolState: ToolSpecificToolState,\r\n  camera,\r\n  spacingInNormalDirection: number\r\n): ToolSpecificToolState {\r\n  const { viewPlaneNormal } = camera\r\n  const toolStateWithSameNormal = toolState.filter((td) => {\r\n    const toolDataViewPlaneNormal = td.metadata.viewPlaneNormal\r\n    return math.vec3.isEqual(<Point3>toolDataViewPlaneNormal, viewPlaneNormal)\r\n  })\r\n\r\n  // Get data in plane with focal point.\r\n  if (!toolStateWithSameNormal.length) {\r\n    // No in plane toolState.\r\n    return []\r\n  }\r\n\r\n  const halfSpacingInNormalDirection = spacingInNormalDirection / 2\r\n\r\n  const { focalPoint } = camera\r\n\r\n  const toolStateWithinSlice = []\r\n\r\n  for (let i = 0; i < toolStateWithSameNormal.length; i++) {\r\n    // TODO -> see if annotation lies within slice distance.\r\n    // Get vector\r\n    const toolState = toolStateWithSameNormal[i]\r\n    const data = toolState.data\r\n    const point = data.handles.points[0]\r\n\r\n    // A = point\r\n    // B = focal point\r\n    // P = normal\r\n\r\n    // B-A dot P  => Distance in the view direction.\r\n    // this should be less than half the slice distance.\r\n\r\n    const dir = vec3.create()\r\n\r\n    vec3.sub(dir, focalPoint, point)\r\n\r\n    const dot = vec3.dot(dir, viewPlaneNormal)\r\n\r\n    if (Math.abs(dot) < halfSpacingInNormalDirection) {\r\n      toolStateWithinSlice.push(toolState)\r\n    }\r\n  }\r\n\r\n  return toolStateWithinSlice\r\n}\r\n","import { Point3 } from '../../types'\r\nimport { vec3 } from 'gl-matrix'\r\n\r\n/**\r\n * @function getWorldWidthAndHeightInPlane Given two world positions and an\r\n * orthogonal view to an `imageVolume` defined by a `viewPlaneNormal` and a\r\n * `viewUp`, get the width and height in world coordinates of the rectangle\r\n * defined by the two points.\r\n *\r\n * @param {Point3} viewPlaneNormal The normal of the view.\r\n * @param {Point3} viewUp The up direction of the view.\r\n * @param {object} imageVolume The imageVolume to use to measure.\r\n * @param {Point3} worldPos1 The first world position.\r\n * @param {Point3} worldPos2 The second world position.\r\n *\r\n * @returns {object} The `worldWidth` and `worldHeight`.\r\n */\r\nexport default function getWorldWidthAndHeightInPlane(\r\n  viewPlaneNormal: Point3,\r\n  viewUp: Point3,\r\n  imageVolume,\r\n  worldPos1: Point3,\r\n  worldPos2: Point3\r\n) {\r\n  const { direction } = imageVolume\r\n\r\n  const iDirection = direction.slice(0, 3)\r\n  const jDirection = direction.slice(3, 6)\r\n  const kDirection = direction.slice(6, 9)\r\n\r\n  let viewRight = vec3.create()\r\n\r\n  vec3.cross(viewRight, <vec3>viewUp, <vec3>viewPlaneNormal)\r\n\r\n  viewRight = [-viewRight[0], -viewRight[1], -viewRight[2]]\r\n\r\n  let xDir\r\n  let yDir\r\n\r\n  if (Math.abs(vec3.dot(iDirection, <vec3>viewUp)) > 0.999) {\r\n    xDir = 0\r\n  } else if (Math.abs(vec3.dot(jDirection, <vec3>viewUp)) > 0.999) {\r\n    xDir = 1\r\n  } else if (Math.abs(vec3.dot(kDirection, <vec3>viewUp)) > 0.999) {\r\n    xDir = 2\r\n  } else {\r\n    console.warn('Can only currently do area calculation for orthogonal views.')\r\n\r\n    return { worldWidth: 0, worldHeight: 0 }\r\n  }\r\n\r\n  if (Math.abs(vec3.dot(iDirection, viewRight)) > 0.999) {\r\n    yDir = 0\r\n  } else if (Math.abs(vec3.dot(jDirection, viewRight)) > 0.999) {\r\n    yDir = 1\r\n  } else if (Math.abs(vec3.dot(kDirection, viewRight)) > 0.999) {\r\n    yDir = 2\r\n  } else {\r\n    console.warn('Can only currently do area calculation for orthogonal views.')\r\n\r\n    return { worldWidth: 0, worldHeight: 0 }\r\n  }\r\n\r\n  const worldWidth = Math.abs(worldPos1[xDir] - worldPos2[xDir])\r\n  const worldHeight = Math.abs(worldPos1[yDir] - worldPos2[yDir])\r\n\r\n  return { worldWidth, worldHeight }\r\n}\r\n","import getTargetVolume from './getTargetVolume'\r\nimport vtkMath from 'vtk.js/Sources/Common/Core/Math'\r\nimport { Point3 } from '@ohif/cornerstone-render'\r\nimport { Scene, Viewport } from '@ohif/cornerstone-render'\r\n\r\n/**\r\n * Returns a point on the line between the passed canvasPoint (clicked point often)\r\n * and the camera position that is off interest based on some criteria (maximum/minimum\r\n * intensity of the points in the line of sight). It iterated over the points on\r\n * the line with a defined steps size\r\n *\r\n * @param scene Scene\r\n * @param viewport Viewport\r\n * @param targetVolumeUID Volume UID\r\n * @param criteriaFunction A function that returns the point if it passes a certain\r\n * written logic, for instance, it can be a maxValue function that keeps the\r\n * records of all intensity values, and only return the point if its intensity\r\n * is greater than the maximum intensity of the points passed before.\r\n * @param canvasPointInWorld World coordinates of the point in the canvas.\r\n * @returns\r\n */\r\nexport default function getVoxelPositionBasedOnIntensity(\r\n  scene: Scene,\r\n  viewport: Viewport,\r\n  targetVolumeUID: string,\r\n  criteriaFunction: (intensity: number, point: Point3) => Point3,\r\n  canvasPointInWorld: Point3\r\n): Point3 {\r\n  // 1. Getting the camera from the event details\r\n  const camera = viewport.getCamera()\r\n  const { position: cameraPosition } = camera\r\n\r\n  // 2. Calculating the spacing in the normal direction, this will get\r\n  // used as the step size for iterating over the points in the line of sight\r\n  const { spacingInNormalDirection } = getTargetVolume(\r\n    scene,\r\n    camera,\r\n    targetVolumeUID\r\n  )\r\n  // 2.1 Making sure, we are not missing any point\r\n  const stepSize = spacingInNormalDirection / 4\r\n\r\n  // 3. Getting the bounds of the viewports. Search for brightest point is\r\n  // limited to the visible bound\r\n  const bounds = viewport.getBounds()\r\n  const xMin = bounds[0]\r\n  const xMax = bounds[1]\r\n\r\n  // 5. Calculating the line, we use a parametric line definition\r\n  const vector = [0, 0, 0]\r\n\r\n  // 5.1 Point coordinate on the line\r\n  let point = <Point3>[0, 0, 0]\r\n\r\n  // 5.2 Calculating the line direction, and storing in vector\r\n  vtkMath.subtract(canvasPointInWorld, cameraPosition, vector)\r\n\r\n  let pickedPoint\r\n\r\n  // 6. Iterating over the line from the lower bound to the upper bound, with the\r\n  // specified step size\r\n  for (let pointT = xMin; pointT <= xMax; pointT = pointT + stepSize) {\r\n    // 6.1 Calculating the point x location\r\n    point = [pointT, 0, 0]\r\n    // 6.2 Calculating the point y,z location based on the line definition\r\n    const t = (pointT - cameraPosition[0]) / vector[0]\r\n    point[1] = t * vector[1] + cameraPosition[1]\r\n    point[2] = t * vector[2] + cameraPosition[2]\r\n\r\n    // 6.3 Checking if the points is inside the bounds\r\n    if (_inBounds(point, bounds)) {\r\n      // 6.4 Getting the intensity of the point\r\n      const intensity = viewport.getIntensityFromWorld(point)\r\n      // 6.5 Passing the intensity to the maximum value functions which decides\r\n      // whether the current point is of interest based on some criteria\r\n      const pointToPick = criteriaFunction(intensity, point)\r\n      if (pointToPick) {\r\n        pickedPoint = pointToPick\r\n      }\r\n    }\r\n  }\r\n\r\n  return pickedPoint\r\n}\r\n\r\n/**\r\n * Returns whether the point in the world is inside the bounds of the viewport\r\n * @param point coordinates in the world\r\n * @returns boolean\r\n */\r\nconst _inBounds = function (point: Point3, bounds: Array<number>): boolean {\r\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds\r\n  return (\r\n    point[0] > xMin &&\r\n    point[0] < xMax &&\r\n    point[1] > yMin &&\r\n    point[1] < yMax &&\r\n    point[2] > zMin &&\r\n    point[2] < zMax\r\n  )\r\n}\r\n","const svgNodeCache = {}\r\n\r\nexport default svgNodeCache\r\n","import IToolGroup from './ToolGroupManager/IToolGroup'\r\nimport Synchronizer from './SynchronizerManager/Synchronizer'\r\nimport svgNodeCache from './svgNodeCache'\r\nimport { BaseTool } from '../tools'\r\n\r\ninterface IToolClassReference {\r\n  toolClass: new <T extends BaseTool>() => T\r\n  toolOptions: Record<string, unknown>\r\n}\r\n\r\ninterface ICornerstoneTools3dState {\r\n  isToolLocked: boolean\r\n  isMultiPartToolActive: boolean\r\n  tools: Record<string, IToolClassReference>\r\n  toolGroups: Array<IToolGroup>\r\n  synchronizers: Array<Synchronizer>\r\n  svgNodeCache: Record<string, unknown>\r\n  enabledElements: Array<unknown>\r\n  handleRadius: number\r\n}\r\n\r\nconst state: ICornerstoneTools3dState = {\r\n  isToolLocked: false,\r\n  isMultiPartToolActive: false,\r\n  tools: {},\r\n  toolGroups: [],\r\n  synchronizers: [],\r\n  svgNodeCache: svgNodeCache,\r\n  // Should this be named... canvases?\r\n  enabledElements: [], // switch to Uids?\r\n  handleRadius: 6,\r\n}\r\n\r\nexport { ICornerstoneTools3dState, state, state as default }\r\n","import { state } from './state'\r\n\r\n/**\r\n * @function addTool\r\n *\r\n * @export\r\n * @param {BaseTool|BaseAnnotationTool} ToolClass A tool calls to instantiate.\r\n * @param {object} toolOptions The tool-specific configuration options for the tool.\r\n * @returns\r\n */\r\nexport default function addTool(ToolClass, toolOptions) {\r\n  const tool = new ToolClass(toolOptions)\r\n  const hasToolName = typeof tool.name !== 'undefined' && tool.name !== ''\r\n  const toolAlreadyAdded = state.tools[tool.name] !== undefined\r\n\r\n  if (!hasToolName) {\r\n    console.warn(\r\n      'Tool with configuration did not produce a toolName: ',\r\n      toolOptions\r\n    )\r\n    return\r\n  }\r\n\r\n  if (toolAlreadyAdded) {\r\n    console.warn(`${tool.name} has already been added globally`)\r\n\r\n    return\r\n  }\r\n\r\n  state.tools[tool.name] = {\r\n    toolClass: ToolClass,\r\n    toolOptions,\r\n  }\r\n}\r\n","import { state } from './state'\r\n\r\n/**\r\n * @function addTool\r\n *\r\n * @export\r\n * @param {BaseTool|BaseAnnotationTool} ToolClass A tool calls to instantiate.\r\n * @param {object} toolOptions The tool-specific configuration options for the tool.\r\n * @returns\r\n */\r\nexport default function resetToolsState(): void {\r\n  state.tools = {}\r\n  state.toolGroups = []\r\n  state.synchronizers = []\r\n  state.enabledElements = []\r\n  state.isToolLocked = false\r\n  state.isMultiPartToolActive = false\r\n  state.handleRadius = 6\r\n}\r\n","import { getEnabledElement } from '@ohif/cornerstone-render'\r\nimport { IPoints, Point2 } from '../../types'\r\n\r\n/**\r\n * getMouseEventPoints - Given a native mouse event, get the associated\r\n * cornerstone3D enabled element and derive a set of coordinates useful for tools.\r\n * @param {MouseEvent }evt The Mouse event.\r\n * @param {HTMLElement} element\r\n * @returns {IPoints} The points related to the event.\r\n */\r\nexport default function getMouseEventPoints(\r\n  evt: MouseEvent,\r\n  element?: HTMLElement\r\n): IPoints {\r\n  const canvas = element || (evt.target as HTMLElement)\r\n  const enabledElement = getEnabledElement(canvas)\r\n  const pagePoint = _pageToPoint(evt)\r\n  const canvasPoint = _pagePointsToCanvasPoints(<HTMLElement>canvas, pagePoint)\r\n  const worldPoint = enabledElement.viewport.canvasToWorld(canvasPoint)\r\n\r\n  return {\r\n    page: pagePoint,\r\n    client: _clientToPoint(evt),\r\n    canvas: canvasPoint,\r\n    world: worldPoint,\r\n  }\r\n}\r\n\r\n/**\r\n * _pagePointsToCanvasPoints - Converts point from page coordinates to canvas coordinates.\r\n * @param {HTMLElement} DomCanvasElement\r\n * @param {IPoint} pagePoint\r\n *\r\n * @returns {IPoint} The canvas coordinate points in `IPoint` format.\r\n */\r\nfunction _pagePointsToCanvasPoints(\r\n  DomCanvasElement: HTMLElement,\r\n  pagePoint: Point2\r\n) {\r\n  const rect = DomCanvasElement.getBoundingClientRect()\r\n  return <Point2>[\r\n    pagePoint[0] - rect.left - window.pageXOffset,\r\n    pagePoint[1] - rect.top - window.pageYOffset,\r\n  ]\r\n}\r\n\r\n/**\r\n * _pageToPoint - Converts the event's `pageX` and `pageY` properties to an `IPoint`\r\n * coordinate.\r\n * @param {MouseEvent} evt The Mouse `Event`\r\n */\r\nfunction _pageToPoint(evt: MouseEvent): Point2 {\r\n  return <Point2>[evt.pageX, evt.pageY]\r\n}\r\n\r\n/**\r\n * _pageToPoint - Converts the event's `clientX` and `clientY` properties to an `IPoint`\r\n * coordinate.\r\n * @param {MouseEvent} evt The Mouse `Event`\r\n */\r\nfunction _clientToPoint(evt: MouseEvent): Point2 {\r\n  return <Point2>[evt.clientX, evt.clientY]\r\n}\r\n","import { triggerEvent } from '@ohif/cornerstone-render'\r\nimport CornerstoneTools3DEvents from '../../enums/CornerstoneTools3DEvents'\r\nimport getMouseEventPoints from './getMouseEventPoints'\r\nimport { IPoints } from '../../types/cornerstoneToolsEventDetailTypes'\r\n\r\n/**\r\n * Captures and normalizes the double click event. Emits as a cornerstoneTools3D\r\n * double click event.\r\n *\r\n * @param {MouseEvent} evt The mouse event.\r\n */\r\nfunction mouseDoubleClickListener(evt: MouseEvent): void {\r\n  const element = <HTMLElement>evt.target\r\n\r\n  const startPoints = getMouseEventPoints(evt, element)\r\n  const deltaPoints: IPoints = {\r\n    page: [0, 0],\r\n    client: [0, 0],\r\n    canvas: [0, 0],\r\n    world: [0, 0, 0],\r\n  }\r\n\r\n  const eventData = {\r\n    event: evt,\r\n    camera: {},\r\n    element,\r\n    startPoints,\r\n    lastPoints: startPoints,\r\n    currentPoints: startPoints,\r\n    deltaPoints,\r\n    eventName: CornerstoneTools3DEvents.MOUSE_DOUBLE_CLICK,\r\n  }\r\n\r\n  triggerEvent(element, CornerstoneTools3DEvents.MOUSE_DOUBLE_CLICK, eventData)\r\n}\r\n\r\nexport default mouseDoubleClickListener\r\n","import { getEnabledElement, triggerEvent } from '@ohif/cornerstone-render'\r\nimport CornerstoneTools3DEvents from '../../enums/CornerstoneTools3DEvents'\r\nimport getMouseEventPoints from './getMouseEventPoints'\r\n\r\nconst eventName = CornerstoneTools3DEvents.MOUSE_MOVE\r\n\r\n/**\r\n * Captures and normalizes the mouse move event. Emits as a cornerstoneTools3D\r\n * mouse move event.\r\n *\r\n * @param {MouseEvent} evt The mouse event.\r\n */\r\nfunction mouseMoveListener(evt: MouseEvent) {\r\n  const element = <HTMLElement>evt.currentTarget\r\n  const enabledElement = getEnabledElement(element)\r\n  const { renderingEngineUID, sceneUID, viewportUID } = enabledElement\r\n\r\n  const currentPoints = getMouseEventPoints(evt)\r\n  const eventData = {\r\n    renderingEngineUID,\r\n    sceneUID,\r\n    viewportUID,\r\n    camera: {},\r\n    element,\r\n    currentPoints,\r\n    eventName,\r\n  }\r\n\r\n  triggerEvent(element, eventName, eventData)\r\n}\r\n\r\nexport default mouseMoveListener\r\n","import { getEnabledElement, triggerEvent } from '@ohif/cornerstone-render'\r\nimport CornerstoneTools3DEvents from '../../enums/CornerstoneTools3DEvents'\r\nimport mouseMoveListener from './mouseMoveListener'\r\nimport {\r\n  ICornerstoneToolsEventDetail,\r\n  IPoints,\r\n  Point2,\r\n  Point3,\r\n} from '../../types'\r\n// ~~ VIEWPORT LIBRARY\r\nimport getMouseEventPoints from './getMouseEventPoints'\r\n\r\nconst { MOUSE_DOWN, MOUSE_DOWN_ACTIVATE } = CornerstoneTools3DEvents\r\n\r\ninterface IMouseDownListenerState {\r\n  renderingEngingUID: string\r\n  sceneUID: string\r\n  viewportUID: string\r\n  isClickEvent: boolean\r\n  clickDelay: number\r\n  preventClickTimeout: ReturnType<typeof setTimeout>\r\n  element: HTMLElement\r\n  startPoints: IPoints\r\n  lastPoints: IPoints\r\n}\r\n\r\n// STATE\r\nconst defaultState: IMouseDownListenerState = {\r\n  //\r\n  renderingEngingUID: undefined,\r\n  sceneUID: undefined,\r\n  viewportUID: undefined,\r\n  //\r\n  isClickEvent: true,\r\n  clickDelay: 200,\r\n  preventClickTimeout: null,\r\n  element: null,\r\n  startPoints: {\r\n    page: [0, 0],\r\n    client: [0, 0],\r\n    canvas: [0, 0],\r\n    world: [0, 0, 0],\r\n  },\r\n  lastPoints: {\r\n    page: [0, 0],\r\n    client: [0, 0],\r\n    canvas: [0, 0],\r\n    world: [0, 0, 0],\r\n  },\r\n}\r\n\r\nlet state: IMouseDownListenerState = {\r\n  //\r\n  renderingEngingUID: undefined,\r\n  sceneUID: undefined,\r\n  viewportUID: undefined,\r\n  //\r\n  isClickEvent: true,\r\n  clickDelay: 200,\r\n  element: null,\r\n  preventClickTimeout: null,\r\n  startPoints: {\r\n    page: [0, 0],\r\n    client: [0, 0],\r\n    canvas: [0, 0],\r\n    world: [0, 0, 0],\r\n  },\r\n  lastPoints: {\r\n    page: [0, 0],\r\n    client: [0, 0],\r\n    canvas: [0, 0],\r\n    world: [0, 0, 0],\r\n  },\r\n}\r\n\r\n/**\r\n * Listens to mouse down events and dependong on interaction and further\r\n * interaction can emit the following mouse events:\r\n *\r\n * - MOUSE_DOWN\r\n * - MOUSE_DOWN_ACTIVATE\r\n * - MOUSE_DRAG (move while down)\r\n * - MOUSE_UP\r\n * - MOUSE_CLICK\r\n *\r\n * @param {MouseEvent} evt The mouse event.\r\n */\r\nfunction mouseDownListener(evt: MouseEvent) {\r\n  state.element = <HTMLElement>evt.target\r\n\r\n  const enabledElement = getEnabledElement(state.element)\r\n  const { renderingEngineUID, sceneUID, viewportUID } = enabledElement\r\n\r\n  state.renderingEngingUID = renderingEngineUID\r\n  state.sceneUID = sceneUID\r\n  state.viewportUID = viewportUID\r\n\r\n  state.preventClickTimeout = setTimeout(_preventClickHandler, state.clickDelay)\r\n\r\n  // Prevent CornerstoneToolsMouseMove while mouse is down\r\n  state.element.removeEventListener('mousemove', mouseMoveListener)\r\n\r\n  const startPoints = getMouseEventPoints(evt, state.element)\r\n  const deltaPoints = _getDeltaPoints(startPoints, startPoints)\r\n\r\n  const eventData: ICornerstoneToolsEventDetail = {\r\n    renderingEngineUID: state.renderingEngingUID,\r\n    sceneUID: state.sceneUID,\r\n    viewportUID: state.viewportUID,\r\n    event: evt,\r\n    camera: {},\r\n    element: state.element,\r\n    startPoints,\r\n    lastPoints: startPoints,\r\n    currentPoints: startPoints,\r\n    deltaPoints,\r\n    eventName: MOUSE_DOWN,\r\n  }\r\n\r\n  state.startPoints = _copyPoints(eventData.startPoints)\r\n  state.lastPoints = _copyPoints(eventData.lastPoints)\r\n\r\n  const eventDidPropagate = triggerEvent(\r\n    eventData.element,\r\n    MOUSE_DOWN,\r\n    eventData\r\n  )\r\n\r\n  if (eventDidPropagate) {\r\n    // No tools responded to this event, create a new tool\r\n    eventData.eventName = MOUSE_DOWN_ACTIVATE\r\n    triggerEvent(eventData.element, MOUSE_DOWN_ACTIVATE, eventData)\r\n  }\r\n\r\n  document.addEventListener('mousemove', _onMouseDrag)\r\n  document.addEventListener('mouseup', _onMouseUp)\r\n}\r\n\r\n/**\r\n *_onMouseDrag - Handle emission of drag events whilst the mouse is depressed.\r\n *\r\n * @private\r\n * @param {MouseEvent} evt The mouse event.\r\n */\r\nfunction _onMouseDrag(evt: MouseEvent) {\r\n  const currentPoints = getMouseEventPoints(evt, state.element)\r\n  const lastPoints = _updateMouseEventsLastPoints(\r\n    state.element,\r\n    state.lastPoints\r\n  )\r\n\r\n  const deltaPoints = _getDeltaPoints(currentPoints, lastPoints)\r\n\r\n  const eventData: ICornerstoneToolsEventDetail = {\r\n    renderingEngineUID: state.renderingEngingUID,\r\n    sceneUID: state.sceneUID,\r\n    viewportUID: state.viewportUID,\r\n    event: evt,\r\n    camera: {},\r\n    element: state.element,\r\n    startPoints: _copyPoints(state.startPoints),\r\n    lastPoints: _copyPoints(lastPoints),\r\n    currentPoints,\r\n    deltaPoints,\r\n    eventName: CornerstoneTools3DEvents.MOUSE_DRAG,\r\n  }\r\n\r\n  triggerEvent(state.element, CornerstoneTools3DEvents.MOUSE_DRAG, eventData)\r\n\r\n  // Update the last points\r\n  state.lastPoints = _copyPoints(currentPoints)\r\n}\r\n\r\n/**\r\n *_onMouseDrag - Handle emission of mouse up events, and re-enabling mouse move events.\r\n *\r\n * @private\r\n * @param {MouseEvent} evt The mouse event.\r\n */\r\nfunction _onMouseUp(evt: MouseEvent): void {\r\n  // Cancel the timeout preventing the click event from triggering\r\n  clearTimeout(state.preventClickTimeout)\r\n\r\n  const eventName = state.isClickEvent\r\n    ? CornerstoneTools3DEvents.MOUSE_CLICK\r\n    : CornerstoneTools3DEvents.MOUSE_UP\r\n\r\n  const currentPoints = getMouseEventPoints(evt, state.element)\r\n  const deltaPoints = _getDeltaPoints(currentPoints, state.lastPoints)\r\n  const eventData = {\r\n    renderingEngineUID: state.renderingEngingUID,\r\n    sceneUID: state.sceneUID,\r\n    viewportUID: state.viewportUID,\r\n    event: evt,\r\n    camera: {},\r\n    element: state.element,\r\n    startPoints: _copyPoints(state.startPoints),\r\n    lastPoints: _copyPoints(state.lastPoints),\r\n    currentPoints,\r\n    deltaPoints,\r\n    eventName,\r\n  }\r\n\r\n  triggerEvent(eventData.element, eventName, eventData)\r\n\r\n  // Remove our temporary handlers\r\n  document.removeEventListener('mousemove', _onMouseDrag)\r\n  document.removeEventListener('mouseup', _onMouseUp)\r\n\r\n  // Restore our global mousemove listener\r\n  state.element.addEventListener('mousemove', mouseMoveListener)\r\n\r\n  // Restore `state` to `defaultState`\r\n  state = JSON.parse(JSON.stringify(defaultState))\r\n}\r\n\r\nfunction _preventClickHandler() {\r\n  state.isClickEvent = false\r\n}\r\n\r\n/**\r\n * _copyPoints - Copies a set of points.\r\n * @param {IPoints} points The `IPoints` instance to copy.\r\n *\r\n * @returns {IPoints} A copy of the points.\r\n */\r\nfunction _copyPoints(points: IPoints): IPoints {\r\n  return <IPoints>JSON.parse(JSON.stringify(points))\r\n}\r\n\r\n/**\r\n * _subtractPoints - Subtracts `point1` from `point0`.\r\n * @param {IPoint} point0 The first point.\r\n * @param {IPoint} point1 The second point to subtract from the first.\r\n *\r\n * @returns {IPoint} The difference.\r\n */\r\nfunction _subtractPoints(point0: Point2, point1: Point2): Point2 {\r\n  return <Point2>[point0[0] - point1[0], point0[1] - point1[1]]\r\n}\r\n\r\nfunction _subtract3dPoints(point0: Point3, point1: Point3): Point3 {\r\n  return <Point3>[\r\n    point0[0] - point1[0],\r\n    point0[1] - point1[1],\r\n    point0[2] - point1[2],\r\n  ]\r\n}\r\n\r\n/**\r\n * _updateMouseEventsLastPoints - Recalculates the last world coordinate,\r\n * as the linear transform from client to world could be different if the camera was updated.\r\n * @param {HTMLElement} element\r\n * @param lastPoints\r\n */\r\nfunction _updateMouseEventsLastPoints(\r\n  element: HTMLElement,\r\n  lastPoints: IPoints\r\n): IPoints {\r\n  const canvas = element\r\n  const enabledElement = getEnabledElement(canvas)\r\n  // Need to update the world point to be calculated from the current reference frame,\r\n  // Which might have changed since the last interaction.\r\n  const world = enabledElement.viewport.canvasToWorld(lastPoints.canvas)\r\n\r\n  return {\r\n    page: lastPoints.page,\r\n    client: lastPoints.client,\r\n    canvas: lastPoints.canvas,\r\n    world,\r\n  }\r\n}\r\n\r\n/**\r\n * _getDeltaPoints - Returns the difference bettwen two `IPoints` instances.\r\n * @param {IPoints} currentPoints - The current points.\r\n * @param {IPoints} lastPoints -- The last points, to be subtracted from the `currentPoints`.\r\n *\r\n * @returns {IPoints} The difference.\r\n */\r\nfunction _getDeltaPoints(currentPoints: IPoints, lastPoints: IPoints): IPoints {\r\n  return {\r\n    page: _subtractPoints(currentPoints.page, lastPoints.page),\r\n    client: _subtractPoints(currentPoints.client, lastPoints.client),\r\n    canvas: _subtractPoints(currentPoints.canvas, lastPoints.canvas),\r\n    world: _subtract3dPoints(currentPoints.world, lastPoints.world),\r\n  }\r\n}\r\n\r\nexport default mouseDownListener\r\n","import mouseDoubleClickListener from './mouseDoubleClickListener'\r\nimport mouseDownListener from './mouseDownListener'\r\nimport mouseMoveListener from './mouseMoveListener'\r\n\r\n/**\r\n * Removes mouse event listeners for native mouse event. Enables\r\n * vtk.js tools flavored events that build on top of existing events to\r\n * provide more helpful information.\r\n *\r\n * @private\r\n * @param enabledDomElement\r\n */\r\nfunction disable(enabledDomElement: HTMLElement): void {\r\n  enabledDomElement.removeEventListener('dblclick', mouseDoubleClickListener)\r\n  enabledDomElement.removeEventListener('mousedown', mouseDownListener)\r\n  enabledDomElement.removeEventListener('mousemove', mouseMoveListener)\r\n}\r\n\r\n/**\r\n * Registers mouse event listeners for native mouse event. Enables\r\n * vtk.js tools flavored events that build on top of existing events to\r\n * provide more helpful information.\r\n *\r\n * @private\r\n * @param enabledDomElement\r\n */\r\nfunction enable(enabledDomElement: HTMLElement): void {\r\n  // Prevent handlers from being attached multiple times\r\n  disable(enabledDomElement)\r\n\r\n  enabledDomElement.addEventListener('dblclick', mouseDoubleClickListener)\r\n  enabledDomElement.addEventListener('mousedown', mouseDownListener)\r\n  enabledDomElement.addEventListener('mousemove', mouseMoveListener)\r\n}\r\n\r\nexport default {\r\n  enable,\r\n  disable,\r\n}\r\n","import { getEnabledElement, triggerEvent } from '@ohif/cornerstone-render'\r\nimport normalizeWheel from './normalizeWheel'\r\nimport CornerstoneTools3DEvents from '../../enums/CornerstoneTools3DEvents'\r\n// ~~ VIEWPORT LIBRARY\r\nimport getMouseEventPoints from '../mouse/getMouseEventPoints'\r\n\r\n/**\r\n * wheelListener - Captures and normalizes mouse wheel events. Emits as a\r\n * cornerstoneTools3D mouse wheel event.\r\n * @param {WheelEvent} evt The mouse wheel event.\r\n */\r\nfunction wheelListener(evt: WheelEvent) {\r\n  const element = <HTMLElement>evt.currentTarget\r\n  const enabledElement = getEnabledElement(element)\r\n  const { renderingEngineUID, sceneUID, viewportUID } = enabledElement\r\n\r\n  // Prevent triggering MouseWheel events that are not real scroll events:\r\n  // E.g. when clicking the MiddleMouseWheelButton, a deltaY of 0 is emitted.\r\n  // See https://github.com/cornerstonejs/cornerstoneTools/issues/935\r\n  if (evt.deltaY > -1 && evt.deltaY < 1) {\r\n    return\r\n  }\r\n\r\n  evt.preventDefault()\r\n\r\n  const { spinX, spinY, pixelX, pixelY } = normalizeWheel(evt)\r\n  const direction = spinY < 0 ? -1 : 1\r\n\r\n  const eventData = {\r\n    renderingEngineUID,\r\n    sceneUID,\r\n    viewportUID,\r\n    element,\r\n    camera: {},\r\n    detail: evt,\r\n    wheel: {\r\n      spinX,\r\n      spinY,\r\n      pixelX,\r\n      pixelY,\r\n      direction,\r\n    },\r\n    points: getMouseEventPoints(evt),\r\n  }\r\n\r\n  triggerEvent(element, CornerstoneTools3DEvents.MOUSE_WHEEL, eventData)\r\n}\r\n\r\nexport default wheelListener\r\n","// Reasonable defaults\r\nconst PIXEL_STEP = 10\r\nconst LINE_HEIGHT = 40\r\nconst PAGE_HEIGHT = 800\r\n\r\n/**\r\n * Normalizes wheel events and provides properties that are more\r\n * consistent and helpful across different browsers\r\n *\r\n * @function normalizeWheel\r\n * @param {WheelEvent} event\r\n * @returns {Object} { spinX, spinY, pixlX, pixelY }\r\n */\r\nexport default function normalizeWheel(event) {\r\n  let spinX = 0,\r\n    spinY = 0,\r\n    pixelX = 0,\r\n    pixelY = 0\r\n\r\n  // Legacy\r\n  if ('detail' in event) {\r\n    spinY = event.detail\r\n  }\r\n  if ('wheelDelta' in event) {\r\n    spinY = -event.wheelDelta / 120\r\n  }\r\n  if ('wheelDeltaY' in event) {\r\n    spinY = -event.wheelDeltaY / 120\r\n  }\r\n  if ('wheelDeltaX' in event) {\r\n    spinX = -event.wheelDeltaX / 120\r\n  }\r\n\r\n  pixelX = spinX * PIXEL_STEP\r\n  pixelY = spinY * PIXEL_STEP\r\n\r\n  if ('deltaY' in event) {\r\n    pixelY = event.deltaY\r\n  }\r\n  if ('deltaX' in event) {\r\n    pixelX = event.deltaX\r\n  }\r\n\r\n  if ((pixelX || pixelY) && event.deltaMode) {\r\n    if (event.deltaMode === 1) {\r\n      // Delta in LINE units\r\n      pixelX *= LINE_HEIGHT\r\n      pixelY *= LINE_HEIGHT\r\n    } else {\r\n      // Delta in PAGE units\r\n      pixelX *= PAGE_HEIGHT\r\n      pixelY *= PAGE_HEIGHT\r\n    }\r\n  }\r\n\r\n  // Fall-back if spin cannot be determined\r\n  if (pixelX && !spinX) {\r\n    spinX = pixelX < 1 ? -1 : 1\r\n  }\r\n  if (pixelY && !spinY) {\r\n    spinY = pixelY < 1 ? -1 : 1\r\n  }\r\n\r\n  return {\r\n    spinX,\r\n    spinY,\r\n    pixelX,\r\n    pixelY,\r\n  }\r\n}\r\n","import wheelListener from './wheelListener'\r\n\r\n/**\r\n * Listens for the wheel event, and handles it. Handled event\r\n * will be \"normalized\" and re-emitted as `EVENTS.MOUSE_WHEEL`\r\n *\r\n * @private\r\n * @param {HTMLElement} element\r\n * @returns {undefined}\r\n */\r\nfunction enable(element: HTMLElement) {\r\n  disable(element)\r\n  element.addEventListener('wheel', wheelListener, { passive: false })\r\n}\r\n\r\n/**\r\n * Removes listener and handler for wheel event. `EVENTS.MOUSE_WHEEL`\r\n * will no longer be emitted.\r\n *\r\n * @private\r\n * @param {HTMLElement} element\r\n * @returns {undefined}\r\n */\r\nfunction disable(element: HTMLElement) {\r\n  element.removeEventListener('wheel', wheelListener)\r\n}\r\n\r\nexport default {\r\n  enable,\r\n  disable,\r\n}\r\n","import { state } from '../store'\r\nimport { getEnabledElement } from '@ohif/cornerstone-render'\r\n\r\n/**\r\n *\r\n * @param canvasElement\r\n * @private\r\n */\r\nfunction getSvgDrawingHelper(canvasElement: HTMLCanvasElement) {\r\n  const enabledElement = getEnabledElement(canvasElement)\r\n  const { viewportUID, sceneUID, renderingEngineUID } = enabledElement\r\n  const canvasHash = `${viewportUID}:${sceneUID}:${renderingEngineUID}`\r\n  const svgLayerElement = _getSvgLayer(canvasElement)\r\n\r\n  // Reset touched\r\n  Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\r\n    state.svgNodeCache[canvasHash][cacheKey].touched = false\r\n  })\r\n\r\n  return {\r\n    enabledElement: enabledElement,\r\n    _canvasElement: canvasElement,\r\n    _svgLayerElement: svgLayerElement,\r\n    _svgNodeCacheForCanvas: state.svgNodeCache,\r\n    _getSvgNode: getSvgNode.bind(this, canvasHash),\r\n    _appendNode: appendNode.bind(this, svgLayerElement, canvasHash),\r\n    _setNodeTouched: setNodeTouched.bind(this, canvasHash),\r\n    _clearUntouched: clearUntouched.bind(this, svgLayerElement, canvasHash),\r\n    // _drawnAnnotations: drawnAnnotations,\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param canvasElement\r\n * @private\r\n */\r\nfunction _getSvgLayer(canvasElement) {\r\n  const parentElement = canvasElement.parentNode\r\n  const svgLayer = parentElement.querySelector('.svg-layer')\r\n\r\n  return svgLayer\r\n}\r\n\r\nfunction getSvgNode(canvasHash, cacheKey) {\r\n  if (state.svgNodeCache[canvasHash][cacheKey]) {\r\n    return state.svgNodeCache[canvasHash][cacheKey].domRef\r\n  }\r\n}\r\n\r\nfunction appendNode(svgLayerElement, canvasHash, svgNode, cacheKey) {\r\n  state.svgNodeCache[canvasHash][cacheKey] = {\r\n    touched: true,\r\n    domRef: svgNode,\r\n  }\r\n\r\n  svgLayerElement.appendChild(svgNode)\r\n}\r\n\r\nfunction setNodeTouched(canvasHash, cacheKey) {\r\n  if (state.svgNodeCache[canvasHash][cacheKey]) {\r\n    state.svgNodeCache[canvasHash][cacheKey].touched = true\r\n  }\r\n}\r\n\r\nfunction clearUntouched(svgLayerElement, canvasHash) {\r\n  Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\r\n    const cacheEntry = state.svgNodeCache[canvasHash][cacheKey]\r\n\r\n    if (!cacheEntry.touched && cacheEntry.domRef) {\r\n      // console.log(`Removing: ${svgNodeHash}`)\r\n      svgLayerElement.removeChild(cacheEntry.domRef)\r\n      delete state.svgNodeCache[canvasHash][cacheKey]\r\n    }\r\n  })\r\n}\r\n\r\nexport default getSvgDrawingHelper\r\n","import getSvgDrawingHelper from './getSvgDrawingHelper'\r\n\r\nfunction draw(\r\n  canvasElement: HTMLCanvasElement,\r\n  fn: (svgDrawingElement: any) => any\r\n): void {\r\n  const svgDrawingHelper = getSvgDrawingHelper(canvasElement)\r\n\r\n  // Save...\r\n  fn(svgDrawingHelper)\r\n  // Restore...\r\n\r\n  svgDrawingHelper._clearUntouched()\r\n}\r\n\r\nexport default draw\r\n","function _getHash(\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  drawingElementType: string,\r\n  nodeUID: string\r\n): string {\r\n  return `${toolUID}::${annotationUID}::${drawingElementType}::${nodeUID}`\r\n}\r\n\r\nexport default _getHash\r\n","import _getHash from './_getHash'\r\nimport { Point2 } from '../types'\r\n\r\nfunction drawEllipse(\r\n  svgDrawingHelper: any,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  ellipseUID: string,\r\n  corner1: Point2,\r\n  corner2: Point2,\r\n  options = {}\r\n): void {\r\n  const { color, width, lineWidth, lineDash } = Object.assign(\r\n    {\r\n      color: 'dodgerblue',\r\n      width: '2',\r\n      lineWidth: undefined,\r\n      lineDash: undefined,\r\n    },\r\n    options\r\n  )\r\n\r\n  // for supporting both lineWidth and width options\r\n  const strokeWidth = lineWidth || width\r\n\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const svgNodeHash = _getHash(toolUID, annotationUID, 'ellipse', ellipseUID)\r\n  const existingEllipse = svgDrawingHelper._getSvgNode(svgNodeHash)\r\n\r\n  const w = Math.abs(corner1[0] - corner2[0])\r\n  const h = Math.abs(corner1[1] - corner2[1])\r\n  const xMin = Math.min(corner1[0], corner2[0])\r\n  const yMin = Math.min(corner1[1], corner2[1])\r\n\r\n  const center = [xMin + w / 2, yMin + h / 2]\r\n  const radiusX = w / 2\r\n  const radiusY = h / 2\r\n\r\n  if (existingEllipse) {\r\n    existingEllipse.setAttribute('cx', `${center[0]}`)\r\n    existingEllipse.setAttribute('cy', `${center[1]}`)\r\n    existingEllipse.setAttribute('rx', `${radiusX}`)\r\n    existingEllipse.setAttribute('ry', `${radiusY}`)\r\n    existingEllipse.setAttribute('stroke', color)\r\n    existingEllipse.setAttribute('stroke-width', strokeWidth)\r\n\r\n    if (lineDash) {\r\n      existingEllipse.setAttribute('stroke-dasharray', lineDash)\r\n    } else {\r\n      existingEllipse.removeAttribute('stroke-dasharray')\r\n    }\r\n\r\n    svgDrawingHelper._setNodeTouched(svgNodeHash)\r\n  } else {\r\n    const svgEllipseElement = document.createElementNS(svgns, 'ellipse')\r\n\r\n    svgEllipseElement.setAttribute('cx', `${center[0]}`)\r\n    svgEllipseElement.setAttribute('cy', `${center[1]}`)\r\n    svgEllipseElement.setAttribute('rx', `${radiusX}`)\r\n    svgEllipseElement.setAttribute('ry', `${radiusY}`)\r\n    svgEllipseElement.setAttribute('fill', 'transparent')\r\n    svgEllipseElement.setAttribute('stroke', color)\r\n    svgEllipseElement.setAttribute('stroke-width', strokeWidth)\r\n\r\n    if (lineDash) {\r\n      svgEllipseElement.setAttribute('stroke-dasharray', lineDash)\r\n    }\r\n\r\n    svgDrawingHelper._appendNode(svgEllipseElement, svgNodeHash)\r\n  }\r\n}\r\n\r\nexport default drawEllipse\r\n","import _getHash from './_getHash'\r\nimport { Point2 } from '../types'\r\n\r\nfunction drawHandles(\r\n  svgDrawingHelper: any,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  handleGroupUID: string,\r\n  handlePoints: Array<Point2>,\r\n  options = {}\r\n): void {\r\n  const { color, handleRadius, width, lineWidth, fill, type } = Object.assign(\r\n    {\r\n      color: 'dodgerblue',\r\n      handleRadius: '6',\r\n      width: '2',\r\n      lineWidth: undefined,\r\n      fill: 'transparent',\r\n      type: 'circle',\r\n    },\r\n    options\r\n  )\r\n\r\n  // for supporting both lineWidth and width options\r\n  const strokeWidth = lineWidth || width\r\n\r\n  for (let i = 0; i < handlePoints.length; i++) {\r\n    const handle = handlePoints[i]\r\n\r\n    // variable for the namespace\r\n    const svgns = 'http://www.w3.org/2000/svg'\r\n    const svgNodeHash = _getHash(\r\n      toolUID,\r\n      annotationUID,\r\n      'handle',\r\n      `hg-${handleGroupUID}-index-${i}`\r\n    )\r\n    const existingHandleElement = svgDrawingHelper._getSvgNode(svgNodeHash)\r\n\r\n    if (existingHandleElement) {\r\n      if (type === 'circle') {\r\n        existingHandleElement.setAttribute('cx', `${handle[0]}`)\r\n        existingHandleElement.setAttribute('cy', `${handle[1]}`)\r\n        existingHandleElement.setAttribute('r', handleRadius)\r\n        existingHandleElement.setAttribute('stroke', color)\r\n        existingHandleElement.setAttribute('fill', fill)\r\n        existingHandleElement.setAttribute('stroke-width', strokeWidth)\r\n      } else if (type === 'rect') {\r\n        const handleRadiusFloat = parseFloat(handleRadius)\r\n        const side = handleRadiusFloat * 1.5\r\n        const x = handle[0] - side * 0.5\r\n        const y = handle[1] - side * 0.5\r\n        existingHandleElement.setAttribute('x', `${x}`)\r\n        existingHandleElement.setAttribute('y', `${y}`)\r\n        existingHandleElement.setAttribute('width', `${side}`)\r\n        existingHandleElement.setAttribute('height', `${side}`)\r\n        existingHandleElement.setAttribute('stroke', color)\r\n        existingHandleElement.setAttribute('fill', fill)\r\n        existingHandleElement.setAttribute('stroke-width', strokeWidth)\r\n        existingHandleElement.setAttribute('rx', `${side * 0.1}`)\r\n      }\r\n\r\n      svgDrawingHelper._setNodeTouched(svgNodeHash)\r\n    } else {\r\n      const newHandleElement = document.createElementNS(svgns, type)\r\n\r\n      if (type === 'circle') {\r\n        newHandleElement.setAttribute('cx', `${handle[0]}`)\r\n        newHandleElement.setAttribute('cy', `${handle[1]}`)\r\n        newHandleElement.setAttribute('r', handleRadius)\r\n        newHandleElement.setAttribute('stroke', color)\r\n        newHandleElement.setAttribute('fill', fill)\r\n        newHandleElement.setAttribute('stroke-width', strokeWidth)\r\n      } else if (type === 'rect') {\r\n        const handleRadiusFloat = parseFloat(handleRadius)\r\n        const side = handleRadiusFloat * 1.5\r\n        const x = handle[0] - side * 0.5\r\n        const y = handle[1] - side * 0.5\r\n        newHandleElement.setAttribute('x', `${x}`)\r\n        newHandleElement.setAttribute('y', `${y}`)\r\n        newHandleElement.setAttribute('width', `${side}`)\r\n        newHandleElement.setAttribute('height', `${side}`)\r\n        newHandleElement.setAttribute('stroke', color)\r\n        newHandleElement.setAttribute('fill', fill)\r\n        newHandleElement.setAttribute('stroke-width', strokeWidth)\r\n        newHandleElement.setAttribute('rx', `${side * 0.1}`)\r\n      } else {\r\n        console.warn('handle type not valid')\r\n      }\r\n\r\n      svgDrawingHelper._appendNode(newHandleElement, svgNodeHash)\r\n    }\r\n  }\r\n}\r\n\r\nexport default drawHandles\r\n","import _getHash from './_getHash'\r\nimport { Point2 } from '../types'\r\n\r\nexport default function drawLine(\r\n  svgDrawingHelper: any,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  lineUID: string,\r\n  start: Point2,\r\n  end: Point2,\r\n  options = {}\r\n): void {\r\n  const { color, width, lineWidth, lineDash } = Object.assign(\r\n    {\r\n      color: 'dodgerblue',\r\n      width: '2',\r\n      lineWidth: undefined,\r\n      lineDash: undefined,\r\n    },\r\n    options\r\n  )\r\n\r\n  // for supporting both lineWidth and width options\r\n  const strokeWidth = lineWidth || width\r\n\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const svgNodeHash = _getHash(toolUID, annotationUID, 'line', lineUID)\r\n  const existingLine = svgDrawingHelper._getSvgNode(svgNodeHash)\r\n\r\n  if (existingLine) {\r\n    existingLine.setAttribute('x1', `${start[0]}`)\r\n    existingLine.setAttribute('y1', `${start[1]}`)\r\n    existingLine.setAttribute('x2', `${end[0]}`)\r\n    existingLine.setAttribute('y2', `${end[1]}`)\r\n    existingLine.setAttribute('stroke', color)\r\n    existingLine.setAttribute('stroke-width', strokeWidth)\r\n\r\n    if (lineDash) {\r\n      existingLine.setAttribute('stroke-dasharray', lineDash)\r\n    } else {\r\n      existingLine.removeAttribute('stroke-dasharray')\r\n    }\r\n\r\n    svgDrawingHelper._setNodeTouched(svgNodeHash)\r\n  } else {\r\n    const newLine = document.createElementNS(svgns, 'line')\r\n\r\n    newLine.setAttribute('x1', `${start[0]}`)\r\n    newLine.setAttribute('y1', `${start[1]}`)\r\n    newLine.setAttribute('x2', `${end[0]}`)\r\n    newLine.setAttribute('y2', `${end[1]}`)\r\n    newLine.setAttribute('stroke', color)\r\n    newLine.setAttribute('stroke-width', strokeWidth)\r\n\r\n    if (lineDash) {\r\n      newLine.setAttribute('stroke-dasharray', lineDash)\r\n    }\r\n\r\n    svgDrawingHelper._appendNode(newLine, svgNodeHash)\r\n  }\r\n}\r\n","import _getHash from './_getHash'\r\nimport { Point2 } from '../types'\r\n\r\n/**\r\n * Draws a textBox.\r\n *\r\n * @param textLines   The text to display.\r\n * @param position    The x/y position of the textbox\r\n * @param options     Options for the textBox.\r\n * @returns Bounding box; can be used for pointNearTool\r\n */\r\nfunction drawTextBox(\r\n  svgDrawingHelper: Record<string, unknown>,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  textUID: string,\r\n  textLines: Array<string>,\r\n  position: Point2,\r\n  options = {}\r\n): SVGRect {\r\n  const mergedOptions = Object.assign(\r\n    {\r\n      fontFamily: 'Helvetica, Arial, sans-serif',\r\n      fontSize: '14px',\r\n      color: 'rgb(255, 255, 0)',\r\n      background: '',\r\n      padding: 25,\r\n      centerX: false,\r\n      centerY: true,\r\n    },\r\n    options\r\n  )\r\n\r\n  // Draw each of the text lines on top of the background box\r\n  const textGroupBoundingBox = _drawTextGroup(\r\n    svgDrawingHelper,\r\n    toolUID,\r\n    annotationUID,\r\n    textUID,\r\n    textLines,\r\n    position,\r\n    mergedOptions\r\n  )\r\n\r\n  // let [x, y] = position\r\n\r\n  // // Draw the background box with padding\r\n  // if (centerX === true) {\r\n  //   x -= textGroupBoundingBox.width / 2\r\n  // }\r\n\r\n  // if (centerY === true) {\r\n  //   y -= textGroupBoundingBox.height / 2\r\n  // }\r\n  // TODO: Must be under text nodes\r\n  // Rectangle....\r\n  // fillBox(boundingBox, fillStyle)\r\n  return textGroupBoundingBox\r\n}\r\n\r\nfunction _drawTextGroup(\r\n  svgDrawingHelper: any,\r\n  toolUID: any,\r\n  annotationUID: string,\r\n  textUID: string,\r\n  textLines: Array<string>,\r\n  position: Point2,\r\n  options: any\r\n): DOMRect {\r\n  const { padding, color, fontFamily, fontSize, background } = options\r\n\r\n  let textGroupBoundingBox\r\n  const [x, y] = [position[0] + padding, position[1] + padding]\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const svgNodeHash = _getHash(toolUID, annotationUID, 'text', textUID)\r\n  const existingTextGroup = svgDrawingHelper._getSvgNode(svgNodeHash)\r\n\r\n  if (existingTextGroup) {\r\n    existingTextGroup.setAttribute('transform', `translate(${x} ${y})`)\r\n    // TODO: Iterate each node and update color? font-size?\r\n    // TODO: Does not support change in # of text lines\r\n    const textElement = existingTextGroup.querySelector('text')\r\n    const textSpans = Array.from(textElement.children) as Array<SVGElement>\r\n\r\n    for (let i = 0; i < textSpans.length; i++) {\r\n      const textSpanElement = textSpans[i]\r\n      const text = textLines[i] || ''\r\n\r\n      textSpanElement.textContent = text\r\n    }\r\n\r\n    if (fontFamily) {\r\n      textElement.setAttribute('font-family', fontFamily)\r\n    } else {\r\n      textElement.removeAttribute('font-family')\r\n    }\r\n\r\n    if (fontSize) {\r\n      textElement.setAttribute('font-size', fontSize)\r\n    } else {\r\n      textElement.removeAttribute('font-size')\r\n    }\r\n\r\n    if (color) {\r\n      textElement.setAttribute('fill', color)\r\n    } else {\r\n      textElement.removeAttribute('fill')\r\n    }\r\n\r\n    _drawTextBackground(existingTextGroup, background)\r\n    textGroupBoundingBox = existingTextGroup.getBBox()\r\n    svgDrawingHelper._setNodeTouched(svgNodeHash)\r\n  } else {\r\n    const textGroup = document.createElementNS(svgns, 'g')\r\n\r\n    textGroup.setAttribute('transform', `translate(${x} ${y})`)\r\n\r\n    //\r\n    const textElement = _createTextElement(options)\r\n    for (let i = 0; i < textLines.length; i++) {\r\n      const textLine = textLines[i]\r\n      const textSpan = _createTextSpan(textLine)\r\n\r\n      textElement.appendChild(textSpan)\r\n    }\r\n\r\n    textGroup.appendChild(textElement)\r\n    svgDrawingHelper._appendNode(textGroup, svgNodeHash)\r\n    _drawTextBackground(textGroup, background)\r\n    textGroupBoundingBox = textGroup.getBBox()\r\n  }\r\n\r\n  // We translate the group using `position`\r\n  // which means we also need to pluck those values when returning\r\n  // the bounding box\r\n  return Object.assign({}, textGroupBoundingBox, {\r\n    x,\r\n    y,\r\n    height: textGroupBoundingBox.height + padding,\r\n    width: textGroupBoundingBox.width + padding,\r\n  })\r\n}\r\n\r\nfunction _createTextElement(options: any): SVGElement {\r\n  const { color, fontFamily, fontSize } = options\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const textElement = document.createElementNS(svgns, 'text')\r\n  const noSelectStyle =\r\n    'user-select: none; pointer-events: none; -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);'\r\n  const dropShadowStyle = 'filter:url(#shadow);'\r\n  const combinedStyle = `${noSelectStyle}${dropShadowStyle}`\r\n\r\n  // font-size=\"100\"\r\n  textElement.setAttribute('x', '0')\r\n  textElement.setAttribute('y', '0')\r\n  textElement.setAttribute('fill', color)\r\n  textElement.setAttribute('font-family', fontFamily)\r\n  textElement.setAttribute('font-size', fontSize)\r\n  textElement.setAttribute('style', combinedStyle)\r\n\r\n  return textElement\r\n}\r\n\r\nfunction _createTextSpan(text): SVGElement {\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const textSpanElement = document.createElementNS(svgns, 'tspan')\r\n\r\n  // TODO: centerX\r\n  // (parent width / 2) - my width\r\n  // TODO: centerY\r\n\r\n  textSpanElement.setAttribute('x', '0')\r\n  textSpanElement.setAttribute('dy', '1.2em')\r\n  textSpanElement.textContent = text\r\n\r\n  return textSpanElement\r\n}\r\n\r\nfunction _drawTextBackground(group: SVGGElement, color: string): void {\r\n  let element = group.querySelector('rect.background')\r\n  if (color) {\r\n    if (!element) {\r\n      element = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\r\n      element.setAttribute('class', 'background')\r\n      group.insertBefore(element, group.firstChild)\r\n    }\r\n    const bBox = group.getBBox()\r\n    element.setAttribute('x', `${bBox.x}`)\r\n    element.setAttribute('y', `${bBox.y}`)\r\n    element.setAttribute('width', `${bBox.width}`)\r\n    element.setAttribute('height', `${bBox.height}`)\r\n    element.setAttribute('fill', color)\r\n  } else if (element) {\r\n    group.removeChild(element)\r\n  }\r\n}\r\n\r\nexport default drawTextBox\r\n","import drawLine from './drawLine'\r\nimport findClosestPoint from '../util/math/vec2/findClosestPoint'\r\nimport { PlanarBoundingBox, Point2 } from '../types'\r\n\r\n/**\r\n * Draw a link between an annotation to a box.\r\n */\r\nfunction drawLink(\r\n  svgDrawingHelper: Record<string, unknown>,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  linkUID: string,\r\n  // Find closest point to approx. bounding box\r\n  annotationAnchorPoints: Array<Point2>,\r\n  refPoint: Point2,\r\n  // Find bounding box point that's closest to our identified\r\n  // start point\r\n  boundingBox: PlanarBoundingBox,\r\n  options = {}\r\n): void {\r\n  // The closest anchor point (for the annotation) to the\r\n  // text box / bounding box\r\n  const start =\r\n    annotationAnchorPoints.length > 0\r\n      ? findClosestPoint(annotationAnchorPoints, refPoint)\r\n      : refPoint\r\n\r\n  // Calculate the midpoints of the bounding box\r\n  const boundingBoxPoints = _boundingBoxPoints(boundingBox)\r\n  // Find the closest textBox midpoint to the annotation's anchor/start point\r\n  const end = findClosestPoint(boundingBoxPoints, start)\r\n\r\n  // Finally we draw the dashed linking line\r\n  const mergedOptions = Object.assign(\r\n    {\r\n      color: 'rgb(255, 255, 0)',\r\n      lineWidth: '1',\r\n      lineDash: '2,3',\r\n    },\r\n    options\r\n  )\r\n\r\n  drawLine(\r\n    svgDrawingHelper,\r\n    toolUID,\r\n    annotationUID,\r\n    `link-${linkUID}`,\r\n    start,\r\n    end,\r\n    mergedOptions\r\n  )\r\n}\r\n\r\n/**\r\n * Find potential anchor points for a given bounding box. For example, it may\r\n * look nicer to draw a line from the \"middle left\" of a bounding box to an\r\n * annotation (instead of from a corner). This function calculates those points\r\n *\r\n * @param boundingBox\r\n */\r\nfunction _boundingBoxPoints(boundingBox: PlanarBoundingBox): Array<Point2> {\r\n  const { x: left, y: top, height, width } = boundingBox\r\n  const halfWidth = width / 2\r\n  const halfHeight = height / 2\r\n\r\n  const topMiddle = [left + halfWidth, top] as Point2\r\n  const leftMiddle = [left, top + halfHeight] as Point2\r\n  const bottomMiddle = [left + halfWidth, top + height] as Point2\r\n  const rightMiddle = [left + width, top + halfHeight] as Point2\r\n\r\n  return [topMiddle, leftMiddle, bottomMiddle, rightMiddle]\r\n}\r\n\r\nexport default drawLink\r\n","import drawTextBox from './drawTextBox'\r\nimport { Point2, ToolStateTextBox } from '../types'\r\nimport drawLink from './drawLink'\r\n\r\nfunction drawLinkedTextBox(\r\n  svgDrawingHelper: Record<string, unknown>,\r\n  //\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  textBoxUID: string,\r\n  //\r\n  textLines: Array<string>,\r\n  textBoxPosition: Point2,\r\n  annotationAnchorPoints: Array<Point2>,\r\n  // textBox: ToolStateTextBox,\r\n  textBox: unknown,\r\n  options = {}\r\n  // TODO: yCenter as an option\r\n): SVGRect {\r\n  const mergedOptions = Object.assign(\r\n    {\r\n      handleRadius: '6',\r\n      centering: {\r\n        x: false,\r\n        y: true, // yCenter,\r\n      },\r\n    },\r\n    options\r\n  )\r\n\r\n  // Draw the text box\r\n  const canvasBoundingBox = drawTextBox(\r\n    svgDrawingHelper,\r\n    toolUID,\r\n    annotationUID,\r\n    textBoxUID,\r\n    textLines,\r\n    textBoxPosition,\r\n    mergedOptions\r\n  )\r\n  // if (textBox.hasMoved) {\r\n  //   // Draw dashed link line between tool and text\r\n  drawLink(\r\n    svgDrawingHelper,\r\n    toolUID,\r\n    annotationUID,\r\n    textBoxUID,\r\n    annotationAnchorPoints, // annotationAnchorPoints\r\n    textBoxPosition, // refPoint (text)\r\n    canvasBoundingBox, // textBoxBoundingBox\r\n    mergedOptions\r\n  )\r\n  // }\r\n\r\n  // const { top, left, width, height } = canvasBoundingBox\r\n\r\n  // textBox.worldBoundingBox = {\r\n  //   topLeft: canvasToWorld([left, top]),\r\n  //   topRight: canvasToWorld([left + width, top]),\r\n  //   bottomLeft: canvasToWorld([left, top + height]),\r\n  //   bottomRight: canvasToWorld([left + width, top + height]),\r\n  // }\r\n\r\n  return canvasBoundingBox\r\n}\r\n\r\nexport default drawLinkedTextBox\r\n","import _getHash from './_getHash'\r\nimport { Point2 } from '../types'\r\n\r\n// <rect x=\"120\" y=\"100\" width=\"100\" height=\"100\" />\r\nexport default function drawRect(\r\n  svgDrawingHelper: any,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  rectangleUID: string,\r\n  start: Point2,\r\n  end: Point2,\r\n  options = {}\r\n): void {\r\n  const { color, width: _width, lineWidth, lineDash } = Object.assign(\r\n    {\r\n      color: 'dodgerblue',\r\n      width: '2',\r\n      lineWidth: undefined,\r\n      lineDash: undefined,\r\n    },\r\n    options\r\n  )\r\n\r\n  // for supporting both lineWidth and width options\r\n  const strokeWidth = lineWidth || _width\r\n\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const svgNodeHash = _getHash(toolUID, annotationUID, 'rect', rectangleUID)\r\n  const existingRect = svgDrawingHelper._getSvgNode(svgNodeHash)\r\n\r\n  const tlhc = [Math.min(start[0], end[0]), Math.min(start[1], end[1])]\r\n  const width = Math.abs(start[0] - end[0])\r\n  const height = Math.abs(start[1] - end[1])\r\n\r\n  if (existingRect) {\r\n    existingRect.setAttribute('x', `${tlhc[0]}`)\r\n    existingRect.setAttribute('y', `${tlhc[1]}`)\r\n    existingRect.setAttribute('width', `${width}`)\r\n    existingRect.setAttribute('height', `${height}`)\r\n    existingRect.setAttribute('stroke', color)\r\n    existingRect.setAttribute('stroke-width', strokeWidth)\r\n\r\n    if (lineDash) {\r\n      existingRect.setAttribute('stroke-dasharray', lineDash)\r\n    } else {\r\n      existingRect.removeAttribute('stroke-dasharray')\r\n    }\r\n\r\n    svgDrawingHelper._setNodeTouched(svgNodeHash)\r\n  } else {\r\n    const svgRectElement = document.createElementNS(svgns, 'rect')\r\n\r\n    svgRectElement.setAttribute('x', `${tlhc[0]}`)\r\n    svgRectElement.setAttribute('y', `${tlhc[1]}`)\r\n    svgRectElement.setAttribute('width', `${width}`)\r\n    svgRectElement.setAttribute('height', `${height}`)\r\n    svgRectElement.setAttribute('fill', 'transparent')\r\n    svgRectElement.setAttribute('stroke', color)\r\n    svgRectElement.setAttribute('stroke-width', strokeWidth)\r\n\r\n    if (lineDash) {\r\n      svgRectElement.setAttribute('stroke-dasharray', lineDash)\r\n    }\r\n\r\n    svgDrawingHelper._appendNode(svgRectElement, svgNodeHash)\r\n  }\r\n}\r\n","import { ToolGroupManager } from '../../store'\r\nimport { ToolModes } from '../../enums'\r\n\r\ntype ModesFilter = Array<ToolModes>\r\n\r\n/**\r\n * @function getToolsWithModesForMouseEvent Given the event and a filter of modes,\r\n * find all the tools on the element that are in one of the specified modes.\r\n * @param {Event} evt The normalized mouseDown event.\r\n * @param modesFilter An array of entries from the `ToolModes` enum.\r\n */\r\nexport default function getToolsWithModesForMouseEvent(\r\n  evt,\r\n  modesFilter: ModesFilter,\r\n  evtButton?: any\r\n) {\r\n  const { renderingEngineUID, sceneUID, viewportUID } = evt.detail\r\n  const toolGroups = ToolGroupManager.getToolGroups(\r\n    renderingEngineUID,\r\n    sceneUID,\r\n    viewportUID\r\n  )\r\n\r\n  const enabledTools = []\r\n\r\n  for (let i = 0; i < toolGroups.length; i++) {\r\n    const toolGroup = toolGroups[i]\r\n    const toolGroupToolNames = Object.keys(toolGroup.tools)\r\n\r\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\r\n      const toolName = toolGroupToolNames[j]\r\n      const tool = toolGroup.tools[toolName]\r\n\r\n      if (\r\n        modesFilter.includes(tool.mode) &&\r\n        // Should not filter by event's button\r\n        // or should, and the tool binding includes the event's button\r\n        (!evtButton || tool.bindings.includes(evtButton))\r\n      ) {\r\n        const toolInstance = toolGroup._tools[toolName]\r\n        enabledTools.push(toolInstance)\r\n      }\r\n    }\r\n  }\r\n\r\n  return enabledTools\r\n}\r\n","import { EVENTS as RenderingEngineEvents } from '@ohif/cornerstone-render'\r\nimport { ToolModes } from '../enums'\r\nimport { draw as drawSvg } from '../drawingSvg'\r\nimport getToolsWithModesForMouseEvent from './shared/getToolsWithModesForMouseEvent'\r\n\r\nconst { Active, Passive, Enabled } = ToolModes\r\n\r\n/**\r\n * @function onImageRendered - When the image is rendered, check what tools can be rendered for this element.\r\n *\r\n * - First we get all tools which are active, passive or enabled on the element.\r\n * - If any of these tools have a `renderToolData` method, then we render them.\r\n * - Note that these tools don't necessarily have to be instances of  `BaseAnnotationTool`,\r\n *   Any tool may register a `renderToolData` method (e.g. a tool that displays an overlay).\r\n *\r\n * @param evt The normalized onImageRendered event.\r\n */\r\nconst onImageRendered = function (evt) {\r\n  const { canvas: canvasElement } = evt.detail\r\n  const enabledTools = getToolsWithModesForMouseEvent(evt, [\r\n    Active,\r\n    Passive,\r\n    Enabled,\r\n  ])\r\n\r\n  drawSvg(canvasElement, (svgDrawingHelper) => {\r\n    enabledTools.forEach((tool) => {\r\n      // TODO: Could short-circuit if there's no ToolState?\r\n      // Are there situations where that would be bad (Canvas Overlay Tool?)\r\n      if (tool.renderToolData) {\r\n        tool.renderToolData(evt, svgDrawingHelper)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nconst enable = function (element) {\r\n  element.addEventListener(\r\n    RenderingEngineEvents.IMAGE_RENDERED,\r\n    onImageRendered\r\n  )\r\n}\r\n\r\nconst disable = function (element) {\r\n  element.removeEventListener(\r\n    RenderingEngineEvents.IMAGE_RENDERED,\r\n    onImageRendered\r\n  )\r\n}\r\n\r\nexport default {\r\n  enable,\r\n  disable,\r\n}\r\n","import { state, ToolGroupManager } from '../../store'\r\nimport ToolModes from '../../enums/ToolModes'\r\n\r\nconst { Active } = ToolModes\r\n\r\n/**\r\n * @function customCallbackHandler This is used as a generic event handler for tool events\r\n * on viewports. It:\r\n *\r\n * - Finds an \"active\" tool with:\r\n *    - A matching `handlerType`\r\n *    - A matching `customFunction` on its tool instance\r\n *\r\n * Then calls that custom function with raised event.\r\n *\r\n * @param handlerType - 'Mouse' | 'Touch' | 'MouseWheel'\r\n * @param customFunction - Function name that's expected to live on implementing\r\n *   (and event handling) active tool ex. 'doubleClickCallback'\r\n * @param evt\r\n */\r\nexport default function customCallbackHandler(\r\n  handlerType: string,\r\n  customFunction: string,\r\n  evt\r\n) {\r\n  if (state.isToolLocked) {\r\n    return false\r\n  }\r\n\r\n  const { renderingEngineUID, sceneUID, viewportUID } = evt.detail\r\n  const toolGroups = ToolGroupManager.getToolGroups(\r\n    renderingEngineUID,\r\n    sceneUID,\r\n    viewportUID\r\n  )\r\n\r\n  // TODO: Filter tools by interaction type?\r\n  /**\r\n   * Iterate tool group tools until we find a tool that is:\r\n   * - active\r\n   * - has the custom callback function\r\n   *\r\n   */\r\n  let activeTool\r\n  for (let i = 0; i < toolGroups.length; i++) {\r\n    const toolGroup = toolGroups[i]\r\n    const toolGroupToolNames = Object.keys(toolGroup.tools)\r\n\r\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\r\n      const toolName = toolGroupToolNames[j]\r\n      const tool = toolGroup.tools[toolName]\r\n      // TODO: Should be getter\r\n      const toolInstance = toolGroup._tools[toolName]\r\n\r\n      if (\r\n        // TODO: Should be enum?\r\n        tool.mode === Active &&\r\n        // TODO: Should be implements interface?\r\n        // Weird that we need concrete instance. Other options to filter / get callback?\r\n        typeof toolInstance[customFunction] === 'function'\r\n      ) {\r\n        // This should be behind some API. Too much knowledge of ToolGroup\r\n        // inner workings leaking out\r\n        activeTool = toolGroup._tools[toolName]\r\n        break\r\n      }\r\n    }\r\n\r\n    if (activeTool) {\r\n      break\r\n    }\r\n  }\r\n\r\n  if (!activeTool) {\r\n    return\r\n  }\r\n\r\n  activeTool[customFunction](evt)\r\n}\r\n","import customCallbackHandler from '../shared/customCallbackHandler'\r\n\r\n/**\r\n * @function mouseClick - Event handler for mouse click events. Uses `customCallbackHandler` to fire\r\n * the `mouseClickCallback` function on active tools.\r\n */\r\nconst mouseClick = customCallbackHandler.bind(\r\n  null,\r\n  'Mouse',\r\n  'mouseClickCallback'\r\n)\r\n\r\nexport default mouseClick\r\n","import customCallbackHandler from '../shared/customCallbackHandler'\r\n\r\n/**\r\n * @function mouseDoubleClick - Event handler for mouse double click events. Uses `customCallbackHandler` to fire\r\n * the `doubleClickCallback` function on active tools.\r\n */\r\nconst mouseDoubleClick = customCallbackHandler.bind(\r\n  null,\r\n  'Mouse',\r\n  'doubleClickCallback'\r\n)\r\n\r\nexport default mouseDoubleClick\r\n","import { eventTarget, triggerEvent } from '@ohif/cornerstone-render'\r\nimport { CornerstoneTools3DEvents } from '../enums'\r\nimport { ToolSpecificToolData } from '../types'\r\n\r\n/*\r\n * Types\r\n */\r\n\r\ntype SelectionChangeDetail = {\r\n  // Items added to selection\r\n  added: Array<ToolSpecificToolData>\r\n  // Items removed from selection\r\n  removed: Array<ToolSpecificToolData>\r\n  // Updated selection snapshot\r\n  selection: Array<ToolSpecificToolData>\r\n}\r\n\r\n/*\r\n * Constants\r\n */\r\n\r\nconst selectedToolData: Set<ToolSpecificToolData> = new Set()\r\n\r\n/*\r\n * Interface (Public API)\r\n */\r\n\r\n/**\r\n * Set a given tool data instance as selected.\r\n *\r\n * @param {ToolSpecificToolData} toolData The tool data instance to be selected\r\n * @param {boolean} [preserveSelected=false] When true, preserves existing\r\n *  selections (i.e., the given tool data is appended to the selection set).\r\n *  When false (the default behavior) the currently selected items are discarded\r\n *  (i.e., the given tool data instance replaces the currently selected ones).\r\n */\r\nfunction selectToolData(\r\n  toolData: ToolSpecificToolData,\r\n  preserveSelected = false\r\n): void {\r\n  const detail = makeEventDetail()\r\n  if (!preserveSelected) {\r\n    clearSelectionSet(selectedToolData, detail)\r\n  }\r\n  if (toolData) {\r\n    selectedToolData.add(toolData)\r\n    detail.added.push(toolData)\r\n  }\r\n  publish(detail, selectedToolData)\r\n}\r\n\r\n/**\r\n * Deselect one or all tool data instances.\r\n *\r\n * @param {ToolSpecificToolData} [toolData] Optional. If a tool data instance is\r\n * provided that instance will be removed from the internal selection set.\r\n * If none is given, ALL selections will be cleared.\r\n */\r\nfunction deselectToolData(toolData?: ToolSpecificToolData): void {\r\n  const detail = makeEventDetail()\r\n  if (toolData) {\r\n    if (selectedToolData.delete(toolData)) {\r\n      detail.removed.push(toolData)\r\n    }\r\n  } else {\r\n    clearSelectionSet(selectedToolData, detail)\r\n  }\r\n  publish(detail, selectedToolData)\r\n}\r\n\r\nfunction getSelectedToolData(): Array<ToolSpecificToolData> {\r\n  return Array.from(selectedToolData)\r\n}\r\n\r\nfunction getSelectedToolDataByUID(toolUID: string): ToolSpecificToolData {\r\n  return getSelectedToolData().find((toolData) => {\r\n    return toolData.metadata.toolUID === toolUID\r\n  })\r\n}\r\n\r\nfunction isToolDataSelected(toolData: ToolSpecificToolData): boolean {\r\n  return selectedToolData.has(toolData)\r\n}\r\n\r\nfunction getSelectionSize(): number {\r\n  return selectedToolData.size\r\n}\r\n\r\n/*\r\n * Private Helpers\r\n */\r\n\r\nfunction makeEventDetail(): SelectionChangeDetail {\r\n  return Object.freeze({\r\n    added: [],\r\n    removed: [],\r\n    selection: [],\r\n  })\r\n}\r\n\r\nfunction clearSelectionSet(\r\n  selectionSet: Set<ToolSpecificToolData>,\r\n  detail: SelectionChangeDetail\r\n): void {\r\n  selectionSet.forEach((value) => {\r\n    if (selectionSet.delete(value)) {\r\n      detail.removed.push(value)\r\n    }\r\n  })\r\n}\r\n\r\nfunction publish(\r\n  detail: SelectionChangeDetail,\r\n  selectionSet: Set<ToolSpecificToolData>\r\n) {\r\n  if (detail.added.length > 0 || detail.removed.length > 0) {\r\n    selectionSet.forEach((item) => void detail.selection.push(item))\r\n    triggerEvent(\r\n      eventTarget,\r\n      CornerstoneTools3DEvents.MEASUREMENT_SELECTION_CHANGE,\r\n      detail\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n * Exports\r\n */\r\n\r\nexport {\r\n  SelectionChangeDetail,\r\n  selectToolData,\r\n  deselectToolData,\r\n  getSelectedToolData,\r\n  getSelectedToolDataByUID,\r\n  isToolDataSelected,\r\n  getSelectionSize,\r\n}\r\n","import { getToolState } from '../stateManagement/toolState'\r\nimport { ToolAndToolStateArray } from '../types/toolStateTypes'\r\nimport { getEnabledElement } from '@ohif/cornerstone-render'\r\n\r\n/**\r\n * @function getToolsWithDataForElement Filters an array of tools, returning only\r\n * tools which have annotation data.\r\n *\r\n * @param  {HTMLElement} element The cornerstone3D enabled element.\r\n * @param  {Object[]} tools The array of tools to check.\r\n *\r\n * @returns {ToolAndToolStateArray} The array of tools with their found toolState.\r\n */\r\nexport default function getToolsWithDataForElement(\r\n  element: HTMLElement,\r\n  tools\r\n): ToolAndToolStateArray {\r\n  const result = []\r\n\r\n  for (let i = 0; i < tools.length; i++) {\r\n    const tool = tools[i]\r\n\r\n    if (!tool) {\r\n      console.warn('undefined tool in getToolsWithDataForElement')\r\n      continue\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    let toolState = getToolState(enabledElement, tool.name)\r\n\r\n    if (!toolState) {\r\n      continue\r\n    }\r\n\r\n    if (typeof tool.filterInteractableToolStateForElement === 'function') {\r\n      // If the tool has a toolState filter (e.g. with in-plane-annotations-only filtering), use it.\r\n      toolState = tool.filterInteractableToolStateForElement(element, toolState)\r\n    }\r\n\r\n    if (toolState.length > 0) {\r\n      result.push({ tool, toolState })\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n","import { ToolGroupManager } from '../../store'\r\nimport { ToolModes } from '../../enums'\r\n\r\nconst { Active } = ToolModes\r\n\r\n/**\r\n * @function getActiveToolForMouseEvent Iterate tool group tools until we find a tool that has a \"ToolBinding\"\r\n * that matches our MouseEvent's `buttons`. It's possible there will be no match (no active tool for that mouse button combination).\r\n *\r\n * @param evt The event dispatcher mouse event.\r\n *\r\n * @returns {object} tool.\r\n */\r\nexport default function getActiveToolForMouseEvent(evt) {\r\n  const { renderingEngineUID, sceneUID, viewportUID } = evt.detail\r\n  const mouseEvent = evt.detail.event\r\n\r\n  const toolGroups = ToolGroupManager.getToolGroups(\r\n    renderingEngineUID,\r\n    sceneUID,\r\n    viewportUID\r\n  )\r\n\r\n  for (let i = 0; i < toolGroups.length; i++) {\r\n    const toolGroup = toolGroups[i]\r\n    const toolGroupToolNames = Object.keys(toolGroup.tools)\r\n\r\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\r\n      const toolName = toolGroupToolNames[j]\r\n      const tool = toolGroup.tools[toolName]\r\n\r\n      if (tool.mode === Active && tool.bindings.includes(mouseEvent.buttons)) {\r\n        // This should be behind some API. Too much knowledge of ToolGroup\r\n        // inner workings leaking out\r\n        return toolGroup._tools[toolName]\r\n      }\r\n    }\r\n  }\r\n}\r\n","// State\r\nimport {\r\n  // getters,\r\n  state,\r\n} from '../../store'\r\n\r\nimport { ToolModes } from '../../enums'\r\nimport { ToolSpecificToolData } from '../../types'\r\n\r\nimport {\r\n  selectToolData,\r\n  deselectToolData,\r\n  isToolDataSelected,\r\n} from '../../stateManagement/toolDataSelection'\r\n\r\n// // Util\r\nimport getToolsWithMoveableHandles from '../../store/getToolsWithMoveableHandles'\r\nimport getToolsWithDataForElement from '../../store/getToolsWithDataForElement'\r\nimport getMoveableAnnotationTools from '../../store/getMoveableAnnotationTools'\r\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent'\r\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent'\r\n\r\nconst { Active, Passive } = ToolModes\r\n\r\n/**\r\n * @function mouseDown - When the mouse is depressed we check which entities can process these events in the following manner:\r\n *\r\n * - First we get the `activeTool` for the mouse button pressed.\r\n * - If the `activeTool` has a `preMouseDownCallback`, this is called. If the callback returns `true`,\r\n *   the event does not propagate further.\r\n * - Next we get all tools which are active or passive (`activeAndPassiveTools`), as toolData for these tools could\r\n *   possibly catch and handle these events. We then filter the `activeAndPassiveTools` using `getToolsWithDataForElement`, which filters tools with `toolState`\r\n *   for this frame of reference. Optionally a tool can employ a further filtering (via a\r\n *   `filterInteractableToolStateForElement` callback) for tools interactable within the current camera view\r\n *   (e.g. tools that only render when viewed from a certain direction).\r\n * - Next we check if any handles are interactable for each tool (`getToolsWithMoveableHandles`). If interactable\r\n *   handles are found, the first tool/handle found consumes the event and the event does not propagate further.\r\n * - Next we check any tools are interactable (e.g. moving an entire length annotation rather than one of its handles:\r\n *   `getMoveableAnnotationTools`). If interactable tools are found, the first tool found consumes the event and the\r\n *   event does not propagate further.\r\n * - Finally, if the `activeTool` has `postMouseDownCallback`, this is called.  If the callback returns `true`,\r\n *   the event does not propagate further.\r\n *\r\n * If the event is not consumed the event will bubble to the `mouseDownActivate` handler.\r\n *\r\n * @param {Event} evt The normalized mouseDown event.\r\n */\r\nexport default function mouseDown(evt) {\r\n  // If a tool has locked the current state it is dealing with an interaction within its own eventloop.\r\n  if (state.isToolLocked) {\r\n    return\r\n  }\r\n\r\n  const activeTool = getActiveToolForMouseEvent(evt)\r\n\r\n  // Check for preMouseDownCallbacks\r\n  if (activeTool && typeof activeTool.preMouseDownCallback === 'function') {\r\n    const consumedEvent = activeTool.preMouseDownCallback(evt)\r\n\r\n    if (consumedEvent) {\r\n      // If the tool claims it consumed the event, prevent further checks.\r\n      return\r\n    }\r\n  }\r\n\r\n  // Find all tools that might respond to this mouse down\r\n  const isPrimaryClick = evt.detail.event.buttons === 1\r\n  const activeToolsWithEventBinding = getToolsWithModesForMouseEvent(\r\n    evt,\r\n    [Active],\r\n    evt.detail.event.buttons\r\n  )\r\n  const passiveToolsIfEventWasPrimaryMouseButton = isPrimaryClick\r\n    ? getToolsWithModesForMouseEvent(evt, [Passive])\r\n    : undefined\r\n  const applicableTools = [\r\n    ...(activeToolsWithEventBinding || []),\r\n    ...(passiveToolsIfEventWasPrimaryMouseButton || []),\r\n  ]\r\n\r\n  const eventData = evt.detail\r\n  const { element } = eventData\r\n\r\n  // Annotation tool specific\r\n  const annotationTools = getToolsWithDataForElement(element, applicableTools)\r\n  const canvasCoords = eventData.currentPoints.canvas\r\n  const annotationToolsWithMoveableHandles = getToolsWithMoveableHandles(\r\n    element,\r\n    annotationTools,\r\n    canvasCoords,\r\n    'mouse'\r\n  )\r\n\r\n  // Preserve existing selections when shift key is pressed\r\n  const isMultiSelect = !!evt.detail.event.shiftKey\r\n\r\n  if (annotationToolsWithMoveableHandles.length > 0) {\r\n    // Choose first tool for now.\r\n    const { tool, toolData, handle } = annotationToolsWithMoveableHandles[0]\r\n\r\n    toggleToolDataSelection(toolData, isMultiSelect)\r\n    tool.handleSelectedCallback(evt, toolData, handle, 'mouse')\r\n\r\n    return\r\n  }\r\n\r\n  const moveableAnnotationTools = getMoveableAnnotationTools(\r\n    element,\r\n    annotationTools,\r\n    canvasCoords,\r\n    'mouse'\r\n  )\r\n\r\n  if (moveableAnnotationTools.length > 0) {\r\n    // Choose first tool for now.\r\n    const { tool, toolData } = moveableAnnotationTools[0]\r\n\r\n    toggleToolDataSelection(toolData, isMultiSelect)\r\n    tool.toolSelectedCallback(evt, toolData, 'mouse')\r\n\r\n    return\r\n  }\r\n\r\n  if (activeTool && typeof activeTool.postMouseDownCallback === 'function') {\r\n    const consumedEvent = activeTool.postMouseDownCallback(evt)\r\n\r\n    if (consumedEvent) {\r\n      // If the tool claims it consumed the event, prevent further checks.\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleToolDataSelection(\r\n  toolData: ToolSpecificToolData,\r\n  isMultiSelect = false\r\n): void {\r\n  if (isMultiSelect) {\r\n    if (isToolDataSelected(toolData)) {\r\n      deselectToolData(toolData)\r\n    } else {\r\n      selectToolData(toolData, true)\r\n    }\r\n  } else {\r\n    selectToolData(toolData, false)\r\n  }\r\n}\r\n","import { ToolAndToolStateArray, ToolSpecificToolData, Point2 } from '../types'\r\n\r\ntype ToolsWithMoveableHandles = {\r\n  tool: any\r\n  toolData: ToolSpecificToolData\r\n  handle: any\r\n}\r\n\r\n/**\r\n * @function getToolsWithMoveableHandles Filters an array of tools, returning\r\n * only tools with moveable handles at the mouse location.\r\n *\r\n * @public\r\n * @function getToolsWithMoveableHandles\r\n *\r\n * @param  {HTMLElement} element The element\r\n * @param  {ToolAndToolStateArray}   toolAndToolStateArray   The input tool array.\r\n * @param  {Point2}      canvasCoords  The coordinates of the mouse position.\r\n * @param  {string}      [interactionType=mouse]\r\n * @returns {ToolAndToolStateArray}            The filtered array.\r\n */\r\nexport default function getToolsWithMoveableHandles(\r\n  element: HTMLElement,\r\n  toolAndToolStateArray: ToolAndToolStateArray,\r\n  canvasCoords: Point2,\r\n  interactionType = 'mouse'\r\n): Array<ToolsWithMoveableHandles> {\r\n  const proximity = 6\r\n\r\n  if (toolAndToolStateArray.length === 0) {\r\n    return []\r\n  }\r\n\r\n  const toolsWithMoveableHandles = []\r\n\r\n  toolAndToolStateArray.forEach(({ tool, toolState }) => {\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const handle = tool.getHandleNearImagePoint(\r\n        element,\r\n        toolState[i],\r\n        canvasCoords,\r\n        proximity\r\n      )\r\n\r\n      if (handle) {\r\n        toolsWithMoveableHandles.push({\r\n          tool,\r\n          toolData: toolState[i],\r\n          handle,\r\n        })\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  return toolsWithMoveableHandles\r\n}\r\n","import { ToolSpecificToolData, ToolAndToolStateArray, Point2 } from '../types'\r\n\r\ntype ToolAndToolData = {\r\n  tool: any\r\n  toolData: ToolSpecificToolData\r\n}\r\n\r\n/**\r\n * @function getMoveableAnnotationTools Filters an array of tools, returning only\r\n * tools with moveable handles at the mouse location.\r\n *\r\n * @param  {HTMLElement} element The element\r\n * @param  {ToolAndToolStateArray}   toolAndToolStateArray   The input tool array.\r\n * @param  {Point2}      canvasCoords  The coordinates of the mouse position.\r\n * @param  {string}      [interactionType=mouse]\r\n * @returns {ToolAndToolStateArray}            The filtered array.\r\n */\r\nexport default function getMoveableAnnotationTools(\r\n  element: HTMLElement,\r\n  toolAndToolStateArray: ToolAndToolStateArray,\r\n  canvasCoords: Point2,\r\n  interactionType = 'mouse'\r\n): Array<ToolAndToolData> {\r\n  const proximity = 6\r\n\r\n  if (toolAndToolStateArray.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // TODO - This could get pretty expensive pretty quickly. We don't want to fetch the camera\r\n  // And do world to canvas on each coord.\r\n\r\n  // We want to produce a matrix from canvas to world for the viewport and just do a matrix operation on each handle.\r\n  // This could still be expensive for ROIs, but we probably shouldn't have \"handles\" for them anyway.\r\n\r\n  const moveableAnnotationTools = []\r\n\r\n  toolAndToolStateArray.forEach(({ tool, toolState }) => {\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const near = tool.pointNearTool(\r\n        element,\r\n        toolState[i],\r\n        canvasCoords,\r\n        proximity\r\n      )\r\n\r\n      if (near) {\r\n        moveableAnnotationTools.push({\r\n          tool,\r\n          toolData: toolState[i],\r\n        })\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  return moveableAnnotationTools\r\n}\r\n","import { state } from '../../store'\r\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent'\r\nimport { selectToolData } from '../../stateManagement/toolDataSelection'\r\n\r\n/**\r\n * @function mouseDownActivate - If the `mouseDown` handler does not consume an event,\r\n * activate the creation loop of the active tool, if one is found for the\r\n * mouse button pressed.\r\n *\r\n * @param {Event} evt The normalized mouseDown event.\r\n */\r\nexport default function mouseDownActivate(evt) {\r\n  // If a tool has locked the current state it is dealing with an interaction within its own eventloop.\r\n  if (state.isToolLocked) {\r\n    return\r\n  }\r\n\r\n  const activeTool = getActiveToolForMouseEvent(evt)\r\n\r\n  if (!activeTool) {\r\n    return\r\n  }\r\n\r\n  if (state.isMultiPartToolActive) {\r\n    return\r\n  }\r\n\r\n  if (activeTool.addNewMeasurement) {\r\n    selectToolData(activeTool.addNewMeasurement(evt, 'mouse'))\r\n  }\r\n}\r\n","import getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent'\r\nimport { state } from '../../store'\r\n\r\n/**\r\n * @function mouseDrag - Event handler for mouse drag events. Fires the `mouseDragCallback`\r\n * function on active tools.\r\n *\r\n * @param {Event} evt The normalized mouseDown event.\r\n */\r\nexport default function mouseDrag(evt) {\r\n  if (state.isToolLocked) {\r\n    return\r\n  }\r\n\r\n  const activeTool = getActiveToolForMouseEvent(evt)\r\n\r\n  const noFoundToolOrDoesNotHaveMouseDragCallback =\r\n    !activeTool || typeof activeTool.mouseDragCallback !== 'function'\r\n  if (noFoundToolOrDoesNotHaveMouseDragCallback) {\r\n    return\r\n  }\r\n\r\n  activeTool.mouseDragCallback(evt)\r\n}\r\n","// // State\r\nimport { state } from '../../store'\r\nimport { ToolModes } from '../../enums'\r\nimport { getEnabledElement } from '@ohif/cornerstone-render'\r\n\r\n// // Util\r\nimport getToolsWithDataForElement from '../../store/getToolsWithDataForElement'\r\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent'\r\n\r\nconst { Active, Passive } = ToolModes\r\n\r\n/**\r\n * @function mouseMove - On mouse move when not dragging, fire tools `mouseMoveCallback`s.\r\n * This is mostly used to update the [un]hover state\r\n * of a tool.\r\n *\r\n * @param {Event} evt The normalized mouseDown event.\r\n */\r\nexport default function mouseMove(evt) {\r\n  if (state.isToolLocked || state.isMultiPartToolActive) {\r\n    return\r\n  }\r\n\r\n  const activeAndPassiveTools = getToolsWithModesForMouseEvent(evt, [\r\n    Active,\r\n    Passive,\r\n  ])\r\n\r\n  const eventData = evt.detail\r\n  const { element } = eventData\r\n\r\n  // Annotation tool specific\r\n  const annotationTools = getToolsWithDataForElement(\r\n    element,\r\n    activeAndPassiveTools\r\n  )\r\n\r\n  const numAnnotationTools = annotationTools.length\r\n  let imageNeedsUpdate = false\r\n\r\n  for (let t = 0; t < numAnnotationTools; t++) {\r\n    const { tool, toolState } = annotationTools[t]\r\n    if (typeof tool.mouseMoveCallback === 'function') {\r\n      imageNeedsUpdate =\r\n        tool.mouseMoveCallback(evt, toolState) || imageNeedsUpdate\r\n    }\r\n  }\r\n\r\n  // Tool data activation status changed, redraw the image\r\n  if (imageNeedsUpdate === true) {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    viewport.render()\r\n  }\r\n}\r\n","import customCallbackHandler from '../shared/customCallbackHandler'\r\n\r\n/**\r\n * @function mouseClick - Event handler for mouse up events. Uses `customCallbackHandler` to fire\r\n * the `mouseUpCallback` function on active tools.\r\n */\r\nconst mouseUp = customCallbackHandler.bind(null, 'Mouse', 'mouseUpCallback')\r\n\r\nexport default mouseUp\r\n","import customCallbackHandler from '../shared/customCallbackHandler'\r\n\r\n/**\r\n * @function mouseeWheel - Event handler for mouse wheel events. Uses `customCallbackHandler` to fire\r\n * the `mouseWheelCallback` function on active tools.\r\n */\r\nconst mouseWheel = customCallbackHandler.bind(\r\n  null,\r\n  'MouseWheel',\r\n  'mouseWheelCallback'\r\n)\r\n\r\nexport default mouseWheel\r\n","import CornerstoneTools3DEvents from '../enums/CornerstoneTools3DEvents'\r\nimport {\r\n  mouseClick,\r\n  mouseDown,\r\n  mouseDownActivate,\r\n  mouseDoubleClick,\r\n  mouseDrag,\r\n  mouseMove,\r\n  mouseUp,\r\n  mouseWheel,\r\n} from './mouseEventHandlers'\r\n\r\n/**\r\n * @function enable These listeners are emitted in order, and can be cancelled/prevented from bubbling\r\n * by any previous event.\r\n *\r\n * @param {HTMLElement} element\r\n */\r\nconst enable = function (element: HTMLElement) {\r\n  element.addEventListener(CornerstoneTools3DEvents.MOUSE_CLICK, mouseClick)\r\n  element.addEventListener(CornerstoneTools3DEvents.MOUSE_DOWN, mouseDown)\r\n  element.addEventListener(\r\n    CornerstoneTools3DEvents.MOUSE_DOWN_ACTIVATE,\r\n    mouseDownActivate\r\n  )\r\n  element.addEventListener(\r\n    CornerstoneTools3DEvents.MOUSE_DOUBLE_CLICK,\r\n    mouseDoubleClick\r\n  )\r\n  element.addEventListener(CornerstoneTools3DEvents.MOUSE_DRAG, mouseDrag)\r\n  element.addEventListener(CornerstoneTools3DEvents.MOUSE_MOVE, mouseMove)\r\n  element.addEventListener(CornerstoneTools3DEvents.MOUSE_UP, mouseUp)\r\n  element.addEventListener(CornerstoneTools3DEvents.MOUSE_WHEEL, mouseWheel)\r\n}\r\n\r\n/**\r\n * @function disable Remove the MouseToolEventDispatcher handlers from the element.\r\n *\r\n * @param {HTMLElement} element\r\n */\r\nconst disable = function (element: HTMLElement) {\r\n  element.removeEventListener(CornerstoneTools3DEvents.MOUSE_CLICK, mouseClick)\r\n  element.removeEventListener(CornerstoneTools3DEvents.MOUSE_DOWN, mouseDown)\r\n  element.removeEventListener(\r\n    CornerstoneTools3DEvents.MOUSE_DOWN_ACTIVATE,\r\n    mouseDownActivate\r\n  )\r\n  element.removeEventListener(\r\n    CornerstoneTools3DEvents.MOUSE_DOUBLE_CLICK,\r\n    mouseDoubleClick\r\n  )\r\n  element.removeEventListener(CornerstoneTools3DEvents.MOUSE_DRAG, mouseDrag)\r\n  element.removeEventListener(CornerstoneTools3DEvents.MOUSE_MOVE, mouseMove)\r\n  element.removeEventListener(CornerstoneTools3DEvents.MOUSE_UP, mouseUp)\r\n  element.removeEventListener(CornerstoneTools3DEvents.MOUSE_WHEEL, mouseWheel)\r\n}\r\n\r\nconst mouseToolEventDispatcher = {\r\n  enable,\r\n  disable,\r\n}\r\n\r\nexport default mouseToolEventDispatcher\r\n","import { EVENTS as RenderingEngineEvents } from '@ohif/cornerstone-render'\r\nimport { ToolModes } from '../enums'\r\nimport getToolsWithModesForMouseEvent from './shared/getToolsWithModesForMouseEvent'\r\n\r\nconst { Active, Passive, Enabled } = ToolModes\r\n\r\n/**\r\n * @function onCameraModified - When the camera is modified, check what tools need to react to this.\r\n *\r\n * - First we get all tools which are active, passive or enabled on the element.\r\n * - If any of these tools have a `onCameraModified` method, we call it.\r\n *\r\n * @param evt The normalized camera modified event.\r\n */\r\nconst onCameraModified = function (evt) {\r\n  const enabledTools = getToolsWithModesForMouseEvent(evt, [\r\n    Active,\r\n    Passive,\r\n    Enabled,\r\n  ])\r\n\r\n  enabledTools.forEach((tool) => {\r\n    if (tool.onCameraModified) {\r\n      tool.onCameraModified(evt)\r\n    }\r\n  })\r\n}\r\n\r\nconst enable = function (element) {\r\n  element.addEventListener(\r\n    RenderingEngineEvents.CAMERA_MODIFIED,\r\n    onCameraModified\r\n  )\r\n}\r\n\r\nconst disable = function (element) {\r\n  element.removeEventListener(\r\n    RenderingEngineEvents.CAMERA_MODIFIED,\r\n    onCameraModified\r\n  )\r\n}\r\n\r\nexport default {\r\n  enable,\r\n  disable,\r\n}\r\n","import { mouseEventListeners, wheelEventListener } from '../eventListeners'\r\nimport {\r\n  imageRenderedEventDispatcher,\r\n  cameraModifiedEventDispatcher,\r\n  mouseToolEventDispatcher,\r\n} from '../eventDispatchers'\r\nimport { state } from './state'\r\n\r\n/**\r\n * When an element is \"enabled\", add event listeners and dispatchers to it\r\n * so we can use interactions to affect tool behaviors\r\n *\r\n * @param evt The ELEMENT_ENABLED event\r\n */\r\nexport default function addEnabledElement(evt: CustomEvent): void {\r\n  const canvas = <HTMLElement>evt.detail.canvas\r\n  const svgLayer = _createSvgAnnotationLayer()\r\n\r\n  // Reset/Create svgNodeCache for element\r\n  _setSvgNodeCacheForCanvas(canvas)\r\n  _insertAfter(svgLayer, canvas)\r\n\r\n  // Listeners\r\n  mouseEventListeners.enable(canvas)\r\n  wheelEventListener.enable(canvas)\r\n  // Dispatchers: renderer\r\n  imageRenderedEventDispatcher.enable(canvas)\r\n  cameraModifiedEventDispatcher.enable(canvas)\r\n  // Dispatchers: interaction\r\n  mouseToolEventDispatcher.enable(canvas)\r\n  // touchToolEventDispatcher.enable(enabledElement);\r\n\r\n  // State\r\n  state.enabledElements.push(canvas)\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction _createSvgAnnotationLayer(): SVGElement {\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const svgLayer = document.createElementNS(svgns, 'svg')\r\n\r\n  svgLayer.classList.add('svg-layer')\r\n  svgLayer.setAttribute('id', 'svg-layer')\r\n  svgLayer.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\r\n  svgLayer.style.width = '100%'\r\n  svgLayer.style.height = '100%'\r\n  svgLayer.style.pointerEvents = 'none'\r\n  svgLayer.style.position = 'absolute'\r\n\r\n  // Single dropshadow config for now\r\n  const defs = document.createElementNS(svgns, 'defs')\r\n  const filter = document.createElementNS(svgns, 'filter')\r\n  const feOffset = document.createElementNS(svgns, 'feOffset')\r\n  const feColorMatrix = document.createElementNS(svgns, 'feColorMatrix')\r\n  const feGaussianBlur = document.createElementNS(svgns, 'feGaussianBlur')\r\n  const feBlend = document.createElementNS(svgns, 'feBlend')\r\n\r\n  //\r\n  filter.setAttribute('id', 'shadow')\r\n  filter.setAttribute('width', '110%')\r\n  filter.setAttribute('height', '110%')\r\n\r\n  //\r\n  feOffset.setAttribute('result', 'offOut')\r\n  feOffset.setAttribute('in', 'SourceGraphic')\r\n  feOffset.setAttribute('dx', '0.5')\r\n  feOffset.setAttribute('dy', '0.5')\r\n\r\n  //\r\n  feColorMatrix.setAttribute('result', 'matrixOut')\r\n  feColorMatrix.setAttribute('in', 'offOut')\r\n  feColorMatrix.setAttribute('type', 'matrix')\r\n  feColorMatrix.setAttribute(\r\n    'values',\r\n    '0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0'\r\n  )\r\n\r\n  //\r\n  feGaussianBlur.setAttribute('result', 'blurOut')\r\n  feGaussianBlur.setAttribute('in', 'matrixOut')\r\n  feGaussianBlur.setAttribute('stdDeviation', '0.25')\r\n\r\n  //\r\n  feBlend.setAttribute('in', 'SourceGraphic')\r\n  feBlend.setAttribute('in2', 'blurOut')\r\n  feBlend.setAttribute('mode', 'normal')\r\n\r\n  filter.appendChild(feOffset)\r\n  filter.appendChild(feColorMatrix)\r\n  filter.appendChild(feGaussianBlur)\r\n  filter.appendChild(feBlend)\r\n  defs.appendChild(filter)\r\n  svgLayer.appendChild(defs)\r\n\r\n  return svgLayer\r\n}\r\n\r\nfunction _setSvgNodeCacheForCanvas(canvas) {\r\n  const {\r\n    viewportUid: viewportUID,\r\n    sceneUid: sceneUID,\r\n    renderingEngineUid: renderingEngineUID,\r\n  } = canvas.dataset\r\n  const canvasHash = `${viewportUID}:${sceneUID}:${renderingEngineUID}`\r\n\r\n  // Create or reset\r\n  // TODO: If... Reset, we should blow out any nodes in DOM\r\n  state.svgNodeCache[canvasHash] = {}\r\n}\r\n\r\n/**\r\n *\r\n * @param newNode\r\n * @param referenceNode\r\n */\r\nfunction _insertAfter(newNode: SVGElement, referenceNode: HTMLElement): void {\r\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling)\r\n}\r\n","import { mouseEventListeners, wheelEventListener } from '../eventListeners'\r\nimport {\r\n  imageRenderedEventDispatcher,\r\n  cameraModifiedEventDispatcher,\r\n  mouseToolEventDispatcher,\r\n  //   touchToolEventDispatcher,\r\n} from '../eventDispatchers'\r\n// ~~\r\n\r\nimport { state } from './state'\r\n\r\nfunction removeEnabledElement(elementDisabledEvt) {\r\n  // Is DOM element\r\n  const canvas = elementDisabledEvt.detail.canvas\r\n  // Is construct - WON'T BE ABLE TO GET\r\n  //const enabledElement = getEnabledElement(canvas);\r\n\r\n  // Listeners\r\n  mouseEventListeners.disable(canvas)\r\n  wheelEventListener.disable(canvas)\r\n  // Dispatchers: renderer\r\n  imageRenderedEventDispatcher.disable(canvas)\r\n  cameraModifiedEventDispatcher.disable(canvas)\r\n  // Dispatchers: interaction\r\n  mouseToolEventDispatcher.disable(canvas)\r\n  // touchToolEventDispatcher.disable(canvas);\r\n\r\n  // State\r\n  // @TODO: Remove enabledElement from Synchronizer Managers & Tool Groups/Managers?\r\n  // @TODO: We used to \"disable\" the tool before removal. Should we preserve the hook that would call on tools?\r\n  //_removeAllToolsForElement(enabledElement);\r\n  _removeEnabledElement(canvas)\r\n}\r\n\r\nconst _removeAllToolsForElement = function (enabledElement) {\r\n  // store.state.tools.forEach(tool => {\r\n  //   if (tool.element === enabledElement) {\r\n  //     setToolDisabledForElement(tool.element, tool.name);\r\n  //   }\r\n  // });\r\n  // store.state.tools = store.state.tools.filter(\r\n  //   tool => tool.element !== enabledElement\r\n  // );\r\n}\r\n\r\n/**\r\n * @private\r\n * @param enabledElement\r\n */\r\nconst _removeEnabledElement = function (enabledElement: HTMLElement) {\r\n  const foundElementIndex = state.enabledElements.findIndex(\r\n    (element) => element === enabledElement\r\n  )\r\n\r\n  if (foundElementIndex > -1) {\r\n    state.enabledElements.splice(foundElementIndex, 1)\r\n  }\r\n}\r\n\r\nexport default removeEnabledElement\r\n","import { getRenderingEngine } from '@ohif/cornerstone-render'\r\nimport { state } from '../index'\r\nimport IToolGroup from './IToolGroup'\r\nimport ISetToolModeOptions from './ISetToolModeOptions'\r\nimport ToolModes from '../../enums/ToolModes'\r\n\r\nconst { Active, Passive, Enabled, Disabled } = ToolModes\r\n\r\nfunction createToolGroup(toolGroupId: string): IToolGroup | undefined {\r\n  // Exit early if ID conflict\r\n  const toolGroupWithIdExists = state.toolGroups.some(\r\n    (tg) => tg.id === toolGroupId\r\n  )\r\n\r\n  if (toolGroupWithIdExists) {\r\n    console.warn(`'${toolGroupId}' already exists.`)\r\n    return\r\n  }\r\n\r\n  // Create\r\n  const toolGroup: IToolGroup = {\r\n    _tools: {},\r\n    id: toolGroupId,\r\n    viewports: [],\r\n    tools: {},\r\n    //\r\n    getToolInstance: function (toolName) {\r\n      const toolInstance = this._tools[toolName]\r\n      if (!toolInstance) {\r\n        console.warn(`'${toolName}' is not registered with this toolGroup.`)\r\n        return\r\n      }\r\n      return toolInstance\r\n    },\r\n    addTool: function (toolName, toolConfiguration = {}) {\r\n      const toolDefinition = state.tools[toolName]\r\n      const hasToolName = typeof toolName !== 'undefined' && toolName !== ''\r\n      const localToolInstance = this.tools[toolName]\r\n\r\n      if (!hasToolName) {\r\n        console.warn(\r\n          'Tool with configuration did not produce a toolName: ',\r\n          toolConfiguration\r\n        )\r\n        return\r\n      }\r\n\r\n      if (!toolDefinition) {\r\n        console.warn(`'${toolName}' is not registered with the library.`)\r\n        return\r\n      }\r\n\r\n      if (localToolInstance) {\r\n        console.warn(`'${toolName}' is already registered for this ToolGroup.`)\r\n        return\r\n      }\r\n\r\n      // Should these be renamed higher up, so we don't have to alias?\r\n      // Wrap in try-catch so 3rd party tools don't explode?\r\n      const {\r\n        toolClass: ToolClass,\r\n        toolOptions: defaultToolOptions,\r\n      } = toolDefinition\r\n      const mergedToolConfiguration = Object.assign(\r\n        {},\r\n        defaultToolOptions,\r\n        toolConfiguration\r\n      )\r\n      const instantiatedTool = new ToolClass(mergedToolConfiguration)\r\n\r\n      // API instead of directly exposing schema?\r\n      // Maybe not here, but feels like a \"must\" for any method outside of the ToolGroup itself\r\n      this._tools[toolName] = instantiatedTool\r\n    },\r\n    addViewports: function (\r\n      renderingEngineUID: string,\r\n      sceneUID?: string,\r\n      viewportUID?: string\r\n    ): void {\r\n      this.viewports.push({ renderingEngineUID, sceneUID, viewportUID })\r\n    },\r\n    // ~ setToolMode\r\n    setToolActive: function (\r\n      toolName: string,\r\n      toolModeOptions: ISetToolModeOptions\r\n    ): void {\r\n      if (this._tools[toolName] === undefined) {\r\n        console.warn(\r\n          `Tool ${toolName} not added to toolgroup, can't set tool mode.`\r\n        )\r\n\r\n        return\r\n      }\r\n\r\n      // Would only need this for sanity check if not instantiating/hydrating\r\n      // const tool = this.tools[toolName];\r\n      const toolModeOptionsWithMode = Object.assign(\r\n        {\r\n          bindings: [],\r\n        },\r\n        toolModeOptions,\r\n        {\r\n          mode: Active,\r\n        }\r\n      )\r\n\r\n      this.tools[toolName] = toolModeOptionsWithMode\r\n      this._tools[toolName].mode = Active\r\n      this.refreshViewports()\r\n    },\r\n    setToolPassive: function (\r\n      toolName: string,\r\n      toolModeOptions: ISetToolModeOptions\r\n    ): void {\r\n      if (this._tools[toolName] === undefined) {\r\n        console.warn(\r\n          `Tool ${toolName} not added to toolgroup, can't set tool mode.`\r\n        )\r\n\r\n        return\r\n      }\r\n\r\n      // Would only need this for sanity check if not instantiating/hydrating\r\n      // const tool = this.tools[toolName];\r\n      const toolModeOptionsWithMode = Object.assign(\r\n        {\r\n          bindings: [],\r\n        },\r\n        toolModeOptions,\r\n        {\r\n          mode: Passive,\r\n        }\r\n      )\r\n\r\n      this.tools[toolName] = toolModeOptionsWithMode\r\n      this._tools[toolName].mode = Passive\r\n      this.refreshViewports()\r\n    },\r\n    setToolEnabled: function (\r\n      toolName: string,\r\n      toolModeOptions: ISetToolModeOptions\r\n    ): void {\r\n      if (this._tools[toolName] === undefined) {\r\n        console.warn(\r\n          `Tool ${toolName} not added to toolgroup, can't set tool mode.`\r\n        )\r\n\r\n        return\r\n      }\r\n\r\n      // Would only need this for sanity check if not instantiating/hydrating\r\n      // const tool = this.tools[toolName];\r\n      const toolModeOptionsWithMode = Object.assign(\r\n        {\r\n          bindings: [],\r\n        },\r\n        toolModeOptions,\r\n        {\r\n          mode: Enabled,\r\n        }\r\n      )\r\n\r\n      this.tools[toolName] = toolModeOptionsWithMode\r\n      this._tools[toolName].mode = Enabled\r\n      this.refreshViewports()\r\n    },\r\n    setToolDisabled: function (\r\n      toolName: string,\r\n      toolModeOptions: ISetToolModeOptions\r\n    ): void {\r\n      if (this._tools[toolName] === undefined) {\r\n        console.warn(\r\n          `Tool ${toolName} not added to toolgroup, can't set tool mode.`\r\n        )\r\n\r\n        return\r\n      }\r\n\r\n      // Would only need this for sanity check if not instantiating/hydrating\r\n      // const tool = this.tools[toolName];\r\n      const toolModeOptionsWithMode = Object.assign(\r\n        {\r\n          bindings: [],\r\n        },\r\n        toolModeOptions,\r\n        {\r\n          mode: Disabled,\r\n        }\r\n      )\r\n      this.tools[toolName] = toolModeOptionsWithMode\r\n      this._tools[toolName].mode = Disabled\r\n      this.refreshViewports()\r\n    },\r\n    // We need to refresh related viewports when a tool mode is changed in order\r\n    // to update the rendered measurements.\r\n    refreshViewports(): void {\r\n      this.viewports.forEach(({ renderingEngineUID, viewportUID }) => {\r\n        getRenderingEngine(renderingEngineUID).renderViewport(viewportUID)\r\n      })\r\n    },\r\n  }\r\n\r\n  // Update state\r\n  state.toolGroups.push(toolGroup)\r\n\r\n  // Return reference\r\n  return toolGroup\r\n}\r\n\r\nexport default createToolGroup\r\n","import createToolGroup from './createToolGroup'\r\nimport destroyToolGroupById from './destroyToolGroupById'\r\nimport destroy from './destroy'\r\nimport getToolGroupById from './getToolGroupById'\r\nimport getToolGroups from './getToolGroups'\r\n\r\nexport default {\r\n  createToolGroup,\r\n  destroy,\r\n  destroyToolGroupById,\r\n  getToolGroupById,\r\n  getToolGroups,\r\n}\r\n","// `BaseManager` or IManager interface for duplicate API between ToolGroup/Synchronizer?\r\nimport { state } from '../index'\r\n\r\n// ToolGroups function entirely by their \"state\" being queried and leveraged\r\n// removing a ToolGroup from state is equivelant to killing it\r\nfunction destroy(): void {\r\n  state.toolGroups = []\r\n}\r\n\r\nexport default destroy\r\n","import { state } from '../index'\r\n\r\n// ToolGroups function entirely by their \"state\" being queried and leveraged\r\n// removing a ToolGroup from state is equivelant to killing it\r\nfunction destroyToolGroupById(toolGroupId: string): void {\r\n  const toolGroupIndex = state.toolGroups.findIndex(\r\n    (tg) => tg.id === toolGroupId\r\n  )\r\n\r\n  if (toolGroupIndex > -1) {\r\n    state.toolGroups.splice(toolGroupIndex, 1)\r\n  }\r\n}\r\n\r\nexport default destroyToolGroupById\r\n","import { state } from '../index'\r\nimport IToolGroup from './IToolGroup'\r\n\r\nfunction getToolGroupById(toolGroupId: string): IToolGroup | void {\r\n  return state.toolGroups.find((s) => s.id === toolGroupId)\r\n}\r\n\r\nexport default getToolGroupById\r\n","import { state } from '../index'\r\nimport IToolGroup from './IToolGroup'\r\n\r\nfunction getToolGroups(\r\n  renderingEngineUID: string,\r\n  sceneUID: string,\r\n  viewportUID: string\r\n): Array<IToolGroup> {\r\n  const toolGroupsFilteredByUIDs = state.toolGroups.filter((tg) =>\r\n    tg.viewports.some(\r\n      (vp) =>\r\n        vp.renderingEngineUID === renderingEngineUID &&\r\n        (!vp.viewportUID || vp.viewportUID === viewportUID) &&\r\n        (!vp.sceneUID || vp.sceneUID === sceneUID)\r\n    )\r\n  )\r\n\r\n  return toolGroupsFilteredByUIDs\r\n}\r\n\r\nexport default getToolGroups\r\n","import IViewportUID from '../IViewportUID'\r\n// ~~ VIEWPORT LIBRARY\r\nimport {\r\n  getRenderingEngine,\r\n  getEnabledElement,\r\n  EVENTS as RENDERING_EVENTS,\r\n} from '@ohif/cornerstone-render'\r\n\r\nexport interface ISynchronizerEventHandler {\r\n  (\r\n    synchronizer: Synchronizer,\r\n    sourceViewport: IViewportUID,\r\n    targetViewport: IViewportUID,\r\n    sourceEvent: any\r\n  ): void\r\n}\r\n\r\nclass Synchronizer {\r\n  //\r\n  private _enabled: boolean\r\n  private _eventName: string\r\n  private _eventHandler: ISynchronizerEventHandler\r\n  private _ignoreFiredEvents: boolean\r\n  private _sourceViewports: Array<IViewportUID>\r\n  private _targetViewports: Array<IViewportUID>\r\n  //\r\n  public id: string\r\n\r\n  constructor(\r\n    synchronizerId: string,\r\n    eventName: string,\r\n    eventHandler: ISynchronizerEventHandler\r\n  ) {\r\n    this._enabled = true\r\n    this._eventName = eventName\r\n    this._eventHandler = eventHandler\r\n    this._ignoreFiredEvents = false\r\n    this._sourceViewports = []\r\n    this._targetViewports = []\r\n\r\n    //\r\n    this.id = synchronizerId\r\n  }\r\n\r\n  public isDisabled(): boolean {\r\n    return !this._enabled || !this._hasSourceElements()\r\n  }\r\n\r\n  /**\r\n   * ADD\r\n   * TODO: LISTENERS TO CATCH RenderingEngine/Scene specific adds for addSource/addTarget (and remove)\r\n   * ========================\r\n   */\r\n  public add(viewport: IViewportUID): void {\r\n    this.addTarget(viewport)\r\n    this.addSource(viewport)\r\n  }\r\n\r\n  public addSource(viewport: IViewportUID) {\r\n    const { renderingEngineUID, sceneUID, viewportUID } = viewport\r\n\r\n    // TODO: exit early if already in list\r\n    const canvas = getRenderingEngine(renderingEngineUID)\r\n      .getScene(sceneUID)\r\n      .getViewport(viewportUID)\r\n      .getCanvas()\r\n\r\n    // const enabledElement = getEnabledElement(canvas)\r\n\r\n    // @ts-ignore\r\n    canvas.addEventListener(this._eventName, this._onEvent.bind(this))\r\n    this._updateDisableHandlers()\r\n\r\n    this._sourceViewports.push(viewport)\r\n  }\r\n\r\n  public addTarget(viewport: IViewportUID) {\r\n    // const { renderingEngineUID, sceneUID, viewportUID } = viewport\r\n\r\n    // TODO: exit early if already in list\r\n    this._targetViewports.push(viewport)\r\n    this._updateDisableHandlers()\r\n  }\r\n\r\n  /**\r\n   * REMOVE\r\n   * ========================\r\n   */\r\n\r\n  public destroy(): void {\r\n    this._sourceViewports.forEach((s) => this.removeSource(s))\r\n    this._targetViewports.forEach((t) => this.removeTarget(t))\r\n  }\r\n\r\n  public remove(viewport: IViewportUID) {\r\n    this.removeTarget(viewport)\r\n    this.removeSource(viewport)\r\n  }\r\n\r\n  public removeSource(viewport: IViewportUID) {\r\n    const index = _getViewportIndex(this._sourceViewports, viewport)\r\n\r\n    if (index === -1) {\r\n      return\r\n    }\r\n\r\n    const canvas = _getViewportCanvas(viewport)\r\n\r\n    this._sourceViewports.splice(index, 1)\r\n    // @ts-ignore\r\n    canvas.removeEventListener(this._eventName, this._eventHandler)\r\n    this._updateDisableHandlers()\r\n  }\r\n\r\n  public removeTarget(viewport: IViewportUID) {\r\n    const index = _getViewportIndex(this._sourceViewports, viewport)\r\n\r\n    if (index === -1) {\r\n      return\r\n    }\r\n\r\n    this._targetViewports.splice(index, 1)\r\n    this._updateDisableHandlers()\r\n  }\r\n\r\n  public hasSourceViewport(renderingEngineUID, sceneUID, viewportUID) {\r\n    // Exact match; could make loose\r\n    const containsExactMatch = this._sourceViewports.some(\r\n      (vp) =>\r\n        vp.renderingEngineUID === renderingEngineUID &&\r\n        vp.sceneUID === sceneUID &&\r\n        vp.viewportUID === viewportUID\r\n    )\r\n\r\n    return containsExactMatch\r\n  }\r\n\r\n  public fireEvent(sourceViewport: IViewportUID, sourceEvent: any): void {\r\n    if (this.isDisabled() || this._ignoreFiredEvents) {\r\n      return\r\n    }\r\n\r\n    this._ignoreFiredEvents = true\r\n    try {\r\n      for (let i = 0; i < this._targetViewports.length; i++) {\r\n        const targetViewport = this._targetViewports[i]\r\n        const targetIsSource =\r\n          sourceViewport.viewportUID === targetViewport.viewportUID\r\n\r\n        if (targetIsSource) {\r\n          continue\r\n        }\r\n\r\n        this._eventHandler(this, sourceViewport, targetViewport, sourceEvent)\r\n      }\r\n    } catch (ex) {\r\n      console.warn(`Synchronizer, for: ${this._eventName}`, ex)\r\n    } finally {\r\n      this._ignoreFiredEvents = false\r\n    }\r\n  }\r\n\r\n  private _onEvent(evt: any) {\r\n    if (this._ignoreFiredEvents === true) {\r\n      return\r\n    }\r\n\r\n    const { renderingEngineUID, sceneUID, viewportUID } = getEnabledElement(\r\n      evt.currentTarget\r\n    )\r\n\r\n    this.fireEvent(\r\n      {\r\n        renderingEngineUID,\r\n        sceneUID,\r\n        viewportUID,\r\n      },\r\n      evt\r\n    )\r\n  }\r\n\r\n  private _hasSourceElements(): boolean {\r\n    return this._sourceViewports.length !== 0\r\n  }\r\n\r\n  private _updateDisableHandlers(): void {\r\n    const viewports = _getUniqueViewports(\r\n      this._sourceViewports,\r\n      this._targetViewports\r\n    )\r\n    const _remove = this.remove\r\n    const disableHandler = (elementDisabledEvent) => {\r\n      _remove(elementDisabledEvent.detail.element)\r\n    }\r\n\r\n    viewports.forEach(function (vUid) {\r\n      const canvas = getRenderingEngine(vUid.renderingEngineUID)\r\n        .getScene(vUid.sceneUID)\r\n        .getViewport(vUid.viewportUID)\r\n        .getCanvas()\r\n\r\n      canvas.removeEventListener(\r\n        RENDERING_EVENTS.ELEMENT_DISABLED,\r\n        disableHandler\r\n      )\r\n      canvas.addEventListener(RENDERING_EVENTS.ELEMENT_DISABLED, disableHandler)\r\n    })\r\n  }\r\n}\r\n\r\nfunction _getUniqueViewports(vp1, vp2) {\r\n  const unique = []\r\n\r\n  const vps = vp1.concat(vp2)\r\n\r\n  for (let i = 0; i < vps.length; i++) {\r\n    const vp = vps[i]\r\n    if (\r\n      !unique.some(\r\n        (u) =>\r\n          vp.renderingEngineUID === u.renderingEngineUID &&\r\n          vp.sceneUID === u.sceneUID &&\r\n          vp.viewportUID === u.viewportUID\r\n      )\r\n    ) {\r\n      unique.push(vp)\r\n    }\r\n  }\r\n\r\n  return unique\r\n}\r\n\r\nfunction _getViewportIndex(arr, vp) {\r\n  return arr.findIndex(\r\n    (ar) =>\r\n      vp.renderingEngineUID === ar.renderingEngineUID &&\r\n      vp.sceneUID === ar.sceneUID &&\r\n      vp.viewportUID === ar.viewportUID\r\n  )\r\n}\r\n\r\nfunction _getViewportCanvas(vp: IViewportUID) {\r\n  return getRenderingEngine(vp.renderingEngineUID)\r\n    .getScene(vp.sceneUID)\r\n    .getViewport(vp.viewportUID)\r\n    .getCanvas()\r\n}\r\n\r\nexport default Synchronizer\r\n","import createSynchronizer from './createSynchronizer'\r\nimport destroy from './destroy'\r\nimport getSynchronizers from './getSynchronizers'\r\nimport getSynchronizerById from './getSynchronizerById'\r\nimport getAllSynchronizers from './getAllSynchronizers'\r\n\r\nexport default {\r\n  createSynchronizer,\r\n  destroy,\r\n  getSynchronizerById,\r\n  getSynchronizers,\r\n  getAllSynchronizers,\r\n}\r\n","import { state } from '../index'\r\nimport Synchronizer, { ISynchronizerEventHandler } from './Synchronizer'\r\n\r\nfunction createSynchronizer(\r\n  synchronizerId: string,\r\n  eventName: string,\r\n  eventHandler: ISynchronizerEventHandler\r\n): Synchronizer | undefined {\r\n  const toolGroupWithIdExists = state.synchronizers.some(\r\n    (tg) => tg.id === synchronizerId\r\n  )\r\n\r\n  if (toolGroupWithIdExists) {\r\n    console.warn(`'${synchronizerId}' already exists.`)\r\n    return\r\n  }\r\n\r\n  // Create\r\n  const synchronizer = new Synchronizer(synchronizerId, eventName, eventHandler)\r\n\r\n  // Update state\r\n  state.synchronizers.push(synchronizer)\r\n\r\n  // Return reference\r\n  return synchronizer\r\n}\r\n\r\nexport default createSynchronizer\r\n","import { state } from '../index'\r\n\r\nfunction destroy(): void {\r\n  while (state.synchronizers.length > 0) {\r\n    const synchronizer = state.synchronizers.pop()\r\n\r\n    synchronizer.destroy()\r\n  }\r\n}\r\n\r\nexport default destroy\r\n","import { state } from '../index'\r\nimport Synchronizer from './Synchronizer'\r\n\r\nfunction getSynchronizerById(synchronizerId: string): Synchronizer | void {\r\n  return state.synchronizers.find((s) => s.id === synchronizerId)\r\n}\r\n\r\nexport default getSynchronizerById\r\n","import { state } from '../index'\r\nimport Synchronizer from './Synchronizer'\r\n\r\nfunction getSynchronizers(\r\n  renderingEngineUID: string,\r\n  sceneUID: string,\r\n  viewportUID: string\r\n): Array<Synchronizer> {\r\n  const synchronizersFilteredByUIDs = []\r\n\r\n  if (!renderingEngineUID && !sceneUID && !viewportUID) {\r\n    throw new Error(\r\n      'At least one of renderingEngineUID or sceneUID or viewportUID should be given'\r\n    )\r\n  }\r\n\r\n  for (let i = 0; i < state.synchronizers.length; i++) {\r\n    const synchronizer = state.synchronizers[i]\r\n    const notDisabled = !synchronizer.isDisabled()\r\n    const hasSourceViewport = synchronizer.hasSourceViewport(\r\n      renderingEngineUID,\r\n      sceneUID,\r\n      viewportUID\r\n    )\r\n\r\n    if (notDisabled && hasSourceViewport) {\r\n      synchronizersFilteredByUIDs.push(synchronizer)\r\n    }\r\n  }\r\n\r\n  return synchronizersFilteredByUIDs\r\n}\r\n\r\nexport default getSynchronizers\r\n","import { state } from '../index'\r\nimport Synchronizer from './Synchronizer'\r\n\r\nfunction getAllSynchronizers(): Array<Synchronizer> {\r\n  return state.synchronizers\r\n}\r\n\r\nexport default getAllSynchronizers\r\n","import { getEnabledElement, Types } from '@ohif/cornerstone-render'\r\nimport { BaseAnnotationTool } from '../tools'\r\nimport { Point2, ToolSpecificToolData } from '../types'\r\nimport { getToolState } from '../stateManagement/toolState'\r\nimport ToolGroupManager from './ToolGroupManager'\r\n\r\nfunction getToolDataNearPoint(\r\n  element: HTMLElement,\r\n  point: Point2,\r\n  proximity = 5\r\n): ToolSpecificToolData | null {\r\n  const enabledElement = getEnabledElement(element)\r\n  if (enabledElement) {\r\n    return getToolDataNearPointOnEnabledElement(\r\n      enabledElement,\r\n      point,\r\n      proximity\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getToolDataNearPointOnEnabledElement(\r\n  enabledElement: Types.IEnabledElement,\r\n  point: Point2,\r\n  proximity: number\r\n): ToolSpecificToolData | null {\r\n  const { renderingEngineUID, sceneUID, viewportUID } = enabledElement\r\n  const toolGroups = ToolGroupManager.getToolGroups(\r\n    renderingEngineUID,\r\n    sceneUID,\r\n    viewportUID\r\n  )\r\n  for (let i = 0; i < toolGroups.length; ++i) {\r\n    const { _tools: tools } = toolGroups[i]\r\n    for (const name in tools) {\r\n      if (Object.prototype.hasOwnProperty.call(tools, name)) {\r\n        const found = findToolDataNearPointByTool(\r\n          tools[name],\r\n          enabledElement,\r\n          point,\r\n          proximity\r\n        )\r\n        if (found) {\r\n          return found\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nfunction findToolDataNearPointByTool(\r\n  tool: BaseAnnotationTool,\r\n  enabledElement: Types.IEnabledElement,\r\n  point: Point2,\r\n  proximity: number\r\n): ToolSpecificToolData | null {\r\n  const toolState = getToolState(enabledElement, tool.name)\r\n  if (Array.isArray(toolState) && toolState.length > 0) {\r\n    const { canvas } = enabledElement.viewport\r\n    for (let i = 0; i < toolState.length; ++i) {\r\n      const toolData = toolState[i] as ToolSpecificToolData\r\n      if (\r\n        tool.pointNearTool(canvas, toolData, point, proximity, '') ||\r\n        tool.getHandleNearImagePoint(canvas, toolData, point, proximity)\r\n      ) {\r\n        return toolData\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport {\r\n  getToolDataNearPoint as default,\r\n  getToolDataNearPoint,\r\n  getToolDataNearPointOnEnabledElement,\r\n  findToolDataNearPointByTool,\r\n}\r\n","import { ToolGroupManager } from '../../store'\r\nimport { ToolModes } from '../../enums'\r\n\r\nconst { Active, Passive, Enabled } = ToolModes\r\n\r\n/**\r\n * @function filterViewportsWithToolEnabled Given an array of viewports,\r\n * returns a list of viewports that have the the specified tool enabled.\r\n *\r\n * @param {object[]} viewports An array of viewports.\r\n * @param {string} toolName The name of the tool to filter on.\r\n *\r\n * @returns {object[]} A filtered array of viewports.\r\n */\r\nexport default function filterViewportsWithToolEnabled(viewports, toolName) {\r\n  const numViewports = viewports.length\r\n\r\n  const viewportsWithToolEnabled = []\r\n\r\n  for (let vp = 0; vp < numViewports; vp++) {\r\n    const viewport = viewports[vp]\r\n\r\n    const toolGroups = ToolGroupManager.getToolGroups(\r\n      viewport.renderingEngineUID,\r\n      viewport.sceneUID,\r\n      viewport.uid\r\n    )\r\n\r\n    const hasTool = toolGroups.some((tg) =>\r\n      _toolGroupHasActiveEnabledOrPassiveTool(tg, toolName)\r\n    )\r\n\r\n    if (hasTool) {\r\n      viewportsWithToolEnabled.push(viewport)\r\n    }\r\n  }\r\n\r\n  return viewportsWithToolEnabled\r\n}\r\n\r\n/**\r\n * @private @function _toolGroupHasActiveEnabledOrPassiveTool Given a toolgroup,\r\n * return true if it contains the tool with the given `toolName` and it is\r\n * active, passive or enabled.\r\n *\r\n * @param {object} toolGroup The `toolGroup` to check.\r\n * @param {string} toolName The name of the tool.\r\n *\r\n * @returns {boolean} True if the tool is enabled, passive or active in the `toolGroup`.\r\n */\r\nfunction _toolGroupHasActiveEnabledOrPassiveTool(toolGroup, toolName) {\r\n  const { tools } = toolGroup\r\n  const tool = tools[toolName]\r\n\r\n  if (!tool) {\r\n    return false\r\n  }\r\n\r\n  const toolMode = tool.mode\r\n\r\n  return toolMode === Active || toolMode === Passive || toolMode === Enabled\r\n}\r\n","import { getEnabledElement } from '@ohif/cornerstone-render'\r\nimport filterViewportsWithFrameOfReferenceUID from './filterViewportsWithFrameOfReferenceUID'\r\nimport filterViewportsWithToolEnabled from './filterViewportsWithToolEnabled'\r\n\r\n/**\r\n * @function getViewportUIDsWithToolToRender given a cornerstone3D enabled `element`,\r\n * and a `toolName`, find all viewportUIDs looking at the same Frame Of Reference that have\r\n * the tool with the given `toolName` active, passive or enabled.\r\n *\r\n * @param {HTMLElement} element The target cornerstone3D enabled element.\r\n * @param {string} toolName The string toolName.\r\n *\r\n * @returns {string[]} An array of viewportUIDs.\r\n */\r\nexport default function getViewportUIDsWithToolToRender(\r\n  element: HTMLElement,\r\n  toolName: string\r\n): string[] {\r\n  const enabledElement = getEnabledElement(element)\r\n  const { renderingEngine, FrameOfReferenceUID } = enabledElement\r\n\r\n  let viewports = renderingEngine.getViewports()\r\n\r\n  viewports = filterViewportsWithFrameOfReferenceUID(\r\n    viewports,\r\n    FrameOfReferenceUID\r\n  )\r\n  viewports = filterViewportsWithToolEnabled(viewports, toolName)\r\n\r\n  const viewportUIDs = viewports.map((vp) => vp.uid)\r\n\r\n  return viewportUIDs\r\n}\r\n","/**\r\n * @function filterViewportsWithFrameOfReferenceUID Given an array of viewports,\r\n * returns a list of viewports that are viewing a worldspace with the given\r\n * `FrameOfReferenceUID`.\r\n *\r\n * @param {object[]} viewports An array of viewports.\r\n * @param {string} FrameOfReferenceUID The UID defining a particular worldspace/Frame Of Reference.\r\n *\r\n * @returns {object[]} A filtered array of viewports.\r\n */\r\nexport default function filterViewportsWithFrameOfReferenceUID(\r\n  viewports,\r\n  FrameOfReferenceUID\r\n) {\r\n  const numViewports = viewports.length\r\n  const viewportsWithFrameOfReferenceUID = []\r\n\r\n  for (let vp = 0; vp < numViewports; vp++) {\r\n    const viewport = viewports[vp]\r\n    // const scene = viewport.getScene()\r\n\r\n    if (viewport.getFrameOfReferenceUID() === FrameOfReferenceUID) {\r\n      viewportsWithFrameOfReferenceUID.push(viewport)\r\n    }\r\n  }\r\n\r\n  return viewportsWithFrameOfReferenceUID\r\n}\r\n","import { Point3 } from '../../types'\r\n\r\n/**\r\n * @function indexWithinDimensions Returns true if the specified index is within\r\n * the given dimensions.\r\n *\r\n * @param {Point3} index\r\n * @param {Point3} dimensions\r\n *\r\n * @returns {boolean} True if the index is in-bounds.\r\n */\r\nexport default function indexWithinDimensions(\r\n  index: Point3,\r\n  dimensions: Point3\r\n): boolean {\r\n  if (\r\n    index[0] < 0 ||\r\n    index[0] >= dimensions[0] ||\r\n    index[1] < 0 ||\r\n    index[1] >= dimensions[1] ||\r\n    index[2] < 0 ||\r\n    index[2] >= dimensions[2]\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n","import { Point2 } from '../../types'\r\n\r\n/**\r\n * Determine the coordinates that will place the textbox to the right of the\r\n * annotation.\r\n *\r\n * @param annotationCanvasPoints - The canvas points of the annotation's handles.\r\n * @returns {Point2} - The coordinates for default placement of the textbox.\r\n */\r\nexport default function getTextBoxCoordsCanvas(\r\n  annotationCanvasPoints: Array<Point2>\r\n): Point2 {\r\n  const corners = _determineCorners(annotationCanvasPoints)\r\n  const centerY = (corners.top[1] + corners.bottom[1]) / 2\r\n  const textBoxCanvas = <Point2>[corners.right[0], centerY]\r\n\r\n  return textBoxCanvas\r\n}\r\n\r\n/**\r\n * Determine the handles that have the min/max x and y values.\r\n *\r\n * @param {Point2} canvasPoints - The canvas points of the annotation's handles.\r\n * @returns {Object} - The top, left, bottom, and right handles.\r\n */\r\nfunction _determineCorners(canvasPoints: Array<Point2>) {\r\n  const handlesLeftToRight = [canvasPoints[0], canvasPoints[1]].sort(_compareX)\r\n  const handlesTopToBottom = [canvasPoints[0], canvasPoints[1]].sort(_compareY)\r\n  const right = handlesLeftToRight[handlesLeftToRight.length - 1]\r\n  const top = handlesTopToBottom[0]\r\n  const bottom = handlesTopToBottom[handlesTopToBottom.length - 1]\r\n\r\n  return {\r\n    top,\r\n    bottom,\r\n    right,\r\n  }\r\n\r\n  function _compareX(a, b) {\r\n    return a[0] < b[0] ? -1 : 1\r\n  }\r\n  function _compareY(a, b) {\r\n    return a[1] < b[1] ? -1 : 1\r\n  }\r\n}\r\n","import { Point3 } from '../../types'\r\nimport { vec3 } from 'gl-matrix'\r\n\r\n/**\r\n * @function snapFocalPointToSlice Given a number of frames, `deltaFrames`,\r\n * move the `focalPoint` and camera `postion` so that it moves forward/backwards\r\n * `deltaFrames` in the camera's normal direction, and snaps to the nearest frame.\r\n *\r\n * @export\r\n * @param {Point3} focalPoint The focal point to move.\r\n * @param {Point3} position The camera position to move.\r\n * @param {object} scrollRange The scroll range used to find the current\r\n * position in the stack, as well as prevent scrolling past the extent of the volume.\r\n * @param {Point3} viewPlaneNormal The normal direction of the camera.\r\n * @param {number} spacingInNormalDirection The spacing of frames the normal direction of the camera.\r\n * @param {number} deltaFrames The number of frames to jump.\r\n *\r\n * @returns {object} The `newFocalPoint` and `newPosition` of the camera.\r\n */\r\nexport default function snapFocalPointToSlice(\r\n  focalPoint: Point3,\r\n  position: Point3,\r\n  scrollRange,\r\n  viewPlaneNormal: Point3,\r\n  spacingInNormalDirection: number,\r\n  deltaFrames: number\r\n): { newFocalPoint: Point3; newPosition: Point3 } {\r\n  const { min, max, current } = scrollRange\r\n\r\n  // Get the current offset off the camera position so we can add it on at the end.\r\n  const posDiffFromFocalPoint = vec3.create()\r\n\r\n  vec3.sub(posDiffFromFocalPoint, <vec3>position, <vec3>focalPoint)\r\n\r\n  // Now we can see how many steps there are in this direction\r\n  const steps = Math.round((max - min) / spacingInNormalDirection)\r\n\r\n  // Find out current frameIndex\r\n  const fraction = (current - min) / (max - min)\r\n  const floatingStepNumber = fraction * steps\r\n  let frameIndex = Math.round(floatingStepNumber)\r\n\r\n  // Dolly the focal point back to min slice focal point.\r\n  let newFocalPoint = <Point3>[\r\n    focalPoint[0] -\r\n      viewPlaneNormal[0] * floatingStepNumber * spacingInNormalDirection,\r\n    focalPoint[1] -\r\n      viewPlaneNormal[1] * floatingStepNumber * spacingInNormalDirection,\r\n    focalPoint[2] -\r\n      viewPlaneNormal[2] * floatingStepNumber * spacingInNormalDirection,\r\n  ]\r\n\r\n  // Increment the slice number by deltaFrames.\r\n  frameIndex += deltaFrames\r\n\r\n  // Clamp sliceNumber to volume.\r\n  if (frameIndex > steps) {\r\n    frameIndex = steps\r\n  } else if (frameIndex < 0) {\r\n    frameIndex = 0\r\n  }\r\n\r\n  // Dolly the focal towards to the correct frame focal point.\r\n  const newSlicePosFromMin = frameIndex * spacingInNormalDirection\r\n\r\n  newFocalPoint = <Point3>[\r\n    newFocalPoint[0] + viewPlaneNormal[0] * newSlicePosFromMin,\r\n    newFocalPoint[1] + viewPlaneNormal[1] * newSlicePosFromMin,\r\n    newFocalPoint[2] + viewPlaneNormal[2] * newSlicePosFromMin,\r\n  ]\r\n\r\n  const newPosition = <Point3>[\r\n    newFocalPoint[0] + posDiffFromFocalPoint[0],\r\n    newFocalPoint[1] + posDiffFromFocalPoint[1],\r\n    newFocalPoint[2] + posDiffFromFocalPoint[2],\r\n  ]\r\n\r\n  return { newFocalPoint, newPosition }\r\n}\r\n","import getVolumeActorCorners from '../vtkjs/getVolumeActorCorners'\r\nimport vtkMatrixBuilder from 'vtk.js/Sources/Common/Core/MatrixBuilder'\r\nimport { Point3 } from '@ohif/cornerstone-render'\r\n\r\n/**\r\n * @function getSliceRange Given a `vtkVolumeActor`, and a normal direction,\r\n * calculate the range of slices in the focal normal direction that encapsulate\r\n * the volume. Also project the `focalPoint` onto this range.\r\n *\r\n * @param {object} volumeActor The `vtkVolumeActor`.\r\n * @param {Point3} viewPlaneNormal The normal to the camera view.\r\n * @param {Point3} focalPoint The focal point of the camera.\r\n *\r\n * @returns {object} and object containing the `min`, `max` and `current`\r\n * positions in the normal direction.\r\n */\r\nexport default function getSliceRange(\r\n  volumeActor,\r\n  viewPlaneNormal: Point3,\r\n  focalPoint: Point3\r\n): { min: number; max: number; current: number } {\r\n  const corners = getVolumeActorCorners(volumeActor)\r\n\r\n  // Get rotation matrix from normal to +X (since bounds is aligned to XYZ)\r\n  const transform = vtkMatrixBuilder\r\n    .buildFromDegree()\r\n    .identity()\r\n    .rotateFromDirections(viewPlaneNormal, [1, 0, 0])\r\n\r\n  corners.forEach((pt) => transform.apply(pt))\r\n\r\n  const transformedFocalPoint = [...focalPoint]\r\n\r\n  transform.apply(transformedFocalPoint)\r\n\r\n  const currentSlice = transformedFocalPoint[0]\r\n\r\n  // range is now maximum X distance\r\n  let minX = Infinity\r\n  let maxX = -Infinity\r\n  for (let i = 0; i < 8; i++) {\r\n    const x = corners[i][0]\r\n    if (x > maxX) {\r\n      maxX = x\r\n    }\r\n    if (x < minX) {\r\n      minX = x\r\n    }\r\n  }\r\n\r\n  return { min: minX, max: maxX, current: currentSlice }\r\n}\r\n","import { Point3 } from '../../types'\r\n\r\n/**\r\n * @function getVolumeActorCorners Converts `vtkVolumeActor` bounds to corners\r\n * in world space.\r\n *\r\n * @param {object} volumeActor The `vtkVolumeActor`.\r\n *\r\n * @returns {Array<Point3>} An array of the corners of the `volumeActor` in world space.\r\n */\r\nexport default function getVolumeActorCorners(volumeActor): Array<Point3> {\r\n  const bounds = volumeActor.getMapper().getBounds()\r\n\r\n  return [\r\n    [bounds[0], bounds[2], bounds[4]],\r\n    [bounds[0], bounds[2], bounds[5]],\r\n    [bounds[0], bounds[3], bounds[4]],\r\n    [bounds[0], bounds[3], bounds[5]],\r\n    [bounds[1], bounds[2], bounds[4]],\r\n    [bounds[1], bounds[2], bounds[5]],\r\n    [bounds[1], bounds[3], bounds[4]],\r\n    [bounds[1], bounds[3], bounds[5]],\r\n  ]\r\n}\r\n","/**\r\n * Clips a value to an upper and lower bound.\r\n * @export @public @method\r\n * @name clip\r\n *\r\n * @param  {number} val  The value to clip.\r\n * @param  {number} low  The lower bound.\r\n * @param  {number} high The upper bound.\r\n * @returns {number}      The clipped value.\r\n */\r\nexport function clip(val, low, high) {\r\n  return Math.min(Math.max(low, val), high)\r\n}\r\n\r\n/**\r\n * Clips a value within a box.\r\n * @export @public @method\r\n * @name clipToBox\r\n *\r\n * @param  {Object} point The point to clip\r\n * @param  {Object} box   The bounding box to clip to.\r\n * @returns {Object}       The clipped point.\r\n */\r\nexport function clipToBox(point, box) {\r\n  // Clip an {x, y} point to a box of size {width, height}\r\n  point.x = clip(point.x, 0, box.width)\r\n  point.y = clip(point.y, 0, box.height)\r\n}\r\n\r\nexport default clip\r\n","import {\r\n  getEnabledElement,\r\n  StackViewport,\r\n  VIEWPORT_TYPE,\r\n  VolumeViewport,\r\n} from '@ohif/cornerstone-render'\r\nimport clip from '../clip'\r\nimport getTargetVolume from '../planar/getTargetVolume'\r\nimport getSliceRange from './getSliceRange'\r\nimport snapFocalPointToSlice from './snapFocalPointToSlice'\r\n\r\n/**\r\n * @function scrollThroughStack Scroll the stack defined by the event (`evt`)\r\n * and volume with `volumeUID` `deltaFrames number of frames`.\r\n * Frames are defined as increasing in the view direction.\r\n *\r\n * @param {CustomEvent} evt The event corresponding to an interaction with a\r\n * specific viewport.\r\n * @param {number} deltaFrames The number of frames to jump through.\r\n * @param {string} volumeUID The `volumeUID` of the volume to scroll through\r\n * @param {boolean} invert inversion of the scrolling\r\n * on the viewport.\r\n */\r\nexport default function scrollThroughStack(\r\n  evt,\r\n  deltaFrames: number,\r\n  volumeUID: string,\r\n  invert = false\r\n) {\r\n  const { element: canvas, wheel } = evt.detail\r\n  const { scene, viewport } = getEnabledElement(canvas)\r\n  const { type: viewportType } = viewport\r\n  const camera = viewport.getCamera()\r\n  const { focalPoint, viewPlaneNormal, position } = camera\r\n\r\n  if (viewport instanceof StackViewport) {\r\n    // stack viewport\r\n    const currentImageIdIndex = viewport.getCurrentImageIdIndex()\r\n    const numberOfFrames = viewport.getImageIds().length\r\n    const { direction } = wheel\r\n    const stackDirection = invert ? -direction : direction\r\n    let newImageIdIndex = currentImageIdIndex + stackDirection\r\n    newImageIdIndex = clip(newImageIdIndex, 0, numberOfFrames - 1)\r\n\r\n    viewport.setImageIdIndex(newImageIdIndex)\r\n  } else if (viewport instanceof VolumeViewport) {\r\n    // Stack scroll across highest resolution volume.\r\n    const { spacingInNormalDirection, imageVolume } = getTargetVolume(\r\n      scene,\r\n      camera,\r\n      volumeUID\r\n    )\r\n\r\n    if (!imageVolume) {\r\n      return\r\n    }\r\n\r\n    const volumeActor = scene.getVolumeActor(imageVolume.uid)\r\n    const scrollRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint)\r\n\r\n    // Todo: add inverted logic for volume camera\r\n    const { newFocalPoint, newPosition } = snapFocalPointToSlice(\r\n      focalPoint,\r\n      position,\r\n      scrollRange,\r\n      viewPlaneNormal,\r\n      spacingInNormalDirection,\r\n      deltaFrames\r\n    )\r\n\r\n    viewport.setCamera({\r\n      focalPoint: newFocalPoint,\r\n      position: newPosition,\r\n    })\r\n    viewport.render()\r\n  } else {\r\n    throw new Error(`Not implemented for Viewport Type: ${viewportType}`)\r\n  }\r\n}\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * isObject({})\r\n * // => true\r\n *\r\n * isObject([1, 2, 3])\r\n * // => true\r\n *\r\n * isObject(Function)\r\n * // => true\r\n *\r\n * isObject(null)\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  const type = typeof value\r\n\r\n  return value !== null && (type === 'object' || type === 'function')\r\n}\r\n\r\nexport default isObject\r\n","const isMergeableObject = (val) => {\r\n  const nonNullObject = val && typeof val === 'object'\r\n\r\n  return (\r\n    nonNullObject &&\r\n    Object.prototype.toString.call(val) !== '[object RegExp]' &&\r\n    Object.prototype.toString.call(val) !== '[object Date]'\r\n  )\r\n}\r\n\r\nconst emptyTarget = (val) => {\r\n  const isEmpty = Array.isArray(val) ? [] : {}\r\n\r\n  return isEmpty\r\n}\r\n\r\nconst cloneIfNecessary = (value, optionsArgument) => {\r\n  const clone = optionsArgument && optionsArgument.clone === true\r\n\r\n  return clone && isMergeableObject(value)\r\n    ? deepmerge(emptyTarget(value), value, optionsArgument)\r\n    : value\r\n}\r\n\r\nconst defaultArrayMerge = (target, source, optionsArgument) => {\r\n  const destination = target.slice()\r\n\r\n  source.forEach(function (e, i) {\r\n    if (typeof destination[i] === 'undefined') {\r\n      destination[i] = cloneIfNecessary(e, optionsArgument)\r\n    } else if (isMergeableObject(e)) {\r\n      destination[i] = deepmerge(target[i], e, optionsArgument)\r\n    } else if (target.indexOf(e) === -1) {\r\n      destination.push(cloneIfNecessary(e, optionsArgument))\r\n    }\r\n  })\r\n\r\n  return destination\r\n}\r\n\r\nconst mergeObject = (target, source, optionsArgument) => {\r\n  const destination = {}\r\n\r\n  if (isMergeableObject(target)) {\r\n    Object.keys(target).forEach(function (key) {\r\n      destination[key] = cloneIfNecessary(target[key], optionsArgument)\r\n    })\r\n  }\r\n  Object.keys(source).forEach(function (key) {\r\n    if (!isMergeableObject(source[key]) || !target[key]) {\r\n      destination[key] = cloneIfNecessary(source[key], optionsArgument)\r\n    } else {\r\n      destination[key] = deepmerge(target[key], source[key], optionsArgument)\r\n    }\r\n  })\r\n\r\n  return destination\r\n}\r\n\r\nconst deepmerge = (target = {}, source = {}, optionsArgument) => {\r\n  const array = Array.isArray(source)\r\n  const options = optionsArgument || { arrayMerge: defaultArrayMerge }\r\n  const arrayMerge = options.arrayMerge || defaultArrayMerge\r\n\r\n  if (array) {\r\n    return Array.isArray(target)\r\n      ? arrayMerge(target, source, optionsArgument)\r\n      : cloneIfNecessary(source, optionsArgument)\r\n  }\r\n\r\n  return mergeObject(target, source, optionsArgument)\r\n}\r\n\r\nexport default deepmerge\r\n","import debounce from './debounce'\r\nimport isObject from './isObject'\r\n\r\n/**\r\n * Creates a throttled function that only invokes `func` at most once per\r\n * every `wait` milliseconds (or once per browser frame). The throttled function\r\n * comes with a `cancel` method to cancel delayed `func` invocations and a\r\n * `flush` method to immediately invoke them. Provide `options` to indicate\r\n * whether `func` should be invoked on the leading and/or trailing edge of the\r\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\r\n * throttled function. Subsequent calls to the throttled function return the\r\n * result of the last `func` invocation.\r\n *\r\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\r\n * invoked on the trailing edge of the timeout only if the throttled function\r\n * is invoked more than once during the `wait` timeout.\r\n *\r\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\r\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\r\n *\r\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\r\n * invocation will be deferred until the next frame is drawn (typically about\r\n * 16ms).\r\n *\r\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\r\n * for details over the differences between `throttle` and `debounce`.\r\n *\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to throttle.\r\n * @param {number} [wait=0]\r\n *  The number of milliseconds to throttle invocations to; if omitted,\r\n *  `requestAnimationFrame` is used (if available).\r\n * @param {Object} [options={}] The options object.\r\n * @param {boolean} [options.leading=true]\r\n *  Specify invoking on the leading edge of the timeout.\r\n * @param {boolean} [options.trailing=true]\r\n *  Specify invoking on the trailing edge of the timeout.\r\n * @returns {Function} Returns the new throttled function.\r\n * @example\r\n *\r\n * // Avoid excessively updating the position while scrolling.\r\n * jQuery(window).on('scroll', throttle(updatePosition, 100))\r\n *\r\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\r\n * const throttled = throttle(renewToken, 300000, { 'trailing': false })\r\n * jQuery(element).on('click', throttled)\r\n *\r\n * // Cancel the trailing throttled invocation.\r\n * jQuery(window).on('popstate', throttled.cancel)\r\n */\r\nfunction throttle(func, wait, options) {\r\n  let leading = true\r\n  let trailing = true\r\n\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError('Expected a function')\r\n  }\r\n  if (isObject(options)) {\r\n    leading = 'leading' in options ? Boolean(options.leading) : leading\r\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing\r\n  }\r\n\r\n  return debounce(func, wait, {\r\n    leading,\r\n    trailing,\r\n    maxWait: wait,\r\n  })\r\n}\r\n\r\nexport default throttle\r\n","import isObject from './isObject'\r\n\r\n/**\r\n * Creates a debounced function that delays invoking `func` until after `wait`\r\n * milliseconds have elapsed since the last time the debounced function was\r\n * invoked, or until the next browser frame is drawn. The debounced function\r\n * comes with a `cancel` method to cancel delayed `func` invocations and a\r\n * `flush` method to immediately invoke them. Provide `options` to indicate\r\n * whether `func` should be invoked on the leading and/or trailing edge of the\r\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\r\n * debounced function. Subsequent calls to the debounced function return the\r\n * result of the last `func` invocation.\r\n *\r\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\r\n * invoked on the trailing edge of the timeout only if the debounced function\r\n * is invoked more than once during the `wait` timeout.\r\n *\r\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\r\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\r\n *\r\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\r\n * invocation will be deferred until the next frame is drawn (typically about\r\n * 16ms).\r\n *\r\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\r\n * for details over the differences between `debounce` and `throttle`.\r\n *\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to debounce.\r\n * @param {number} [wait=0]\r\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\r\n *  used (if available).\r\n * @param {Object} [options={}] The options object.\r\n * @param {boolean} [options.leading=false]\r\n *  Specify invoking on the leading edge of the timeout.\r\n * @param {number} [options.maxWait]\r\n *  The maximum time `func` is allowed to be delayed before it's invoked.\r\n * @param {boolean} [options.trailing=true]\r\n *  Specify invoking on the trailing edge of the timeout.\r\n * @returns {Function} Returns the new debounced function.\r\n * @example\r\n *\r\n * // Avoid costly calculations while the window size is in flux.\r\n * jQuery(window).on('resize', debounce(calculateLayout, 150))\r\n *\r\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\r\n * jQuery(element).on('click', debounce(sendMail, 300, {\r\n *   'leading': true,\r\n *   'trailing': false\r\n * }))\r\n *\r\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\r\n * const debounced = debounce(batchLog, 250, { 'maxWait': 1000 })\r\n * const source = new EventSource('/stream')\r\n * jQuery(source).on('message', debounced)\r\n *\r\n * // Cancel the trailing debounced invocation.\r\n * jQuery(window).on('popstate', debounced.cancel)\r\n *\r\n * // Check for pending invocations.\r\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\r\n */\r\nfunction debounce(func, wait, options) {\r\n  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime\r\n\r\n  let lastInvokeTime = 0\r\n  let leading = false\r\n  let maxing = false\r\n  let trailing = true\r\n\r\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\r\n  const useRAF =\r\n    !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function'\r\n\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError('Expected a function')\r\n  }\r\n  wait = Number(wait) || 0\r\n  if (isObject(options)) {\r\n    leading = Boolean(options.leading)\r\n    maxing = 'maxWait' in options\r\n    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait\r\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing\r\n  }\r\n\r\n  function invokeFunc(time) {\r\n    const args = lastArgs\r\n    const thisArg = lastThis\r\n\r\n    lastArgs = lastThis = undefined\r\n    lastInvokeTime = time\r\n    result = func.apply(thisArg, args)\r\n\r\n    return result\r\n  }\r\n\r\n  function startTimer(pendingFunc, wait) {\r\n    if (useRAF) {\r\n      return window.requestAnimationFrame(pendingFunc)\r\n    }\r\n\r\n    return setTimeout(pendingFunc, wait)\r\n  }\r\n\r\n  function cancelTimer(id) {\r\n    if (useRAF) {\r\n      return window.cancelAnimationFrame(id)\r\n    }\r\n    clearTimeout(id)\r\n  }\r\n\r\n  function leadingEdge(time) {\r\n    // Reset any `maxWait` timer.\r\n    lastInvokeTime = time\r\n    // Start the timer for the trailing edge.\r\n    timerId = startTimer(timerExpired, wait)\r\n\r\n    // Invoke the leading edge.\r\n    return leading ? invokeFunc(time) : result\r\n  }\r\n\r\n  function remainingWait(time) {\r\n    const timeSinceLastCall = time - lastCallTime\r\n    const timeSinceLastInvoke = time - lastInvokeTime\r\n    const timeWaiting = wait - timeSinceLastCall\r\n\r\n    return maxing\r\n      ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\r\n      : timeWaiting\r\n  }\r\n\r\n  function shouldInvoke(time) {\r\n    const timeSinceLastCall = time - lastCallTime\r\n    const timeSinceLastInvoke = time - lastInvokeTime\r\n\r\n    // Either this is the first call, activity has stopped and we're at the\r\n    // trailing edge, the system time has gone backwards and we're treating\r\n    // it as the trailing edge, or we've hit the `maxWait` limit.\r\n    return (\r\n      lastCallTime === undefined ||\r\n      timeSinceLastCall >= wait ||\r\n      timeSinceLastCall < 0 ||\r\n      (maxing && timeSinceLastInvoke >= maxWait)\r\n    )\r\n  }\r\n\r\n  function timerExpired() {\r\n    const time = Date.now()\r\n\r\n    if (shouldInvoke(time)) {\r\n      return trailingEdge(time)\r\n    }\r\n    // Restart the timer.\r\n    timerId = startTimer(timerExpired, remainingWait(time))\r\n  }\r\n\r\n  function trailingEdge(time) {\r\n    timerId = undefined\r\n\r\n    // Only invoke if we have `lastArgs` which means `func` has been\r\n    // debounced at least once.\r\n    if (trailing && lastArgs) {\r\n      return invokeFunc(time)\r\n    }\r\n    lastArgs = lastThis = undefined\r\n\r\n    return result\r\n  }\r\n\r\n  function cancel() {\r\n    if (timerId !== undefined) {\r\n      cancelTimer(timerId)\r\n    }\r\n    lastInvokeTime = 0\r\n    lastArgs = lastCallTime = lastThis = timerId = undefined\r\n  }\r\n\r\n  function flush() {\r\n    return timerId === undefined ? result : trailingEdge(Date.now())\r\n  }\r\n\r\n  function pending() {\r\n    return timerId !== undefined\r\n  }\r\n\r\n  function debounced(...args) {\r\n    const time = Date.now()\r\n    const isInvoking = shouldInvoke(time)\r\n\r\n    lastArgs = args\r\n    lastThis = this // eslint-disable-line consistent-this\r\n    lastCallTime = time\r\n\r\n    if (isInvoking) {\r\n      if (timerId === undefined) {\r\n        return leadingEdge(lastCallTime)\r\n      }\r\n      if (maxing) {\r\n        // Handle invocations in a tight loop.\r\n        timerId = startTimer(timerExpired, wait)\r\n\r\n        return invokeFunc(lastCallTime)\r\n      }\r\n    }\r\n    if (timerId === undefined) {\r\n      timerId = startTimer(timerExpired, wait)\r\n    }\r\n\r\n    return result\r\n  }\r\n  debounced.cancel = cancel\r\n  debounced.flush = flush\r\n  debounced.pending = pending\r\n\r\n  return debounced\r\n}\r\n\r\nexport default debounce\r\n","/**\r\n * Returns the first argument if defined, otherwise returns the second\r\n *\r\n * @param {*} value\r\n * @param {*} defaultValue\r\n * @returns {*}\r\n */\r\nexport default function (value, defaultValue) {\r\n  return value === undefined ? defaultValue : value\r\n}\r\n","import { Types } from '@ohif/cornerstone-render'\r\nimport { defaultFrameOfReferenceSpecificToolStateManager } from './FrameOfReferenceSpecificToolStateManager'\r\nimport { uuidv4 } from '../util'\r\nimport { ToolSpecificToolState } from '../types/toolStateTypes'\r\n\r\nfunction getViewportSpecificStateManager(element: Types.IEnabledElement) {\r\n  // TODO:\r\n  // We may want multiple FrameOfReferenceSpecificStateManagers.\r\n  // E.g. displaying two different radiologists annotations on the same underlying data/FoR.\r\n\r\n  // Just return the default for now.\r\n\r\n  return defaultFrameOfReferenceSpecificToolStateManager\r\n}\r\n\r\n// TODO: Why is this now using enabledElement instead of element?\r\n/**\r\n * getToolState - Returns the toolState for the `FrameOfReference` of the `Scene`\r\n * being viewed by the cornerstone3D enabled `element`.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} toolName\r\n * @returns {ToolSpecificToolState} The tool state corresponding to the Frame of Reference and the toolName.\r\n */\r\nfunction getToolState(\r\n  // element: HTMLElement,\r\n  enabledElement: Types.IEnabledElement,\r\n  toolName: string\r\n): ToolSpecificToolState {\r\n  const toolStateManager = getViewportSpecificStateManager(enabledElement)\r\n  const { FrameOfReferenceUID } = enabledElement\r\n\r\n  return toolStateManager.get(FrameOfReferenceUID, toolName)\r\n}\r\n\r\n/**\r\n * @function addToolState\r\n *\r\n * @param {*} element\r\n * @param {*} toolData\r\n */\r\nfunction addToolState(element, toolData) {\r\n  const toolStateManager = getViewportSpecificStateManager(element)\r\n\r\n  if (toolData.metadata.toolUID === undefined) {\r\n    toolData.metadata.toolUID = uuidv4()\r\n  }\r\n\r\n  toolStateManager.addToolState(toolData)\r\n}\r\n\r\nexport { getToolState, addToolState }\r\n","import { Settings } from '@ohif/cornerstone-render'\r\nimport state from '../store/state'\r\n\r\nexport default function getStyle(\r\n  toolName?: string,\r\n  toolData?: Record<string, unknown>\r\n): Settings {\r\n  if (toolName) {\r\n    const descriptor = state.tools[toolName]\r\n    if (descriptor) {\r\n      const { toolClass } = descriptor\r\n      if (toolData) {\r\n        return Settings.getObjectSettings(toolData, toolClass)\r\n      }\r\n      return Settings.getObjectSettings(toolClass)\r\n    }\r\n  }\r\n  return Settings.getRuntimeSettings()\r\n}\r\n","import { Settings } from '@ohif/cornerstone-render'\r\n\r\nexport default function setGlobalStyle(\r\n  style: Record<string, unknown>\r\n): boolean {\r\n  return Settings.getRuntimeSettings().set('tool.style', style)\r\n}\r\n","import { Settings } from '@ohif/cornerstone-render'\r\nimport state from '../store/state'\r\n\r\nexport default function setToolStyle(\r\n  toolName: string,\r\n  style: Record<string, unknown>\r\n): boolean {\r\n  const descriptor = state.tools[toolName]\r\n  if (descriptor) {\r\n    const { toolClass } = descriptor\r\n    return Settings.getObjectSettings(toolClass).set('tool.style', style)\r\n  }\r\n  return false\r\n}\r\n","import { Settings } from '@ohif/cornerstone-render'\r\nimport state from '../store/state'\r\n\r\nexport default function setToolDataStyle(\r\n  toolName: string,\r\n  toolData: Record<string, unknown>,\r\n  style: Record<string, unknown>\r\n): boolean {\r\n  const descriptor = state.tools[toolName]\r\n  if (descriptor) {\r\n    const { toolClass } = descriptor\r\n    return Settings.getObjectSettings(toolData, toolClass).set(\r\n      'tool.style',\r\n      style\r\n    )\r\n  }\r\n  return false\r\n}\r\n","import {\r\n  eventTarget,\r\n  EVENTS as RENDERING_EVENTS,\r\n} from '@ohif/cornerstone-render'\r\nimport { addEnabledElement, removeEnabledElement } from './store'\r\n\r\nexport default function (defaultConfiguration = {}) {\r\n  _addCornerstoneEventListeners()\r\n}\r\n\r\n/**\r\n * Wires up event listeners for the Cornerstone#ElementDisabled and\r\n * Cornerstone#ElementEnabled events.\r\n *\r\n * @private\r\n * @method\r\n * @returns {void}\r\n */\r\nfunction _addCornerstoneEventListeners() {\r\n  // Clear any listeners that may already be set\r\n  _removeCornerstoneEventListeners()\r\n\r\n  const elementEnabledEvent = RENDERING_EVENTS.ELEMENT_ENABLED\r\n  const elementDisabledEvent = RENDERING_EVENTS.ELEMENT_DISABLED\r\n\r\n  eventTarget.addEventListener(elementEnabledEvent, addEnabledElement)\r\n  eventTarget.addEventListener(elementDisabledEvent, removeEnabledElement)\r\n}\r\n\r\n/**\r\n * Removes event listeners for the Cornerstone#ElementDisabled and\r\n * Cornerstone#ElementEnabled events.\r\n *\r\n * @private\r\n * @method\r\n * @returns {void}\r\n */\r\nfunction _removeCornerstoneEventListeners() {\r\n  const elementEnabledEvent = RENDERING_EVENTS.ELEMENT_ENABLED\r\n  const elementDisabledEvent = RENDERING_EVENTS.ELEMENT_DISABLED\r\n\r\n  eventTarget.removeEventListener(elementEnabledEvent, addEnabledElement)\r\n  eventTarget.removeEventListener(elementDisabledEvent, removeEnabledElement)\r\n}\r\n","/**\r\n * This function manages the {@link https://www.w3.org/TR/2dcontext/#the-canvas-state|save/restore}\r\n * pattern for working in a new context state stack. The parameter `fn` is passed the `context` and can\r\n * execute any API calls in a clean stack.\r\n * @public\r\n * @method draw\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target Canvas\r\n * @param {ContextFn} fn - A function which performs drawing operations within the given context.\r\n * @returns {undefined}\r\n */\r\nexport default function (context, fn) {\r\n  context.save()\r\n  fn(context)\r\n  context.restore()\r\n}\r\n","import { getDefaultStyleProperty } from '../stateManagement/toolStyle'\r\n\r\n/**\r\n * This function manages the beginPath/stroke pattern for working with\r\n * {@link https://www.w3.org/TR/2dcontext/#drawing-paths-to-the-canvas|path objects}.\r\n *\r\n * @public\r\n * @function path\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Context to add path to\r\n * @param {Object} [options={}] - Drawing Options\r\n * @param {StrokeStyle} [options.color] - The stroke style of the path.\r\n * @param {number} [options.lineWidth] - The width of lines in the path. If null, no line width is set.\r\n *     If undefined then lineWidth from toolStyle is set.\r\n * @param {FillStyle} [options.fillStyle] - The style to fill the path with. If undefined then no filling is done.\r\n * @param {Number[]} [options.lineDash] - The {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash|dash pattern}\r\n *     to use on the lines.\r\n * @param {boolean} [options.shouldDrawLines = true] Whether context.stroke should be evoked.\r\n * @param {ContextFn} fn - A drawing function to execute with the provided stroke pattern.\r\n * @returns {undefined}\r\n */\r\nexport default function (context, options = {}, fn) {\r\n  const {\r\n    color,\r\n    lineWidth,\r\n    fillStyle,\r\n    lineDash,\r\n    shouldDrawLines = true,\r\n  } = options\r\n\r\n  context.beginPath()\r\n  context.strokeStyle = color || context.strokeStyle\r\n\r\n  context.lineWidth =\r\n    lineWidth ||\r\n    (lineWidth === undefined &&\r\n      parseInt(getDefaultStyleProperty('lineWidth'), 10)) ||\r\n    context.lineWidth\r\n  if (lineDash) {\r\n    context.setLineDash(lineDash)\r\n  }\r\n\r\n  fn(context)\r\n\r\n  if (fillStyle) {\r\n    context.fillStyle = fillStyle\r\n    context.fill()\r\n  }\r\n\r\n  if (shouldDrawLines) {\r\n    context.stroke()\r\n  }\r\n\r\n  if (lineDash) {\r\n    context.setLineDash([])\r\n  }\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Draw a line between `start` and `end`.\r\n *\r\n * @public\r\n * @method drawLine\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context\r\n * @param {Object} start - Start in canvas coordinates.\r\n * @param {Object} end - End in canvas coordinates.\r\n * @param {Object} options - See {@link path}\r\n * @returns {undefined}\r\n */\r\nexport default function drawLine(context, start, end, options) {\r\n  path(context, options, (context) => {\r\n    context.moveTo(start[0], start[1])\r\n    context.lineTo(end[0], end[1])\r\n  })\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Draw a series of joined lines, starting at `start` and then going to each point in `points`.\r\n * @public\r\n * @method drawJoinedLines\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {Object} start - Start in canvas coordinates.\r\n * @param {Object[]} points - Array of points in canvas coordinates.\r\n * @param {Object} options - See {@link path}\r\n * @returns {undefined}\r\n */\r\nexport default function (context, start, points, options) {\r\n  path(context, options, (context) => {\r\n    context.moveTo(start[0], start[1])\r\n    points.forEach((point) => {\r\n      context.lineTo(point[0], point[1])\r\n    })\r\n  })\r\n}\r\n","// Util libraries\r\nimport math from './math'\r\nimport planar from './planar'\r\nimport viewportFilters from './viewportFilters'\r\nimport vtkjs from './vtkjs'\r\nimport drawing from './drawing'\r\nimport stackScrollTool from './stackScrollTool'\r\n\r\n// Lodash/common JS functionality\r\nimport debounce from './debounce'\r\nimport deepMerge from './deepMerge'\r\nimport throttle from './throttle'\r\nimport getDefault from './getDefault'\r\nimport isObject from './isObject'\r\nimport getToolDataStyle from './getToolDataStyle'\r\n\r\n// UUID Generation\r\nimport uuidv4 from './uuidv4'\r\n\r\n// Events\r\nimport { triggerEvent } from '@ohif/cornerstone-render'\r\n\r\nexport {\r\n  math,\r\n  planar,\r\n  viewportFilters,\r\n  vtkjs,\r\n  stackScrollTool,\r\n  drawing,\r\n  debounce,\r\n  deepMerge,\r\n  throttle,\r\n  getDefault,\r\n  isObject,\r\n  uuidv4,\r\n  triggerEvent,\r\n  getToolDataStyle,\r\n}\r\n\r\nexport default {\r\n  math,\r\n  planar,\r\n  viewportFilters,\r\n  vtkjs,\r\n  stackScrollTool,\r\n  drawing,\r\n  debounce,\r\n  deepMerge,\r\n  throttle,\r\n  getDefault,\r\n  isObject,\r\n  uuidv4,\r\n  triggerEvent,\r\n  getToolDataStyle,\r\n}\r\n","import drawLine from './drawLine'\r\nimport { vec2 as vec2Utils } from '../util/math'\r\n\r\nconst { findClosestPoint } = vec2Utils\r\n\r\n/**\r\n * Draw a link between an annotation to a box.\r\n * @public\r\n * @method drawLink\r\n * @memberof Drawing\r\n *\r\n * @param  {Object[]} linkAnchorPoints An array of possible anchor points.\r\n * @param  {Object} refPoint         A reference point to select the anchor point.\r\n * @param  {Object} boundingBox    The bounding box to link.\r\n * @param  {Object} context          The canvas context.\r\n * @param  {string} color            The link color.\r\n * @param  {number} lineWidth        The line width of the link.\r\n * @returns {undefined}\r\n */\r\nexport default function (\r\n  linkAnchorPoints,\r\n  refPoint,\r\n  boundingBox,\r\n  context,\r\n  color,\r\n  lineWidth\r\n) {\r\n  // Draw a link from \"the closest anchor point to refPoint\" to \"the nearest midpoint on the bounding box\".\r\n\r\n  // Find the closest anchor point to RefPoint\r\n  const start =\r\n    linkAnchorPoints.length > 0\r\n      ? findClosestPoint(linkAnchorPoints, refPoint)\r\n      : refPoint\r\n\r\n  // Calculate the midpoints of the bounding box\r\n  const boundingBoxPoints = [\r\n    [boundingBox.left + boundingBox.width / 2, boundingBox.top],\r\n    [boundingBox.left, boundingBox.top + boundingBox.height / 2],\r\n    [\r\n      boundingBox.left + boundingBox.width / 2,\r\n      boundingBox.top + boundingBox.height,\r\n    ],\r\n    [\r\n      boundingBox.left + boundingBox.width,\r\n      boundingBox.top + boundingBox.height / 2,\r\n    ],\r\n  ]\r\n\r\n  // Calculate the link endpoint by identifying which midpoint of the bounding box\r\n  // Is closest to the start point.\r\n  const end = findClosestPoint(boundingBoxPoints, start)\r\n\r\n  // Finally we draw the dashed linking line\r\n  const options = {\r\n    color,\r\n    lineWidth,\r\n    lineDash: [2, 3],\r\n  }\r\n\r\n  drawLine(context, start, end, options, 'canvas')\r\n}\r\n","import { getFont, getDefaultStyleProperty } from '../stateManagement/toolStyle'\r\n\r\n/**\r\n * Draw multiple lines of text within a bounding box.\r\n * @public\r\n * @method fillTextLines\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {Object} boundingBox - `{ left, top }` in canvas coordinates. Only the top-left corner is specified, as the text will take up as much space as it needs.\r\n * @param {String[]} textLines - The text to be displayed.\r\n * @param {FillStyle} fillStyle - The fillStyle to apply to the text.\r\n * @param {Number} padding - The amount of padding above/below each line in canvas units. Note this gives an inter-line spacing of `2*padding`.\r\n * @returns {undefined}\r\n */\r\nexport default function (context, boundingBox, textLines, fillStyle, padding) {\r\n  const fontSize =\r\n    parseInt(getDefaultStyleProperty('textBox.fontSize'), 10) || 14\r\n\r\n  context.font = getFont()\r\n  context.textBaseline = 'top'\r\n  context.fillStyle = fillStyle\r\n  textLines.forEach(function (text, index) {\r\n    context.fillText(\r\n      text,\r\n      boundingBox.left + padding,\r\n      boundingBox.top + padding + index * (fontSize + padding)\r\n    )\r\n  })\r\n}\r\n","/**\r\n * Draw a filled rectangle defined by `boundingBox` using the style defined by `fillStyle`.\r\n * @public\r\n * @method fillBox\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {Object} boundingBox - `{ left, top, width, height }` in canvas coordinates.\r\n * @param {FillStyle} fillStyle - The fillStyle to apply to the region.\r\n * @returns {undefined}\r\n */\r\nexport default function (context, boundingBox, fillStyle) {\r\n  context.fillStyle = fillStyle\r\n  context.fillRect(\r\n    boundingBox.left,\r\n    boundingBox.top,\r\n    boundingBox.width,\r\n    boundingBox.height\r\n  )\r\n}\r\n","import { getFont, getDefaultStyleProperty } from '../stateManagement/toolStyle'\r\nimport draw from './draw'\r\nimport fillTextLines from './fillTextLines'\r\nimport fillBox from './fillBox'\r\n\r\n/**\r\n * Compute the width of the box required to display the given `text` with a given `padding`.\r\n * @public\r\n * @function textBoxWidth\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {String} text - The text to find the width of.\r\n * @param {Number} padding - The padding to apply on either end of the text.\r\n * @returns {Number} computed text box width\r\n */\r\nexport function textBoxWidth(context, text, padding) {\r\n  const font = getFont()\r\n  const origFont = context.font\r\n\r\n  if (font && font !== origFont) {\r\n    context.font = font\r\n  }\r\n  const width = context.measureText(text).width\r\n\r\n  if (font && font !== origFont) {\r\n    context.font = origFont\r\n  }\r\n\r\n  return width + 2 * padding\r\n}\r\n\r\n/**\r\n * Draws a textBox.\r\n * @public\r\n * @function drawTextBox\r\n * @memberof Drawing\r\n *\r\n * @param  {CanvasRenderingContext2D} context The canvas context.\r\n * @param  {string[]} textLines   The text to display.\r\n * @param  {number} x           The x position of the textBox.\r\n * @param  {number} y           The y position of the textBox.\r\n * @param  {string} color       The color of the textBox.\r\n * @param  {Object} options     Options for the textBox.\r\n * @returns {Object} {top, left, width, height} - Bounding box; can be used for pointNearTool\r\n */\r\nexport default function (context, textLines, x, y, color, options = undefined) {\r\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\r\n    textLines = [textLines]\r\n  }\r\n\r\n  const padding = 5\r\n  const fontSize =\r\n    parseInt(getDefaultStyleProperty('textBox.fontSize'), 10) || 14\r\n  const backgroundColor = getDefaultStyleProperty('textBox.background')\r\n\r\n  // Find the longest text width in the array of text data\r\n  let maxWidth = 0\r\n\r\n  textLines.forEach(function (text) {\r\n    // Get the text width in the current font\r\n    const width = textBoxWidth(context, text, padding)\r\n\r\n    // Find the maximum with for all the text rows;\r\n    maxWidth = Math.max(maxWidth, width)\r\n  })\r\n\r\n  // Calculate the bounding box for this text box\r\n  const boundingBox = {\r\n    width: maxWidth,\r\n    height: padding + textLines.length * (fontSize + padding),\r\n  }\r\n\r\n  draw(context, (context) => {\r\n    context.strokeStyle = color\r\n\r\n    // Draw the background box with padding\r\n    if (options && options.centering && options.centering.x === true) {\r\n      x -= boundingBox.width / 2\r\n    }\r\n\r\n    if (options && options.centering && options.centering.y === true) {\r\n      y -= boundingBox.height / 2\r\n    }\r\n\r\n    boundingBox.left = x\r\n    boundingBox.top = y\r\n\r\n    const fillStyle =\r\n      options && options.debug === true ? '#FF0000' : backgroundColor\r\n\r\n    fillBox(context, boundingBox, fillStyle)\r\n\r\n    // Draw each of the text lines on top of the background box\r\n    fillTextLines(context, boundingBox, textLines, color, padding)\r\n  })\r\n\r\n  // Return the bounding box so it can be used for pointNearHandle\r\n  return boundingBox\r\n}\r\n","/**\r\n * A {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle|color, gradient or pattern} to use inside shapes.\r\n * @typedef {(String|CanvasGradient|CanvasPattern)} FillStyle\r\n */\r\n\r\n/**\r\n * A {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle|color, gradient or pattern} to use for the lines around shapes.\r\n * @typedef {(String|CanvasGradient|CanvasPattern)} StrokeStyle\r\n */\r\n\r\n/**\r\n * @callback ContextFn\r\n * @param {CanvasRenderingContext2D} context\r\n */\r\n\r\nimport draw from './draw'\r\nimport drawArrow from './drawArrow'\r\nimport drawCircle from './drawCircle'\r\nimport drawEllipse from './drawEllipse'\r\nimport drawHandles from './drawHandles'\r\nimport drawJoinedLines from './drawJoinedLines'\r\nimport drawLine from './drawLine'\r\nimport drawLines from './drawLines'\r\nimport drawLink from './drawLink'\r\nimport drawLinkedTextBox from './drawLinkedTextBox'\r\nimport drawRect from './drawRect'\r\nimport drawTextBox from './drawTextBox'\r\nimport fillBox from './fillBox'\r\nimport fillOutsideRect from './fillOutsideRect'\r\nimport fillTextLines from './fillTextLines'\r\nimport getNewContext from './getNewContext'\r\nimport path from './path'\r\nimport setShadow from './setShadow'\r\n\r\n// Named exports\r\nexport {\r\n  draw,\r\n  drawArrow,\r\n  drawCircle,\r\n  drawEllipse,\r\n  drawHandles,\r\n  drawJoinedLines,\r\n  drawLine,\r\n  drawLines,\r\n  drawLink,\r\n  drawLinkedTextBox,\r\n  drawRect,\r\n  drawTextBox,\r\n  fillBox,\r\n  fillOutsideRect,\r\n  fillTextLines,\r\n  getNewContext,\r\n  path,\r\n  setShadow,\r\n}\r\n\r\nexport default {\r\n  draw,\r\n  drawArrow,\r\n  drawCircle,\r\n  drawEllipse,\r\n  drawHandles,\r\n  drawJoinedLines,\r\n  drawLine,\r\n  drawLines,\r\n  drawLink,\r\n  drawLinkedTextBox,\r\n  drawRect,\r\n  drawTextBox,\r\n  fillBox,\r\n  fillOutsideRect,\r\n  fillTextLines,\r\n  getNewContext,\r\n  path,\r\n  setShadow,\r\n}\r\n","import drawLine from './drawLine'\r\nimport drawJoinedLines from './drawJoinedLines'\r\n\r\n/**\r\n * Draw an arrow using the drawing API.\r\n * @public\r\n * @method drawArrow\r\n * @memberof Drawing\r\n *\r\n * @param  {Object} context   The canvas context.\r\n * @param  {Object} start     The start position.\r\n * @param  {Object} end       The end position.\r\n * @param  {string} color     The color of the arrow.\r\n * @param  {number} lineWidth The width of the arrow line.\r\n * @returns {undefined}\r\n */\r\nexport default function (context, start, end, color, lineWidth) {\r\n  // Variables to be used when creating the arrow\r\n  const headLength = 10\r\n\r\n  const angle = Math.atan2(end[1] - start[1], end[0] - start[0])\r\n\r\n  // Starting path of the arrow from the start square to the end square and drawing the stroke\r\n  let options = {\r\n    color,\r\n    lineWidth,\r\n  }\r\n\r\n  drawLine(context, undefined, start, end, options, 'canvas')\r\n  options = {\r\n    color,\r\n    lineWidth,\r\n    fillStyle: color,\r\n  }\r\n\r\n  const points = [\r\n    [\r\n      end[0] - headLength * Math.cos(angle - Math.PI / 7),\r\n      end[1] - headLength * Math.sin(angle - Math.PI / 7),\r\n    ],\r\n    [\r\n      end[0] - headLength * Math.cos(angle + Math.PI / 7),\r\n      end[1] - headLength * Math.sin(angle + Math.PI / 7),\r\n    ],\r\n    end,\r\n  ]\r\n\r\n  drawJoinedLines(context, undefined, end, points, options, 'canvas')\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Draw a circle with given `center` and `radius`.\r\n * @public\r\n * @method drawCircle\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {Object} center - `{ x, y }` in either pixel or canvas coordinates.\r\n * @param {number} radius - The circle's radius in canvas units.\r\n * @param {Object} options - See {@link path}\r\n * @returns {undefined}\r\n */\r\nexport default function (context, center, radius, options) {\r\n  path(context, options, (context) => {\r\n    context.arc(center[0], center[1], radius, 0, 2 * Math.PI)\r\n  })\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Draw an ellipse within the bounding box defined by `corner1` and `corner2`.\r\n * @public\r\n * @method drawEllipse\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {HTMLElement} element - The DOM Element to draw on\r\n * @param {Object} corner1 - In canvas coordinates.\r\n * @param {Object} corner2 - In canvas coordinates.\r\n * @param {Object} options - See {@link path}\r\n * @returns {undefined}\r\n */\r\nexport default function (context, corner1, corner2, options) {\r\n  const w = Math.abs(corner1[0] - corner2[0])\r\n  const h = Math.abs(corner1[1] - corner2[1])\r\n  const xMin = Math.min(corner1[0], corner2[0])\r\n  const yMin = Math.min(corner1[1], corner2[1])\r\n\r\n  const center = [xMin + w / 2, yMin + h / 2]\r\n\r\n  path(context, options, (context) => {\r\n    context.ellipse(center[0], center[1], w / 2, h / 2, 0, 0, 2 * Math.PI)\r\n    context.closePath()\r\n  })\r\n}\r\n","import { getDefaultStyleProperty } from '../stateManagement/toolStyle'\r\nimport path from './path'\r\nimport { state } from '../store'\r\n\r\n/**\r\n * Draws proivded handles to the provided context\r\n * @public\r\n * @method drawHandles\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {*} evtDetail - Cornerstone's 'cornerstoneimagerendered' event's `detail`\r\n * @param {Object[]|Object} handles - An array of handle arrays, in canvas coordinates.\r\n * @param {Object} [options={}] - Options object\r\n * @param {string} [options.color]\r\n * @param {Boolean} [options.drawHandlesIfActive=false] - Whether the handles should only be drawn if Active (hovered/selected)\r\n * @param {string} [options.fill]\r\n * @param {Number} [options.handleRadius=6]\r\n * @returns {undefined}\r\n */\r\nexport default function (context, handles, options = {}) {\r\n  const defaultColor = getDefaultStyleProperty('color')\r\n\r\n  context.strokeStyle = options.color || defaultColor\r\n\r\n  const handleKeys = Object.keys(handles)\r\n\r\n  for (let i = 0; i < handleKeys.length; i++) {\r\n    const handleKey = handleKeys[i]\r\n    const handle = handles[handleKey]\r\n\r\n    if (handle.drawnIndependently === true) {\r\n      continue\r\n    }\r\n\r\n    if (options.drawHandlesIfActive === true && !handle.active) {\r\n      continue\r\n    }\r\n\r\n    const lineWidth = parseInt(\r\n      getDefaultStyleProperty('lineWidth', handle.active ? 'Highlighted' : ''),\r\n      10\r\n    )\r\n    const fillStyle = options.fill\r\n\r\n    path(\r\n      context,\r\n      {\r\n        lineWidth,\r\n        fillStyle,\r\n      },\r\n      (context) => {\r\n        // Handle's radisu, then tool's radius, then default radius\r\n        const handleRadius =\r\n          handle.radius || options.handleRadius || state.handleRadius\r\n\r\n        context.arc(handle[0], handle[1], handleRadius, 0, 2 * Math.PI)\r\n      }\r\n    )\r\n  }\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Draw multiple lines.\r\n * @public\r\n * @method drawJoinedLines\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {Object[]} lines - `[{ start: [x, y], end: [ x, y ]}]` An array of `start`, `end` pairs.\r\n * @param {Object} options - See {@link path}\r\n * @returns {undefined}\r\n */\r\nexport default function (context, lines, options) {\r\n  path(context, options, (context) => {\r\n    lines.forEach((line) => {\r\n      const { start, end } = line\r\n\r\n      context.moveTo(start[0], start[1])\r\n      context.lineTo(end[0], end[1])\r\n    })\r\n  })\r\n}\r\n","import drawTextBox from './drawTextBox'\r\nimport drawLink from './drawLink'\r\n\r\nexport default function (\r\n  context,\r\n  textCoords,\r\n  text,\r\n  textBox,\r\n  textBoxAnchorPoints,\r\n  canvasToWorld,\r\n  color,\r\n  lineWidth,\r\n  xOffset,\r\n  yCenter\r\n) {\r\n  if (xOffset) {\r\n    textCoords[0] += xOffset\r\n  }\r\n\r\n  const options = {\r\n    centering: {\r\n      x: false,\r\n      y: yCenter,\r\n    },\r\n  }\r\n\r\n  // Draw the text box\r\n  const canvasBoundingBox = drawTextBox(\r\n    context,\r\n    text,\r\n    textCoords[0],\r\n    textCoords[1],\r\n    color,\r\n    options\r\n  )\r\n  if (textBox.hasMoved) {\r\n    // Draw dashed link line between tool and text\r\n    drawLink(\r\n      textBoxAnchorPoints,\r\n      textCoords,\r\n      canvasBoundingBox,\r\n      context,\r\n      color,\r\n      lineWidth\r\n    )\r\n  }\r\n\r\n  const { top, left, width, height } = canvasBoundingBox\r\n\r\n  textBox.worldBoundingBox = {\r\n    topLeft: canvasToWorld([left, top]),\r\n    topRight: canvasToWorld([left + width, top]),\r\n    bottomLeft: canvasToWorld([left, top + height]),\r\n    bottomRight: canvasToWorld([left + width, top + height]),\r\n  }\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Draw a rectangle defined by `corner1` and `corner2`.\r\n * @public\r\n * @method drawRect\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {HTMLElement} element - The DOM Element to draw on\r\n * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.\r\n * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.\r\n * @param {Object} options - See {@link path}\r\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\r\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\r\n *     is used to transform the points from pixel to canvas coordinates.\r\n * @param {Number} initialRotation - Rectangle initial rotation\r\n * @returns {undefined}\r\n */\r\nexport default function (context, inputCorner1, inputCorner2, options) {\r\n  const w = Math.abs(inputCorner1[0] - inputCorner2[0])\r\n  const h = Math.abs(inputCorner1[1] - inputCorner2[1])\r\n\r\n  const corner1 = [\r\n    Math.min(inputCorner1[0], inputCorner2[0]),\r\n    Math.min(inputCorner1[1], inputCorner2[1]),\r\n  ]\r\n  const corner2 = [corner1[0] + w, corner1[1] + h]\r\n  const corner3 = [corner1[0] + w, corner1[1]]\r\n  const corner4 = [corner1[0], corner1[1] + h]\r\n\r\n  path(context, options, (context) => {\r\n    context.moveTo(corner1[0], corner1[1])\r\n    context.lineTo(corner3[0], corner3[1])\r\n    context.moveTo(corner3[0], corner3[1])\r\n    context.lineTo(corner2[0], corner2[1])\r\n    context.moveTo(corner2[0], corner2[1])\r\n    context.lineTo(corner4[0], corner4[1])\r\n    context.moveTo(corner4[0], corner4[1])\r\n    context.lineTo(corner1[0], corner1[1])\r\n  })\r\n}\r\n","import path from './path'\r\n\r\n/**\r\n * Fill the region outside a rectangle defined by `corner1` and `corner2`.\r\n * @public\r\n * @method fillOutsideRect\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Target context\r\n * @param {Object} corner1 - First corner in canvas coordinates.\r\n * @param {Object} corner2 - Second corner in canvas coordinates.\r\n * @param {Object} options - See {@link path}\r\n * @returns {undefined}\r\n */\r\nexport default function (context, corner1, corner2, options) {\r\n  const left = Math.min(corner1[0], corner2[0])\r\n  const top = Math.min(corner1[1], corner2[1])\r\n  const width = Math.abs(corner1[0] - corner2[0])\r\n  const height = Math.abs(corner1[1] - corner2[1])\r\n\r\n  path(context, options, (context) => {\r\n    context.rect(0, 0, context.canvas.clientWidth, context.canvas.clientHeight)\r\n    context.rect(left + width, top, -width, height)\r\n  })\r\n}\r\n","/**\r\n * Create a new {@link CanvasRenderingContext2D|context} object for the given {@link HTMLCanvasElement|canvas}\r\n * and set the transform to the {@link https://www.w3.org/TR/2dcontext/#transformations|identity transform}.\r\n *\r\n * @public\r\n * @function getNewContext\r\n * @memberof Drawing\r\n *\r\n * @param {HTMLCanvasElement} canvas - Canvas you would like the context for\r\n * @returns {CanvasRenderingContext2D} - The provided canvas's 2d context\r\n */\r\nexport default function (canvas) {\r\n  const context = canvas.getContext('2d')\r\n\r\n  return context\r\n}\r\n","import getDefault from '../util/getDefault'\r\n\r\n/**\r\n * Set the {@link https://www.w3.org/TR/2dcontext/#shadows|shadow} properties of the context.\r\n * Each property is set on the context object if defined, otherwise a default value is set.\r\n *\r\n * @public\r\n * @method setShadow\r\n * @memberof Drawing\r\n *\r\n * @param {CanvasRenderingContext2D} context - Context to apply shadow options on\r\n * @param {Object}  [options={}] - Options object\r\n * @param {Boolean} [options.shadow=undefined] - Whether to set any shadow options\r\n * @param {String}  [options.shadowColor=#000000] - Default value: #000000\r\n * @param {Number}  [options.shadowBlur=0] - Default Value: 0\r\n * @param {Number}  [options.shadowOffsetX=1] - Default value: 1\r\n * @param {Number}  [options.shadowOffsetY=1] - Default value: 1\r\n * @returns {undefined}\r\n */\r\nexport default function (context, options = {}) {\r\n  if (options.shadow) {\r\n    context.shadowColor = getDefault(options.shadowColor, '#000000')\r\n    context.shadowBlur = getDefault(options.shadowBlur, 0)\r\n    context.shadowOffsetX = getDefault(options.shadowOffsetX, 1)\r\n    context.shadowOffsetY = getDefault(options.shadowOffsetY, 1)\r\n  }\r\n}\r\n","import { getRenderingEngine } from '@ohif/cornerstone-render'\r\nimport IViewportUID from '../../store/IViewportUID'\r\n\r\n/**\r\n * @function cameraSyncCallback - Synchronizer callback to synchronize the camera. Synchronization\r\n *\r\n * @param {object} synchronizerInstance The Instance of the Synchronizer\r\n * @param {IViewportUID} sourceViewport The list of UIDs defining the source viewport.\r\n * @param {IViewportUID} targetViewport The list of UIDs defining the target viewport.\r\n * @param {CustomEvent} cameraModifiedEvent The CAMERA_MODIFIED event.\r\n */\r\nexport default function cameraSyncCallback(\r\n  synchronizerInstance,\r\n  sourceViewport: IViewportUID,\r\n  targetViewport: IViewportUID,\r\n  cameraModifiedEvent: CustomEvent\r\n) {\r\n  // We need a helper for this\r\n  if (\r\n    sourceViewport.renderingEngineUID === targetViewport.renderingEngineUID &&\r\n    sourceViewport.sceneUID === targetViewport.sceneUID &&\r\n    sourceViewport.viewportUID === targetViewport.viewportUID\r\n  ) {\r\n    return\r\n  }\r\n\r\n  const { camera } = cameraModifiedEvent.detail\r\n\r\n  const tViewport = getRenderingEngine(targetViewport.renderingEngineUID)\r\n    .getScene(targetViewport.sceneUID)\r\n    .getViewport(targetViewport.viewportUID)\r\n\r\n  tViewport.setCamera(camera)\r\n  tViewport.render()\r\n}\r\n","import { SynchronizerManager } from '../../store'\r\nimport { EVENTS as RENDERING_EVENTS } from '@ohif/cornerstone-render'\r\nimport cameraSyncCallback from '../callbacks/cameraSyncCallback'\r\nimport Synchronizer from '../../store/SynchronizerManager/Synchronizer'\r\n\r\nconst { CAMERA_MODIFIED } = RENDERING_EVENTS\r\n\r\n/**\r\n * @function createCameraPositionSynchronizer A helper that creates a new `Synchronizer`\r\n * which listens to the `CAMERA_MODIFIED` rendering event and calls the `cameraSyncCallback`.\r\n *\r\n * @param {string} synchronizerName The name of the synchronizer.\r\n *\r\n * @returns {Synchronizer} A new `Synchronizer` instance.\r\n */\r\nexport default function createCameraPositionSynchronizer(\r\n  synchronizerName: string\r\n): Synchronizer {\r\n  const cameraPositionSynchronizer = SynchronizerManager.createSynchronizer(\r\n    synchronizerName,\r\n    CAMERA_MODIFIED,\r\n    cameraSyncCallback\r\n  )\r\n\r\n  return cameraPositionSynchronizer\r\n}\r\n","import { getRenderingEngine } from '@ohif/cornerstone-render'\r\nimport IViewportUID from '../../store/IViewportUID'\r\n\r\n/**\r\n * @function cameraSyncCallback - Synchronizer callback to synchronize the voi of volumeActors of identical volumes\r\n * in different scenes.\r\n *\r\n * @param {object} synchronizerInstance The Instance of the Synchronizer\r\n * @param {IViewportUID} sourceViewport The list of UIDs defining the source viewport.\r\n * @param {IViewportUID} targetViewport The list of UIDs defining the target viewport.\r\n * @param {CustomEvent} voiModifiedEvent The VOI_MODIFIED event.\r\n */\r\nexport default function voiSyncCallback(\r\n  synchronizerInstance,\r\n  sourceViewport: IViewportUID,\r\n  targetViewport: IViewportUID,\r\n  voiModifiedEvent: CustomEvent\r\n) {\r\n  const eventData = voiModifiedEvent.detail\r\n  const { volumeUID, sceneUID, range } = eventData\r\n\r\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineUID)\r\n  if (!renderingEngine) {\r\n    throw new Error(\r\n      `Rendering Engine does not exist: ${targetViewport.renderingEngineUID}`\r\n    )\r\n  }\r\n\r\n  const tScene = renderingEngine.getScene(targetViewport.sceneUID)\r\n\r\n  if (tScene.uid === sceneUID) {\r\n    // Same scene, no need to update.\r\n    return\r\n  }\r\n\r\n  const tViewport = tScene.getViewport(targetViewport.viewportUID)\r\n  const volumeActor = tScene.getVolumeActor(volumeUID)\r\n\r\n  volumeActor\r\n    .getProperty()\r\n    .getRGBTransferFunction(0)\r\n    .setRange(range.lower, range.upper)\r\n\r\n  tViewport.render()\r\n}\r\n","import { SynchronizerManager } from '../../store'\r\nimport { EVENTS as RENDERING_EVENTS } from '@ohif/cornerstone-render'\r\nimport voiSyncCallback from '../callbacks/voiSyncCallback'\r\nimport Synchronizer from '../../store/SynchronizerManager/Synchronizer'\r\n\r\nconst { VOI_MODIFIED } = RENDERING_EVENTS\r\n\r\n/**\r\n * @function createVOISynchronizer A helper that creates a new `Synchronizer`\r\n * which listens to the `VOI_MODIFIED` rendering event and calls the `voiSyncCallback`.\r\n *\r\n * @param {string} synchronizerName The name of the synchronizer.\r\n *\r\n * @returns {Synchronizer} A new `Synchronizer` instance.\r\n */\r\nexport default function createVOISynchronizer(\r\n  synchronizerName: string\r\n): Synchronizer {\r\n  const VOISynchronizer = SynchronizerManager.createSynchronizer(\r\n    synchronizerName,\r\n    VOI_MODIFIED,\r\n    voiSyncCallback\r\n  )\r\n\r\n  return VOISynchronizer\r\n}\r\n","import synchronizers from './synchronizers'\r\n\r\nexport default synchronizers\r\n","import createCameraPositionSynchronizer from './createCameraPositionSynchronizer'\r\nimport createVOISynchronizer from './createVOISynchronizer'\r\n\r\nexport default { createCameraPositionSynchronizer, createVOISynchronizer }\r\n","import deepMerge from '../../util/deepMerge'\r\nimport { ToolModes } from '../../enums'\r\n\r\n/**\r\n * Abstract base class from which all tools derive.\r\n * Deals with cleanly merging custom and default configuration, and strategy\r\n * application.\r\n */\r\nabstract class BaseTool {\r\n  public initialConfiguration: Record<string, any>\r\n  public name: string\r\n  public supportedInteractionTypes: Array<string>\r\n  public strategies: Record<string, any>\r\n  public defaultStrategy: string\r\n  public activeStrategy: string\r\n  public configuration: Record<string, any>\r\n  public mode: ToolModes\r\n\r\n  constructor(\r\n    toolConfiguration: Record<string, any>,\r\n    defaultToolConfiguration: Record<string, any>\r\n  ) {\r\n    this.initialConfiguration = deepMerge(\r\n      toolConfiguration,\r\n      defaultToolConfiguration\r\n    )\r\n\r\n    const {\r\n      name,\r\n      strategies,\r\n      defaultStrategy,\r\n      configuration = {},\r\n      supportedInteractionTypes,\r\n    } = this.initialConfiguration\r\n\r\n    this.name = name\r\n    this.supportedInteractionTypes = supportedInteractionTypes || []\r\n    this.strategies = strategies || {}\r\n    this.defaultStrategy =\r\n      defaultStrategy || Object.keys(this.strategies)[0] || undefined\r\n    this.activeStrategy = this.defaultStrategy\r\n    this.configuration = Object.assign({}, configuration)\r\n    this.mode = ToolModes.Disabled\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param evt\r\n   * @param operationData\r\n   */\r\n  public applyActiveStrategy(evt: any, operationData: any): any {\r\n    return this.strategies[this.activeStrategy].call(this, evt, operationData)\r\n  }\r\n\r\n  /**\r\n   * Sets the active strategy for a tool if using strategies. Strategies are\r\n   * multiple implementations of tool behavior that can be switched by tool\r\n   * configuration.\r\n   *\r\n   * @param strategyName\r\n   * @public\r\n   */\r\n  public setActiveStrategyName(strategyName): void {\r\n    this.activeStrategy = strategyName\r\n  }\r\n}\r\n\r\nexport default BaseTool\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import { Settings } from '@ohif/cornerstone-render'\r\nimport BaseTool from './BaseTool'\r\nimport { getStyleProperty } from '../../stateManagement/toolStyle'\r\nimport {\r\n  ToolSpecificToolData,\r\n  ToolSpecificToolState,\r\n  Point2,\r\n} from '../../types'\r\nimport getToolDataStyle from '../../util/getToolDataStyle'\r\n\r\n/**\r\n * @class BaseAnnotationTool @extends BaseTool\r\n * @classdesc Abstract class for tools which create and display annotations on the\r\n * cornerstone3D canvas.\r\n */\r\nabstract class BaseAnnotationTool extends BaseTool {\r\n  // ===================================================================\r\n  // Abstract Methods - Must be implemented.\r\n  // ===================================================================\r\n\r\n  /**\r\n   * @abstract @method addNewMeasurement Creates a new annotation.\r\n   *\r\n   * @method createNewMeasurement\r\n   * @memberof BaseAnnotationTool\r\n   *\r\n   * @param  {CustomEvent} evt The event.\r\n   * @param  {string} interactionType The interaction type used to add the measurement.\r\n   */\r\n  abstract addNewMeasurement(\r\n    evt: CustomEvent,\r\n    interactionType: string\r\n  ): ToolSpecificToolData\r\n\r\n  /**\r\n   * @abstract @method renderToolData Used to redraw the tool's annotation data per render\r\n   *\r\n   * @param {CustomEvent} evt The IMAGE_RENDERED event.\r\n   */\r\n  abstract renderToolData(evt: any, svgDrawingHelper: any)\r\n\r\n  // ===================================================================\r\n  // Virtual Methods - Have default behavior or are optional.\r\n  // ===================================================================\r\n\r\n  /**\r\n   * @virtual @method handleSelectedCallback Custom callback for when a handle is selected.\r\n   * @memberof Tools.Base.BaseAnnotationTool\r\n   *\r\n   * @param  {CustomEvent} evt The event.\r\n   * @param  {ToolSpecificToolData} toolData - The toolData selected.\r\n   * @param  {any} handle - The selected handle.\r\n   * @param  {string} interactionType - The intraction type the handle was selected with.\r\n   */\r\n  public abstract handleSelectedCallback(\r\n    evt,\r\n    toolData: ToolSpecificToolData,\r\n    handle,\r\n    interactionType\r\n  ): void\r\n\r\n  /**\r\n   * @virtual @method toolSelectedCallback Custom callback for when a tool is selected.\r\n   * @memberof BaseAnnotationTool\r\n   *\r\n   * @param  {CustomEvent} evt The event.\r\n   * @param  {ToolSpecificToolData} toolData - The `ToolSpecificToolData` to check.\r\n   * @param  {string} [interactionType=mouse]\r\n   */\r\n  public abstract toolSelectedCallback(\r\n    evt,\r\n    toolData: ToolSpecificToolData,\r\n    interactionType\r\n  ): void\r\n\r\n  /**\r\n   * @virtual @method Event handler for MOUSE_MOVE event.\r\n   *\r\n   *\r\n   * @param {CustomEvent} evt - The event.\r\n   * @param {ToolSpecificToolState} filteredToolState The toolState to check for hover interactions\r\n   * @returns {boolean} - True if the image needs to be updated.\r\n   */\r\n  public mouseMoveCallback = (\r\n    evt,\r\n    filteredToolState: ToolSpecificToolState\r\n  ): boolean => {\r\n    const { element, currentPoints } = evt.detail\r\n    const canvasCoords = currentPoints.canvas\r\n    let imageNeedsUpdate = false\r\n\r\n    for (let i = 0; i < filteredToolState.length; i++) {\r\n      const toolData = filteredToolState[i]\r\n      const { data } = toolData\r\n\r\n      const activateHandleIndex = data.handles\r\n        ? data.handles.activeHandleIndex\r\n        : undefined\r\n\r\n      const near = this._imagePointNearToolOrHandle(\r\n        element,\r\n        toolData,\r\n        canvasCoords,\r\n        6\r\n      )\r\n\r\n      const nearToolAndNotMarkedActive = near && !data.active\r\n      const notNearToolAndMarkedActive = !near && data.active\r\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\r\n        data.active = !data.active\r\n        imageNeedsUpdate = true\r\n      } else if (\r\n        data.handles &&\r\n        data.handles.activeHandleIndex !== activateHandleIndex\r\n      ) {\r\n        // Active handle index has changed, re-render.\r\n        imageNeedsUpdate = true\r\n      }\r\n    }\r\n\r\n    return imageNeedsUpdate\r\n  }\r\n\r\n  /**\r\n   * @virtual @method getHandleNearImagePoint\r\n   * @memberof BaseAnnotationTool\r\n   *\r\n   * @param {HTMLElement} element The cornerstone3D enabled element.\r\n   * @param {ToolSpecificToolData} toolData The toolData to check.\r\n   * @param {Point2} canvasCoords The image point in canvas coordinates.\r\n   * @param {number} proximity The proximity to accept.\r\n   *\r\n   * @returns {any|undefined} The handle if found (may be a point, textbox or other).\r\n   */\r\n  public abstract getHandleNearImagePoint(\r\n    element: HTMLElement,\r\n    toolData: ToolSpecificToolData,\r\n    canvasCoords: Point2,\r\n    proximity: number\r\n  ): unknown\r\n\r\n  /**\r\n   * @virtual @method Returns true if the given coords are need the tool.\r\n   * @memberof BaseAnnotationTool\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @param  {ToolSpecificToolData} toolData - The `ToolSpecificToolData` to check.\r\n   * @param {Point2} canvasCoords The image point in canvas coordinates.\r\n   * @param {number} proximity The proximity to accept.\r\n   * @param {string} interactionType The interaction type used to add the measurement.\r\n   *\r\n   * @returns {boolean} If the point is near the tool.\r\n   */\r\n  public abstract pointNearTool(\r\n    element: HTMLElement,\r\n    toolData: ToolSpecificToolData,\r\n    canvasCoords: Point2,\r\n    proximity: number,\r\n    interactionType: string\r\n  ): boolean\r\n\r\n  /**\r\n   * @protected @method _imagePointNearToolOrHandle Returns true if the\r\n   * `canvasCoords` are near a handle or selectable part of the tool\r\n   * @memberof BaseAnnotationTool\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @param {ToolSpecificToolData} toolData\r\n   * @param {Point2} canvasCoords\r\n   * @param {number} proximity\r\n   *\r\n   * @returns {boolean} If the point is near.\r\n   */\r\n  protected _imagePointNearToolOrHandle(\r\n    element: HTMLElement,\r\n    toolData: ToolSpecificToolData,\r\n    canvasCoords: Point2,\r\n    proximity: number\r\n  ): boolean {\r\n    const handleNearImagePoint = this.getHandleNearImagePoint(\r\n      element,\r\n      toolData,\r\n      canvasCoords,\r\n      proximity\r\n    )\r\n\r\n    if (handleNearImagePoint) {\r\n      return true\r\n    }\r\n\r\n    // todo: support other interactions\r\n    const toolNewImagePoint = this.pointNearTool(\r\n      element,\r\n      toolData,\r\n      canvasCoords,\r\n      proximity,\r\n      'mouse'\r\n    )\r\n\r\n    return toolNewImagePoint\r\n  }\r\n\r\n  public getStyle(\r\n    settings: Settings,\r\n    property: string,\r\n    toolData?: ToolSpecificToolData\r\n  ): unknown {\r\n    return getStyleProperty(\r\n      settings,\r\n      property,\r\n      getToolDataStyle(toolData),\r\n      this.mode\r\n    )\r\n  }\r\n\r\n  public getLinkedTextBoxStyle(\r\n    settings: Settings,\r\n    toolData?: ToolSpecificToolData\r\n  ): Record<string, unknown> {\r\n    return {\r\n      fontFamily: this.getStyle(settings, 'textBox.fontFamily', toolData),\r\n      fontSize: this.getStyle(settings, 'textBox.fontSize', toolData),\r\n      color: this.getStyle(settings, 'textBox.color', toolData),\r\n      background: this.getStyle(settings, 'textBox.background', toolData),\r\n      lineWidth: this.getStyle(settings, 'textBox.link.lineWidth', toolData),\r\n      lineDash: this.getStyle(settings, 'textBox.link.lineDash', toolData),\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseAnnotationTool\r\n","import { ToolDataStates } from '../enums'\r\nimport { ToolSpecificToolData } from '../types'\r\nimport { isToolDataSelected } from '../stateManagement/toolDataSelection'\r\n\r\nexport default function getToolDataStyle(\r\n  toolData?: ToolSpecificToolData\r\n): ToolDataStates {\r\n  if (toolData) {\r\n    if (toolData.data && toolData.data.active) return ToolDataStates.Highlighted\r\n    if (isToolDataSelected(toolData)) return ToolDataStates.Selected\r\n  }\r\n  return ToolDataStates.Default\r\n}\r\n","import { BaseTool } from './base'\r\nimport { getEnabledElement, Point3 } from '@ohif/cornerstone-render'\r\n\r\n/**\r\n * @class PanTool\r\n * @classdesc Tool that pans the camera in the plane defined by the sliceNormal and the viewUp.\r\n *\r\n * @export\r\n * @class PanTool\r\n * @extends {BaseTool}\r\n */\r\nexport default class PanTool extends BaseTool {\r\n  touchDragCallback: () => void\r\n  mouseDragCallback: () => void\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'Pan',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n    })\r\n\r\n    this.touchDragCallback = this._dragCallback.bind(this)\r\n    this.mouseDragCallback = this._dragCallback.bind(this)\r\n  }\r\n\r\n  _dragCallback(evt) {\r\n    const { element: canvas, deltaPoints } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n\r\n    const deltaPointsWorld = deltaPoints.world\r\n    const camera = enabledElement.viewport.getCamera()\r\n    const { focalPoint, position } = camera\r\n\r\n    const updatedPosition = <Point3>[\r\n      position[0] - deltaPointsWorld[0],\r\n      position[1] - deltaPointsWorld[1],\r\n      position[2] - deltaPointsWorld[2],\r\n    ]\r\n\r\n    const updatedFocalPoint = <Point3>[\r\n      focalPoint[0] - deltaPointsWorld[0],\r\n      focalPoint[1] - deltaPointsWorld[1],\r\n      focalPoint[2] - deltaPointsWorld[2],\r\n    ]\r\n\r\n    enabledElement.viewport.setCamera({\r\n      focalPoint: updatedFocalPoint,\r\n      position: updatedPosition,\r\n    })\r\n    enabledElement.viewport.render()\r\n  }\r\n}\r\n","import { BaseTool } from './base'\r\nimport {\r\n  getEnabledElement,\r\n  getVolume,\r\n  EVENTS,\r\n  triggerEvent,\r\n  VolumeViewport,\r\n} from '@ohif/cornerstone-render'\r\nimport { StreamingImageVolume } from '@ohif/cornerstone-image-loader-streaming-volume'\r\n\r\nexport default class WindowLevelTool extends BaseTool {\r\n  touchDragCallback: () => void\r\n  mouseDragCallback: () => void\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'WindowLevel',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n    })\r\n\r\n    this.touchDragCallback = this._dragCallback.bind(this)\r\n    this.mouseDragCallback = this._dragCallback.bind(this)\r\n  }\r\n\r\n  private _toWindowLevel(low, high) {\r\n    const windowWidth = Math.abs(low - high)\r\n    const windowCenter = low + windowWidth / 2\r\n\r\n    return { windowWidth, windowCenter }\r\n  }\r\n\r\n  private _toLowHighRange(windowWidth, windowCenter) {\r\n    const lower = windowCenter - windowWidth / 2.0\r\n    const upper = windowCenter + windowWidth / 2.0\r\n\r\n    return { lower, upper }\r\n  }\r\n\r\n  _dragCallback(evt) {\r\n    const { element: canvas, deltaPoints } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { scene, sceneUID, viewport } = enabledElement\r\n    const { uid: volumeUID } = viewport.getDefaultActor()\r\n\r\n    let volumeActor\r\n\r\n    if (viewport instanceof VolumeViewport && volumeUID) {\r\n      volumeActor = scene.getVolumeActor(volumeUID)\r\n    } else {\r\n      const volumeActors = viewport.getActors()\r\n      if (volumeActors && volumeActors.length) {\r\n        volumeActor = volumeActors[0].volumeActor\r\n      }\r\n    }\r\n\r\n    if (!volumeActor) {\r\n      // No volume actor available.\r\n      return\r\n    }\r\n\r\n    const rgbTransferFunction = volumeActor\r\n      .getProperty()\r\n      .getRGBTransferFunction(0)\r\n\r\n    const deltaPointsCanvas = deltaPoints.canvas\r\n\r\n    // Todo: enabling a viewport twice in a row sets the imageDynamicRange to be zero for some reason\r\n    // 1 was too little\r\n    let multiplier = 4\r\n    if (viewport instanceof VolumeViewport && volumeUID) {\r\n      const imageDynamicRange = this._getImageDynamicRange(volumeUID)\r\n\r\n      multiplier = Math.round(imageDynamicRange / 1024)\r\n    }\r\n\r\n    const wwDelta = deltaPointsCanvas[0] * multiplier\r\n    const wcDelta = deltaPointsCanvas[1] * multiplier\r\n\r\n    const [lower, upper] = rgbTransferFunction.getRange()\r\n\r\n    let { windowWidth, windowCenter } = this._toWindowLevel(lower, upper)\r\n\r\n    windowWidth += wwDelta\r\n    windowCenter += wcDelta\r\n\r\n    windowWidth = Math.max(windowWidth, 1)\r\n\r\n    // Convert back to range\r\n    const newRange = this._toLowHighRange(windowWidth, windowCenter)\r\n\r\n    rgbTransferFunction.setMappingRange(newRange.lower, newRange.upper)\r\n\r\n    const eventDetail = {\r\n      volumeUID,\r\n      sceneUID,\r\n      range: newRange,\r\n    }\r\n\r\n    triggerEvent(canvas, EVENTS.VOI_MODIFIED, eventDetail)\r\n\r\n    if (scene || viewport instanceof VolumeViewport) {\r\n      scene.render()\r\n      return\r\n    }\r\n\r\n    viewport.setStackActorVOI(newRange)\r\n    viewport.render()\r\n  }\r\n\r\n  _getImageDynamicRange = (volumeUID: string) => {\r\n    const imageVolume = getVolume(volumeUID)\r\n    const { dimensions, scalarData } = imageVolume\r\n    const middleSliceIndex = Math.floor(dimensions[2] / 2)\r\n\r\n    if (!(imageVolume instanceof StreamingImageVolume)) {\r\n      return\r\n    }\r\n\r\n    const streamingVolume = <StreamingImageVolume>imageVolume\r\n\r\n    if (!streamingVolume.loadStatus.cachedFrames[middleSliceIndex]) {\r\n      return DEFAULT_IMAGE_DYNAMIC_RANGE\r\n    }\r\n\r\n    const frameLength = dimensions[0] * dimensions[1]\r\n    let bytesPerVoxel\r\n    let TypedArrayConstructor\r\n\r\n    if (scalarData instanceof Float32Array) {\r\n      bytesPerVoxel = 4\r\n      TypedArrayConstructor = Float32Array\r\n    } else if (scalarData instanceof Uint8Array) {\r\n      bytesPerVoxel = 1\r\n      TypedArrayConstructor = Uint8Array\r\n    }\r\n\r\n    const buffer = scalarData.buffer\r\n    const byteOffset = middleSliceIndex * frameLength * bytesPerVoxel\r\n    const frame = new TypedArrayConstructor(buffer, byteOffset, frameLength)\r\n\r\n    let min = Infinity\r\n    let max = -Infinity\r\n\r\n    for (let i = 0; i < frameLength; i++) {\r\n      const voxel = frame[i]\r\n\r\n      if (voxel < min) {\r\n        min = voxel\r\n      }\r\n\r\n      if (voxel > max) {\r\n        max = voxel\r\n      }\r\n    }\r\n\r\n    return max - min\r\n  }\r\n}\r\n\r\nconst DEFAULT_IMAGE_DYNAMIC_RANGE = 1024\r\n","import {\r\n  getEnabledElement,\r\n  EVENTS,\r\n  triggerEvent,\r\n  eventTarget,\r\n} from '@ohif/cornerstone-render'\r\nimport { BaseTool } from './base'\r\n\r\nexport default class PetThresholdTool extends BaseTool {\r\n  touchDragCallback: () => void\r\n  mouseDragCallback: () => void\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'PetThreshold',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n    })\r\n\r\n    this.touchDragCallback = this._dragCallback.bind(this)\r\n    this.mouseDragCallback = this._dragCallback.bind(this)\r\n  }\r\n\r\n  _dragCallback(evt) {\r\n    const { element: canvas, deltaPoints } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { scene, sceneUID, viewport } = enabledElement\r\n\r\n    const { uid: volumeUID } = viewport.getDefaultActor()\r\n\r\n    let volumeActor\r\n\r\n    if (volumeUID) {\r\n      volumeActor = scene.getVolumeActor(volumeUID)\r\n\r\n      if (!volumeActor) {\r\n        // Intentional use of volumeUID which is not defined, so throw.\r\n        throw new Error(\r\n          `Scene does not have a volume actor with specified volumeUID: ${volumeUID}`\r\n        )\r\n      }\r\n    } else {\r\n      // Default to first volumeActor\r\n      const volumeActors = scene.getVolumeActors()\r\n\r\n      if (volumeActors && volumeActors.length) {\r\n        volumeActor = volumeActors[0].volumeActor\r\n      }\r\n    }\r\n\r\n    if (!volumeActor) {\r\n      // No volume actor available.\r\n      return\r\n    }\r\n\r\n    const rgbTransferFunction = volumeActor\r\n      .getProperty()\r\n      .getRGBTransferFunction(0)\r\n\r\n    const deltaY = deltaPoints.canvas[1]\r\n    const multiplier = 5 / canvas.clientHeight\r\n    const wcDelta = deltaY * multiplier\r\n    const range = rgbTransferFunction.getRange()\r\n    const lower = range[0]\r\n    let upper = range[1]\r\n\r\n    upper -= wcDelta\r\n    upper = Math.max(upper, 0.1)\r\n\r\n    rgbTransferFunction.setMappingRange(lower, upper)\r\n\r\n    const eventDetail = {\r\n      volumeUID,\r\n      sceneUID,\r\n      range: { lower, upper },\r\n    }\r\n\r\n    triggerEvent(canvas, EVENTS.VOI_MODIFIED, eventDetail)\r\n\r\n    scene.render()\r\n  }\r\n}\r\n","import { BaseTool } from './base'\r\nimport { scrollThroughStack } from '../util/stackScrollTool'\r\n\r\nexport default class StackScrollTool extends BaseTool {\r\n  touchDragCallback: () => void\r\n  mouseDragCallback: () => void\r\n  _configuration: any\r\n\r\n  // Apparently TS says super _must_ be the first call? This seems a bit opinionated.\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'StackScroll',\r\n      invert: false,\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n    })\r\n\r\n    this.touchDragCallback = this._dragCallback.bind(this)\r\n    this.mouseDragCallback = this._dragCallback.bind(this)\r\n  }\r\n\r\n  _dragCallback(evt) {\r\n    const { deltaPoints } = evt.detail\r\n    const deltaFrames = deltaPoints.canvas[1]\r\n    const { volumeUID, invert } = this.configuration\r\n\r\n    scrollThroughStack(evt, deltaFrames, volumeUID, invert)\r\n  }\r\n}\r\n","import { BaseTool } from './base'\r\nimport { scrollThroughStack } from '../util/stackScrollTool'\r\n\r\nexport default class StackScrollMouseWheelTool extends BaseTool {\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'StackScrollMouseWheel',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n    })\r\n  }\r\n\r\n  mouseWheelCallback(evt) {\r\n    const { wheel } = evt.detail\r\n    const { direction: deltaFrames } = wheel\r\n\r\n    const { volumeUID } = this.configuration\r\n    scrollThroughStack(evt, deltaFrames, volumeUID)\r\n  }\r\n}\r\n","import { BaseTool } from './base'\r\n// ~~ VTK Viewport\r\nimport { getEnabledElement } from '@ohif/cornerstone-render'\r\n\r\nexport default class ZoomTool extends BaseTool {\r\n  touchDragCallback: () => void\r\n  mouseDragCallback: () => void\r\n\r\n  // Apparently TS says super _must_ be the first call? This seems a bit opinionated.\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'Zoom',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n    })\r\n\r\n    /**\r\n     * Will only fire two cornerstone events:\r\n     * - TOUCH_DRAG\r\n     * - MOUSE_DRAG\r\n     *\r\n     * Given that the tool is active and has matching bindings for the\r\n     * underlying touch/mouse event.\r\n     */\r\n    this.touchDragCallback = this._dragCallback.bind(this)\r\n    this.mouseDragCallback = this._dragCallback.bind(this)\r\n  }\r\n\r\n  // Takes ICornerstoneEvent, Mouse or Touch\r\n  _dragCallback(evt) {\r\n    const { element: canvas } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { viewport } = enabledElement\r\n\r\n    const camera = viewport.getCamera()\r\n\r\n    if (camera.parallelProjection) {\r\n      this._dragParallelProjection(evt, camera)\r\n    } else {\r\n      this._dragPerspectiveProjection(evt, camera)\r\n    }\r\n\r\n    viewport.render()\r\n  }\r\n\r\n  _dragParallelProjection = (evt, camera) => {\r\n    const { element: canvas, deltaPoints } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { viewport } = enabledElement\r\n    const size = [canvas.clientWidth, canvas.clientHeight]\r\n\r\n    const zoomScale = 1.5 / size[1]\r\n\r\n    const deltaY = deltaPoints.canvas[1]\r\n\r\n    const k = deltaY * zoomScale\r\n\r\n    viewport.setCamera({ parallelScale: (1.0 - k) * camera.parallelScale })\r\n  }\r\n\r\n  _dragPerspectiveProjection = (evt, camera) => {\r\n    const { element: canvas, deltaPoints } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { viewport } = enabledElement\r\n    const size = [canvas.clientWidth, canvas.clientHeight]\r\n\r\n    const range = camera.clippingRange\r\n    const zoomScale = 1.5 * (range[1] / size[1])\r\n\r\n    const { position, focalPoint, viewPlaneNormal } = camera\r\n\r\n    const directionOfProjection = [\r\n      -viewPlaneNormal[0],\r\n      -viewPlaneNormal[1],\r\n      -viewPlaneNormal[2],\r\n    ]\r\n\r\n    const deltaY = deltaPoints.canvas[1]\r\n\r\n    const k = deltaY * zoomScale\r\n\r\n    let tmp = k * directionOfProjection[0]\r\n    position[0] += tmp\r\n    focalPoint[0] += tmp\r\n\r\n    tmp = k * directionOfProjection[1]\r\n    position[1] += tmp\r\n    focalPoint[1] += tmp\r\n\r\n    tmp = k * directionOfProjection[2]\r\n    position[2] += tmp\r\n    focalPoint[2] += tmp\r\n\r\n    viewport.setCamera({ position, focalPoint })\r\n  }\r\n}\r\n","import { BaseTool } from './base'\r\nimport { getEnabledElement, Point3 } from '@ohif/cornerstone-render'\r\nimport { mat4, vec3 } from 'gl-matrix'\r\n\r\nconst DIRECTIONS = {\r\n  X: [1, 0, 0],\r\n  Y: [0, 1, 0],\r\n  Z: [0, 0, 1],\r\n  CUSTOM: [],\r\n}\r\n\r\n/**\r\n * @class VolumeRotateMouseWheelTool\r\n * @classdesc Tool that rotates the camera on mouse wheel.\r\n * It rotates the camera around the focal point, and around a defined axis. Default\r\n * axis is set to be Z axis, but it can be configured to any custom normalized axis.\r\n *\r\n * @export\r\n * @class VolumeRotateMouseWheelTool\r\n * @extends {BaseTool}\r\n */\r\nexport default class VolumeRotateMouseWheelTool extends BaseTool {\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    const defaultToolConfiguration = {\r\n      name: 'VolumeRotateMouseWheel',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: {\r\n        direction: DIRECTIONS.Z,\r\n        rotateIncrementDegrees: 20,\r\n      },\r\n    }\r\n\r\n    super(toolConfiguration, defaultToolConfiguration)\r\n  }\r\n\r\n  // https://github.com/kitware/vtk-js/blob/HEAD/Sources/Interaction/Manipulators/MouseCameraUnicamRotateManipulator/index.js#L73\r\n  mouseWheelCallback(evt) {\r\n    const { element: canvas, wheel } = evt.detail\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { viewport } = enabledElement\r\n    const { direction, rotateIncrementDegrees } = this.configuration\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewUp, position, focalPoint } = camera\r\n\r\n    const { direction: deltaY } = wheel\r\n\r\n    const [cx, cy, cz] = focalPoint\r\n    const [ax, ay, az] = direction\r\n\r\n    const angle = deltaY * rotateIncrementDegrees\r\n\r\n    // position[3] = 1.0\r\n    // focalPoint[3] = 1.0\r\n    // viewUp[3] = 0.0\r\n\r\n    const newPosition: Point3 = [0, 0, 0]\r\n    const newFocalPoint: Point3 = [0, 0, 0]\r\n    const newViewUp: Point3 = [0, 0, 0]\r\n\r\n    const transform = mat4.identity(new Float32Array(16))\r\n    mat4.translate(transform, transform, [cx, cy, cz])\r\n    mat4.rotate(transform, transform, angle, [ax, ay, az])\r\n    mat4.translate(transform, transform, [-cx, -cy, -cz])\r\n    vec3.transformMat4(newPosition, position, transform)\r\n    vec3.transformMat4(newFocalPoint, focalPoint, transform)\r\n\r\n    mat4.identity(transform)\r\n    mat4.rotate(transform, transform, angle, [ax, ay, az])\r\n    vec3.transformMat4(<Point3>newViewUp, viewUp, transform)\r\n\r\n    viewport.setCamera({\r\n      position: newPosition,\r\n      viewUp: newViewUp,\r\n      focalPoint: newFocalPoint,\r\n    })\r\n\r\n    viewport.render()\r\n  }\r\n}\r\n","/**\r\n * @function showToolCursor Shows the mouse cursor for the cornerstone3D enabled element.\r\n *\r\n * @param {HTMLElement} element The cornerstone3D enabled element.\r\n */\r\nfunction showToolCursor(element: HTMLElement) {\r\n  _setCursorStyle(element, 'initial')\r\n}\r\n\r\n/**\r\n * @function hideToolCursor Hides the mouse cursor for the cornerstone3D enabled element.\r\n *\r\n * @param {HTMLElement} element The cornerstone3D enabled element.\r\n */\r\nfunction hideToolCursor(element: HTMLElement) {\r\n  _setCursorStyle(element, 'none')\r\n}\r\n\r\n/**\r\n * @function _setCursorStyle  Sets the cursorStyle for the element.\r\n *\r\n * @param {HTMLElement} element The HTMLElement.\r\n * @param {string} cursorStyle The `style.cursor` property to set on the `element`.\r\n */\r\nfunction _setCursorStyle(element, cursorStyle) {\r\n  element.style.cursor = cursorStyle\r\n}\r\n\r\nexport { showToolCursor, hideToolCursor }\r\n","import { BaseAnnotationTool } from './base'\r\n// ~~ VTK Viewport\r\nimport { getEnabledElement } from '@ohif/cornerstone-render'\r\nimport { addToolState, getToolState } from '../stateManagement/toolState'\r\nimport {\r\n  drawCircle as drawCircleSvg,\r\n  drawHandles as drawHandlesSvg,\r\n  drawLine as drawLineSvg,\r\n} from '../drawingSvg'\r\nimport { vec2, vec3 } from 'gl-matrix'\r\nimport { state } from '../store'\r\nimport { CornerstoneTools3DEvents as EVENTS } from '../enums'\r\nimport { getViewportUIDsWithToolToRender } from '../util/viewportFilters'\r\nimport { showToolCursor, hideToolCursor } from '../store/toolCursor'\r\nimport { math } from '../util'\r\nimport vtkMath from 'vtk.js/Sources/Common/Core/Math'\r\nimport vtkMatrixBuilder from 'vtk.js/Sources/Common/Core/MatrixBuilder'\r\nimport { lineSegment } from '../util/math'\r\nimport {\r\n  ToolSpecificToolData,\r\n  ToolSpecificToolState,\r\n  Point2,\r\n  Point3,\r\n} from '../types'\r\nimport { ToolGroupManager } from '../store'\r\nimport { elementType } from 'prop-types'\r\n\r\nconst { liangBarksyClip } = math.vec2\r\nconst { isEqual, isOpposite } = math.vec3\r\n\r\n// TODO: nested config is weird\r\ninterface ToolConfiguration {\r\n  configuration?: {\r\n    getReferenceLineColor?: (viewportUID: string) => string\r\n    getReferenceLineControllable?: (viewportUID: string) => boolean\r\n    getReferenceLineDraggableRotatable?: (viewportUID: string) => boolean\r\n    getReferenceLineSlabThicknessControlsOn?: (viewportUID: string) => boolean\r\n    shadow?: boolean\r\n  }\r\n}\r\n\r\nfunction defaultReferenceLineColor() {\r\n  return 'rgb(200, 200, 200)'\r\n}\r\n\r\nfunction defaultReferenceLineControllable() {\r\n  return true\r\n}\r\n\r\nfunction defaultReferenceLineDraggableRotatable() {\r\n  return true\r\n}\r\n\r\nfunction defaultReferenceLineSlabThicknessControlsOn() {\r\n  return false\r\n}\r\n\r\nconst OPERATION = {\r\n  DRAG: 1,\r\n  ROTATE: 2,\r\n  SLAB: 3,\r\n}\r\n\r\nexport default class CrosshairsTool extends BaseAnnotationTool {\r\n  toolCenter: Point3 = [0, 0, 0] // NOTE: it is assumed that all the active/linked viewports share the same crosshair center.\r\n  // This because the rotation operation rotates also all the other active/intersecting reference lines of the same angle\r\n  _getReferenceLineColor?: (viewportUID: string) => string\r\n  _getReferenceLineControllable?: (viewportUID: string) => boolean\r\n  _getReferenceLineDraggableRotatable?: (viewportUID: string) => boolean\r\n  _getReferenceLineSlabThicknessControlsOn?: (viewportUID: string) => boolean\r\n  editData: {\r\n    toolData: any\r\n  } | null\r\n\r\n  constructor(toolConfiguration: ToolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'Crosshairs',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: { shadow: true },\r\n    })\r\n\r\n    // todo this is weird? why do we have this nested? What is the diff between toolOptions and toolConfiguration in addTool?\r\n    this._getReferenceLineColor =\r\n      (toolConfiguration.configuration &&\r\n        toolConfiguration.configuration.getReferenceLineColor) ||\r\n      defaultReferenceLineColor\r\n    this._getReferenceLineControllable =\r\n      (toolConfiguration.configuration &&\r\n        toolConfiguration.configuration.getReferenceLineControllable) ||\r\n      defaultReferenceLineControllable\r\n    this._getReferenceLineDraggableRotatable =\r\n      (toolConfiguration.configuration &&\r\n        toolConfiguration.configuration.getReferenceLineDraggableRotatable) ||\r\n      defaultReferenceLineDraggableRotatable\r\n    this._getReferenceLineSlabThicknessControlsOn =\r\n      (toolConfiguration.configuration &&\r\n        toolConfiguration.configuration\r\n          .getReferenceLineSlabThicknessControlsOn) ||\r\n      defaultReferenceLineSlabThicknessControlsOn\r\n\r\n    /**\r\n     * Will only fire fore cornerstone events:\r\n     * - TOUCH_DRAG\r\n     * - MOUSE_DRAG\r\n     *\r\n     * Given that the tool is active and has matching bindings for the\r\n     * underlying touch/mouse event.\r\n     */\r\n    this._activateModify = this._activateModify.bind(this)\r\n    this._deactivateModify = this._deactivateModify.bind(this)\r\n    this._mouseUpCallback = this._mouseUpCallback.bind(this)\r\n    this._mouseDragCallback = this._mouseDragCallback.bind(this)\r\n  }\r\n\r\n  addNewMeasurement(evt, interactionType) {\r\n    // not used, but is necessary if BaseAnnotationTool.\r\n    // NOTE: this is a BaseAnnotationTool and not a BaseTool, because in future\r\n    // we will likely pre-filter all tools using typeof / instanceof\r\n    // in the mouse down dispatchers where we check for methods like pointNearTool.\r\n  }\r\n\r\n  getHandleNearImagePoint = (element, toolData, canvasCoords, proximity) => {\r\n    // We need a better way of surfacing this...\r\n    const {\r\n      viewportUid: viewportUID,\r\n      sceneUid: sceneUID,\r\n      renderingEngineUid: renderingEngineUID,\r\n    } = element.dataset\r\n    const toolGroups = ToolGroupManager.getToolGroups(\r\n      renderingEngineUID,\r\n      sceneUID,\r\n      viewportUID\r\n    )\r\n    const groupTools = toolGroups[0]?.tools\r\n    const mode = groupTools[this.name]?.mode\r\n\r\n    // We don't want this annotation tool to render or be interactive unless its\r\n    // active\r\n    if (mode !== 'Active') {\r\n      return undefined\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    let point = this._getRotationHandleNearImagePoint(\r\n      viewport,\r\n      toolData,\r\n      canvasCoords,\r\n      proximity\r\n    )\r\n\r\n    if (point !== null) {\r\n      return point\r\n    }\r\n\r\n    point = this._getSlabThicknessHandleNearImagePoint(\r\n      viewport,\r\n      toolData,\r\n      canvasCoords,\r\n      proximity\r\n    )\r\n\r\n    if (point !== null) {\r\n      return point\r\n    }\r\n  }\r\n\r\n  handleSelectedCallback = (\r\n    evt,\r\n    toolData,\r\n    handle,\r\n    interactionType = 'mouse'\r\n  ) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    // NOTE: handle index or coordinates are not used when dragging.\r\n    // This beacause the handle points are actually generated in the renderTool and they are a derivate\r\n    // from the camera varibales of the viewports and of the slab thickness variable.\r\n    // Remember that the translation and rotation operations operate on the camera\r\n    // variables and not really on the handles. Similar for the slab thickness.\r\n\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  //\r\n  pointNearTool = (\r\n    element,\r\n    toolData,\r\n    canvasCoords,\r\n    proximity,\r\n    interactionType\r\n  ) => {\r\n    // We need a better way of surfacing this...\r\n    const {\r\n      viewportUid: viewportUID,\r\n      sceneUid: sceneUID,\r\n      renderingEngineUid: renderingEngineUID,\r\n    } = element.dataset\r\n    const toolGroups = ToolGroupManager.getToolGroups(\r\n      renderingEngineUID,\r\n      sceneUID,\r\n      viewportUID\r\n    )\r\n    const groupTools = toolGroups[0]?.tools\r\n    const mode = groupTools[this.name]?.mode\r\n\r\n    // We don't want this annotation tool to render or be interactive unless its\r\n    // active\r\n    if (mode !== 'Active') {\r\n      return false\r\n    }\r\n\r\n    // This iterates all instances of Crosshairs across all toolGroups\r\n    // And updates `isCrosshairsActive` if ANY are active?\r\n    let isCrosshairsActive = false\r\n    for (let i = 0; i < toolGroups.length; ++i) {\r\n      const toolGroup = toolGroups[i]\r\n      const tool = toolGroup.tools['Crosshairs']\r\n\r\n      if (tool.mode === 'Active') {\r\n        isCrosshairsActive = true\r\n        break\r\n      }\r\n    }\r\n\r\n    const { data } = toolData\r\n    if (this._pointNearTool(element, toolData, canvasCoords, 6)) {\r\n      return true\r\n    } else if (data.activeViewportUIDs.length === 0) {\r\n      const enabledElement = getEnabledElement(element)\r\n      const { viewport } = enabledElement\r\n      const jumpWorld = viewport.canvasToWorld(canvasCoords)\r\n\r\n      this._jump(enabledElement, jumpWorld)\r\n\r\n      const { rotationPoints } = data.handles\r\n      const viewportUIDArray = []\r\n      // put all the draggable reference lines in the viewportUIDArray\r\n      for (let i = 0; i < rotationPoints.length - 1; ++i) {\r\n        const otherViewport = rotationPoints[i][1]\r\n        const viewportControllable = this._getReferenceLineControllable(\r\n          otherViewport.uid\r\n        )\r\n        const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n          otherViewport.uid\r\n        )\r\n\r\n        if (!viewportControllable || !viewportDraggableRotatable) {\r\n          continue\r\n        }\r\n\r\n        viewportUIDArray.push(otherViewport.uid)\r\n\r\n        // rotation handles are two for viewport\r\n        i++\r\n      }\r\n\r\n      data.activeViewportUIDs = [...viewportUIDArray]\r\n      // set translation operation\r\n      data.handles.activeOperation = OPERATION.DRAG\r\n\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  toolSelectedCallback = (evt, toolData, interactionType = 'mouse') => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  onCameraModified = (evt) => {\r\n    const eventData = evt.detail\r\n    const { canvas: element } = eventData\r\n    const enabledElement = getEnabledElement(element)\r\n    const { FrameOfReferenceUID, renderingEngine, viewport } = enabledElement\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    let toolState = getToolState(enabledElement, this.name)\r\n    let filteredToolState = this.filterInteractableToolStateForElement(\r\n      element,\r\n      toolState\r\n    )\r\n\r\n    if (!filteredToolState.length && FrameOfReferenceUID) {\r\n      this._initCrosshairs(evt, toolState)\r\n\r\n      toolState = getToolState(enabledElement, this.name)\r\n\r\n      filteredToolState = this.filterInteractableToolStateForElement(\r\n        element,\r\n        toolState\r\n      )\r\n    }\r\n\r\n    // viewport ToolData\r\n    const viewportToolData = filteredToolState[0]\r\n\r\n    // -- Update the camera of other linked viewports in the same scene that\r\n    //    have the same camera in case of translation\r\n    // -- Update the crosshair center in world coordinates in toolData.\r\n    // This is necessary because other tools can modify the position of the slices,\r\n    // e.g. stackscroll tool at wheel scroll. So we update the coordinates of the center always here.\r\n    // NOTE: rotation and slab thickness handles are created/updated in renderTool.\r\n    if (viewportToolData) {\r\n      const currentCamera = viewport.getCamera()\r\n      const oldCameraPosition = viewportToolData.metadata.cameraPosition\r\n      const deltaCameraPosition: Point3 = [0, 0, 0]\r\n      vtkMath.subtract(\r\n        currentCamera.position,\r\n        oldCameraPosition,\r\n        deltaCameraPosition\r\n      )\r\n\r\n      const oldCameraFocalPoint = viewportToolData.metadata.cameraFocalPoint\r\n      const deltaCameraFocalPoint: Point3 = [0, 0, 0]\r\n      vtkMath.subtract(\r\n        currentCamera.focalPoint,\r\n        oldCameraFocalPoint,\r\n        deltaCameraFocalPoint\r\n      )\r\n\r\n      // updated cached \"previous\" camera position and focal point\r\n      viewportToolData.metadata.cameraPosition = [...currentCamera.position]\r\n      viewportToolData.metadata.cameraFocalPoint = [...currentCamera.focalPoint]\r\n\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        viewport.uid\r\n      )\r\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n        viewport.uid\r\n      )\r\n      if (\r\n        !isEqual(currentCamera.position, oldCameraPosition, 1e-3) &&\r\n        viewportControllable &&\r\n        viewportDraggableRotatable\r\n      ) {\r\n        // Is camera Modified a TRANSLATION or ROTATION?\r\n        let IsTranslation = true\r\n\r\n        // NOTE: it is a translation if the the focal point and camera position shifts are the same\r\n        if (!isEqual(deltaCameraPosition, deltaCameraFocalPoint, 1e-3)) {\r\n          IsTranslation = false\r\n        }\r\n\r\n        // TRANSLATION\r\n        // NOTE1: if it's a panning don't update the crosshair center\r\n        // NOTE2: rotation handles are updates in renderTool\r\n        // panning check is:\r\n        // -- deltaCameraPosition dot viewPlaneNormal > 1e-2\r\n        if (\r\n          IsTranslation &&\r\n          Math.abs(\r\n            vtkMath.dot(deltaCameraPosition, currentCamera.viewPlaneNormal)\r\n          ) > 1e-2\r\n        ) {\r\n          // update linked view in the same scene that have the same camera\r\n          // this goes here, because the parent viewport translation may happen in another tool\r\n          const otherLinkedViewportsToolDataWithSameCameraDirection = this._filterLinkedViewportWithSameOrientationAndScene(\r\n            enabledElement,\r\n            toolState\r\n          )\r\n\r\n          for (\r\n            let i = 0;\r\n            i < otherLinkedViewportsToolDataWithSameCameraDirection.length;\r\n            ++i\r\n          ) {\r\n            const toolData =\r\n              otherLinkedViewportsToolDataWithSameCameraDirection[i]\r\n            const { data } = toolData\r\n            const scene = renderingEngine.getScene(data.sceneUID)\r\n            const otherViewport = scene.getViewport(data.viewportUID)\r\n            const camera = otherViewport.getCamera()\r\n\r\n            const newFocalPoint = [0, 0, 0]\r\n            const newPosition = [0, 0, 0]\r\n\r\n            vtkMath.add(camera.focalPoint, deltaCameraPosition, newFocalPoint)\r\n            vtkMath.add(camera.position, deltaCameraPosition, newPosition)\r\n\r\n            // updated cached \"previous\" camera position and focal point\r\n            toolData.metadata.cameraPosition = [...currentCamera.position]\r\n            toolData.metadata.cameraFocalPoint = [...currentCamera.focalPoint]\r\n\r\n            // update camera\r\n            otherViewport.setCamera({\r\n              focalPoint: <Point3>newFocalPoint,\r\n              position: <Point3>newPosition,\r\n            })\r\n          }\r\n\r\n          // update center of the crosshair\r\n          this.toolCenter[0] += deltaCameraPosition[0]\r\n          this.toolCenter[1] += deltaCameraPosition[1]\r\n          this.toolCenter[2] += deltaCameraPosition[2]\r\n        }\r\n      }\r\n    }\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  mouseMoveCallback = (\r\n    evt,\r\n    filteredToolState: ToolSpecificToolState\r\n  ): boolean => {\r\n    const { element, currentPoints } = evt.detail\r\n    const canvasCoords = currentPoints.canvas\r\n    let imageNeedsUpdate = false\r\n\r\n    for (let i = 0; i < filteredToolState.length; i++) {\r\n      const toolData = filteredToolState[i]\r\n      const { data } = toolData\r\n\r\n      if (!data.handles) {\r\n        continue\r\n      }\r\n\r\n      const previousActiveOperation = data.handles.activeOperation\r\n      const previousActiveViewportUIDs =\r\n        data.activeViewportUIDs && data.activeViewportUIDs.length > 0\r\n          ? [...data.activeViewportUIDs]\r\n          : []\r\n\r\n      // This init are necessary, because when we move the mouse they are not cleaned by _mouseUpCallback\r\n      data.activeViewportUIDs = []\r\n      data.handles.activeOperation = null\r\n\r\n      const handleNearImagePoint = this.getHandleNearImagePoint(\r\n        element,\r\n        toolData,\r\n        canvasCoords,\r\n        6\r\n      )\r\n\r\n      let near = false\r\n      if (handleNearImagePoint) {\r\n        near = true\r\n      } else {\r\n        near = this._pointNearTool(element, toolData, canvasCoords, 6)\r\n      }\r\n\r\n      const nearToolAndNotMarkedActive = near && !data.active\r\n      const notNearToolAndMarkedActive = !near && data.active\r\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\r\n        data.active = !data.active\r\n        imageNeedsUpdate = true\r\n      } else if (\r\n        data.handles.activeOperation !== previousActiveOperation ||\r\n        !this._areViewportUIDArraysEqual(\r\n          data.activeViewportUIDs,\r\n          previousActiveViewportUIDs\r\n        )\r\n      ) {\r\n        imageNeedsUpdate = true\r\n      }\r\n    }\r\n\r\n    return imageNeedsUpdate\r\n  }\r\n\r\n  filterInteractableToolStateForElement(element, toolState) {\r\n    if (!toolState || !toolState.length) {\r\n      return []\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewportUID } = enabledElement\r\n\r\n    const viewportUIDSpecificCrosshairs = toolState.filter(\r\n      (toolData) => toolData.data.viewportUID === viewportUID\r\n    )\r\n\r\n    return viewportUIDSpecificCrosshairs\r\n  }\r\n\r\n  renderToolData(evt: CustomEvent, svgDrawingHelper: any): void {\r\n    const { renderingEngineUID, sceneUID, viewportUID } = evt.detail\r\n    const toolGroups = ToolGroupManager.getToolGroups(\r\n      renderingEngineUID,\r\n      sceneUID,\r\n      viewportUID\r\n    )\r\n\r\n    // This iterates all instances of Crosshairs across all toolGroups\r\n    // And updates `isCrosshairsActive` if ANY are active?\r\n    let isCrosshairsActive = false\r\n    for (let i = 0; i < toolGroups.length; ++i) {\r\n      const toolGroup = toolGroups[i]\r\n      const tool = toolGroup.tools['Crosshairs']\r\n\r\n      if (tool.mode === 'Active') {\r\n        isCrosshairsActive = true\r\n        break\r\n      }\r\n    }\r\n\r\n    // So if none are active, we have nothing to render, and we peace out\r\n    if (!isCrosshairsActive) {\r\n      return\r\n    }\r\n\r\n    const eventData = evt.detail\r\n    const { canvas: element } = eventData\r\n    const toolState = getToolState(svgDrawingHelper.enabledElement, this.name)\r\n    const { renderingEngine, viewport } = svgDrawingHelper.enabledElement\r\n    const camera = viewport.getCamera()\r\n\r\n    const filteredToolState = this.filterInteractableToolStateForElement(\r\n      element,\r\n      toolState\r\n    )\r\n\r\n    // viewport ToolData\r\n    const viewportToolData = filteredToolState[0]\r\n    if (!toolState || !viewportToolData || !viewportToolData.data) {\r\n      // No toolstate yet, and didn't just create it as we likely don't have a FrameOfReference/any data loaded yet.\r\n      return\r\n    }\r\n\r\n    const annotationUID = viewportToolData.metadata.toolUID\r\n\r\n    // Get cameras/canvases for each of these.\r\n    // -- Get two world positions for this canvas in this line (e.g. the diagonal)\r\n    // -- Convert these world positions to this canvas.\r\n    // -- Extend/confine this line to fit in this canvas.\r\n    // -- Render this line.\r\n\r\n    const { sWidth, sHeight } = viewport\r\n    const canvasDiagonalLength = Math.sqrt(sWidth * sWidth + sHeight * sHeight)\r\n\r\n    const data = viewportToolData.data\r\n    const crosshairCenterCanvas = viewport.worldToCanvas(this.toolCenter)\r\n\r\n    const otherViewportToolData = this._filterUniqueViewportOrientations(\r\n      svgDrawingHelper.enabledElement,\r\n      toolState\r\n    )\r\n\r\n    const referenceLines = []\r\n\r\n    otherViewportToolData.forEach((toolData) => {\r\n      const { data } = toolData\r\n\r\n      const scene = renderingEngine.getScene(data.sceneUID)\r\n      const otherViewport = scene.getViewport(data.viewportUID)\r\n      const otherCamera = otherViewport.getCamera()\r\n\r\n      const otherViewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n        otherViewport.uid\r\n      )\r\n      const otherViewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(\r\n        otherViewport.uid\r\n      )\r\n\r\n      // get coordinates for the reference line\r\n      const { sWidth, sHeight } = otherViewport\r\n      const otherCanvasDiagonalLength = Math.sqrt(\r\n        sWidth * sWidth + sHeight * sHeight\r\n      )\r\n      const otherCanvasCenter = [sWidth * 0.5, sHeight * 0.5]\r\n      const otherViewportCenterWorld = otherViewport.canvasToWorld(\r\n        otherCanvasCenter\r\n      )\r\n\r\n      const direction = [0, 0, 0]\r\n      vtkMath.cross(\r\n        camera.viewPlaneNormal,\r\n        otherCamera.viewPlaneNormal,\r\n        direction\r\n      )\r\n      vtkMath.normalize(direction)\r\n      vtkMath.multiplyScalar(direction, otherCanvasDiagonalLength)\r\n\r\n      const pointWorld0 = [0, 0, 0]\r\n      vtkMath.add(otherViewportCenterWorld, direction, pointWorld0)\r\n\r\n      const pointWorld1 = [0, 0, 0]\r\n      vtkMath.subtract(otherViewportCenterWorld, direction, pointWorld1)\r\n\r\n      // get canvas information for points and lines (canvas box, canvas horizontal distances)\r\n      const pointCanvas0 = viewport.worldToCanvas(pointWorld0)\r\n\r\n      const { focalPoint } = camera\r\n      const focalPointCanvas = viewport.worldToCanvas(focalPoint)\r\n      const canvasBox = [\r\n        focalPointCanvas - sWidth * 0.5,\r\n        focalPointCanvas + sWidth * 0.5,\r\n        focalPointCanvas - sHeight * 0.5,\r\n        focalPointCanvas + sHeight * 0.5,\r\n      ]\r\n\r\n      const otherViewportCenterCanvas = viewport.worldToCanvas(\r\n        otherViewportCenterWorld\r\n      )\r\n\r\n      const canvasUnitVectorFromCenter = vec2.create()\r\n      vec2.subtract(\r\n        canvasUnitVectorFromCenter,\r\n        pointCanvas0,\r\n        otherViewportCenterCanvas\r\n      )\r\n      vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter)\r\n\r\n      const canvasVectorFromCenterLong = vec2.create()\r\n      vec2.scale(\r\n        canvasVectorFromCenterLong,\r\n        canvasUnitVectorFromCenter,\r\n        canvasDiagonalLength * 100\r\n      )\r\n      const canvasVectorFromCenterMid = vec2.create()\r\n      vec2.scale(\r\n        canvasVectorFromCenterMid,\r\n        canvasUnitVectorFromCenter,\r\n        canvasDiagonalLength * 0.25\r\n      )\r\n      const canvasVectorFromCenterShort = vec2.create()\r\n      vec2.scale(\r\n        canvasVectorFromCenterShort,\r\n        canvasUnitVectorFromCenter,\r\n        canvasDiagonalLength * 0.15\r\n      )\r\n      const canvasVectorFromCenterStart = vec2.create()\r\n      vec2.scale(\r\n        canvasVectorFromCenterStart,\r\n        canvasUnitVectorFromCenter,\r\n        canvasDiagonalLength * 0.05\r\n      )\r\n\r\n      // points for reference lines\r\n      const refLinePointOne = vec2.create()\r\n      const refLinePointTwo = vec2.create()\r\n      const refLinePointThree = vec2.create()\r\n      const refLinePointFour = vec2.create()\r\n\r\n      let refLinesCenter = vec2.clone(crosshairCenterCanvas)\r\n      if (!otherViewportDraggableRotatable || !otherViewportControllable) {\r\n        refLinesCenter = vec2.clone(otherViewportCenterCanvas)\r\n      }\r\n\r\n      vec2.add(refLinePointOne, refLinesCenter, canvasVectorFromCenterStart)\r\n      vec2.add(refLinePointTwo, refLinesCenter, canvasVectorFromCenterLong)\r\n      vec2.subtract(\r\n        refLinePointThree,\r\n        refLinesCenter,\r\n        canvasVectorFromCenterStart\r\n      )\r\n      vec2.subtract(\r\n        refLinePointFour,\r\n        refLinesCenter,\r\n        canvasVectorFromCenterLong\r\n      )\r\n\r\n      liangBarksyClip(refLinePointOne, refLinePointTwo, canvasBox)\r\n      liangBarksyClip(refLinePointThree, refLinePointFour, canvasBox)\r\n\r\n      // points for rotation handles\r\n      const rotHandleOne = vec2.create()\r\n      vec2.subtract(\r\n        rotHandleOne,\r\n        crosshairCenterCanvas,\r\n        canvasVectorFromCenterMid\r\n      )\r\n\r\n      const rotHandleTwo = vec2.create()\r\n      vec2.add(rotHandleTwo, crosshairCenterCanvas, canvasVectorFromCenterMid)\r\n\r\n      // get world information for lines and points (vertical world distances)\r\n      let stHanlesCenterCanvas = vec2.clone(crosshairCenterCanvas)\r\n      if (\r\n        !otherViewportDraggableRotatable &&\r\n        otherViewportSlabThicknessControlsOn\r\n      ) {\r\n        stHanlesCenterCanvas = vec2.clone(otherViewportCenterCanvas)\r\n      }\r\n\r\n      let stHanlesCenterWorld = [...this.toolCenter]\r\n      if (\r\n        !otherViewportDraggableRotatable &&\r\n        otherViewportSlabThicknessControlsOn\r\n      ) {\r\n        stHanlesCenterWorld = [...otherViewportCenterWorld]\r\n      }\r\n\r\n      const worldUnitVectorFromCenter: Point3 = [0, 0, 0]\r\n      vtkMath.subtract(pointWorld0, pointWorld1, worldUnitVectorFromCenter)\r\n      vtkMath.normalize(worldUnitVectorFromCenter)\r\n\r\n      const { viewPlaneNormal } = camera\r\n      // @ts-ignore\r\n      const { matrix } = vtkMatrixBuilder\r\n        .buildFromDegree()\r\n        .rotate(90, viewPlaneNormal)\r\n\r\n      const worldUnitOrthoVectorFromCenter: Point3 = [0, 0, 0]\r\n      vec3.transformMat4(\r\n        worldUnitOrthoVectorFromCenter,\r\n        worldUnitVectorFromCenter,\r\n        matrix\r\n      )\r\n\r\n      const slabThicknessValue = otherViewport.getSlabThickness()\r\n      const worldOrthoVectorFromCenter = [...worldUnitOrthoVectorFromCenter]\r\n      vtkMath.multiplyScalar(worldOrthoVectorFromCenter, slabThicknessValue)\r\n\r\n      const worldVerticalRefPoint: Point3 = [0, 0, 0]\r\n      vtkMath.add(\r\n        stHanlesCenterWorld,\r\n        worldOrthoVectorFromCenter,\r\n        worldVerticalRefPoint\r\n      )\r\n\r\n      // convert vertical world distances in canvas coordinates\r\n      const canvasVerticalRefPoint = viewport.worldToCanvas(\r\n        worldVerticalRefPoint\r\n      )\r\n\r\n      // points for slab thickness lines\r\n      const canvasOrthoVectorFromCenter = vec2.create()\r\n      vec2.subtract(\r\n        canvasOrthoVectorFromCenter,\r\n        stHanlesCenterCanvas,\r\n        canvasVerticalRefPoint\r\n      )\r\n\r\n      const stLinePointOne = vec2.create()\r\n      vec2.subtract(\r\n        stLinePointOne,\r\n        stHanlesCenterCanvas,\r\n        canvasVectorFromCenterLong\r\n      )\r\n      vec2.add(stLinePointOne, stLinePointOne, canvasOrthoVectorFromCenter)\r\n\r\n      const stLinePointTwo = vec2.create()\r\n      vec2.add(stLinePointTwo, stHanlesCenterCanvas, canvasVectorFromCenterLong)\r\n      vec2.add(stLinePointTwo, stLinePointTwo, canvasOrthoVectorFromCenter)\r\n\r\n      liangBarksyClip(stLinePointOne, stLinePointTwo, canvasBox)\r\n\r\n      const stLinePointThree = vec2.create()\r\n      vec2.add(\r\n        stLinePointThree,\r\n        stHanlesCenterCanvas,\r\n        canvasVectorFromCenterLong\r\n      )\r\n      vec2.subtract(\r\n        stLinePointThree,\r\n        stLinePointThree,\r\n        canvasOrthoVectorFromCenter\r\n      )\r\n\r\n      const stLinePointFour = vec2.create()\r\n      vec2.subtract(\r\n        stLinePointFour,\r\n        stHanlesCenterCanvas,\r\n        canvasVectorFromCenterLong\r\n      )\r\n      vec2.subtract(\r\n        stLinePointFour,\r\n        stLinePointFour,\r\n        canvasOrthoVectorFromCenter\r\n      )\r\n\r\n      liangBarksyClip(stLinePointThree, stLinePointFour, canvasBox)\r\n\r\n      // points for slab thickness handles\r\n      const stHandleOne = vec2.create()\r\n      const stHandleTwo = vec2.create()\r\n      const stHandleThree = vec2.create()\r\n      const stHandleFour = vec2.create()\r\n\r\n      vec2.subtract(\r\n        stHandleOne,\r\n        stHanlesCenterCanvas,\r\n        canvasVectorFromCenterShort\r\n      )\r\n      vec2.add(stHandleOne, stHandleOne, canvasOrthoVectorFromCenter)\r\n      vec2.add(stHandleTwo, stHanlesCenterCanvas, canvasVectorFromCenterShort)\r\n      vec2.add(stHandleTwo, stHandleTwo, canvasOrthoVectorFromCenter)\r\n      vec2.subtract(\r\n        stHandleThree,\r\n        stHanlesCenterCanvas,\r\n        canvasVectorFromCenterShort\r\n      )\r\n      vec2.subtract(stHandleThree, stHandleThree, canvasOrthoVectorFromCenter)\r\n      vec2.add(stHandleFour, stHanlesCenterCanvas, canvasVectorFromCenterShort)\r\n      vec2.subtract(stHandleFour, stHandleFour, canvasOrthoVectorFromCenter)\r\n\r\n      referenceLines.push([\r\n        otherViewport,\r\n        refLinePointOne,\r\n        refLinePointTwo,\r\n        refLinePointThree,\r\n        refLinePointFour,\r\n        stLinePointOne,\r\n        stLinePointTwo,\r\n        stLinePointThree,\r\n        stLinePointFour,\r\n        rotHandleOne,\r\n        rotHandleTwo,\r\n        stHandleOne,\r\n        stHandleTwo,\r\n        stHandleThree,\r\n        stHandleFour,\r\n      ])\r\n    })\r\n\r\n    const newRtpoints = []\r\n    const newStpoints = []\r\n    const viewportColor = this._getReferenceLineColor(viewport.uid)\r\n    const color =\r\n      viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)'\r\n\r\n    referenceLines.forEach((line, lineIndex) => {\r\n      // get color for the reference line\r\n      const otherViewport = line[0]\r\n      const viewportColor = this._getReferenceLineColor(otherViewport.uid)\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n        otherViewport.uid\r\n      )\r\n      const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(\r\n        otherViewport.uid\r\n      )\r\n      const selectedViewportUID = data.activeViewportUIDs.find(\r\n        (uid) => uid === otherViewport.uid\r\n      )\r\n\r\n      let color =\r\n        viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)'\r\n      let lineWidth = 1\r\n      const lineActive =\r\n        data.handles.activeOperation !== null &&\r\n        data.handles.activeOperation === OPERATION.DRAG &&\r\n        selectedViewportUID\r\n\r\n      if (lineActive) {\r\n        lineWidth = 2.5\r\n      }\r\n\r\n      let lineUID = `${lineIndex}`\r\n      if (viewportControllable && viewportDraggableRotatable) {\r\n        lineUID = `${lineIndex}One`\r\n        drawLineSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          lineUID,\r\n          line[1],\r\n          line[2],\r\n          {\r\n            color,\r\n            lineWidth,\r\n          }\r\n        )\r\n\r\n        lineUID = `${lineIndex}Two`\r\n        drawLineSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          lineUID,\r\n          line[3],\r\n          line[4],\r\n          {\r\n            color,\r\n            lineWidth,\r\n          }\r\n        )\r\n      } else {\r\n        drawLineSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          lineUID,\r\n          line[2],\r\n          line[4],\r\n          {\r\n            color,\r\n            lineWidth,\r\n          }\r\n        )\r\n      }\r\n\r\n      if (viewportControllable) {\r\n        color =\r\n          viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)'\r\n\r\n        const rotHandlesActive =\r\n          data.handles.activeOperation === OPERATION.ROTATE\r\n        const rotationHandles = [line[9], line[10]]\r\n\r\n        const rotHandleWorldOne = [\r\n          viewport.canvasToWorld(line[9]),\r\n          otherViewport,\r\n          line[1],\r\n          line[2],\r\n        ]\r\n        const rotHandleWorldTwo = [\r\n          viewport.canvasToWorld(line[10]),\r\n          otherViewport,\r\n          line[3],\r\n          line[4],\r\n        ]\r\n        newRtpoints.push(rotHandleWorldOne, rotHandleWorldTwo)\r\n\r\n        const slabThicknessHandlesActive =\r\n          data.handles.activeOperation === OPERATION.SLAB\r\n        const slabThicknessHandles = [line[11], line[12], line[13], line[14]]\r\n\r\n        const slabThicknessHandleWorldOne = [\r\n          viewport.canvasToWorld(line[11]),\r\n          otherViewport,\r\n          line[5],\r\n          line[6],\r\n        ]\r\n        const slabThicknessHandleWorldTwo = [\r\n          viewport.canvasToWorld(line[12]),\r\n          otherViewport,\r\n          line[5],\r\n          line[6],\r\n        ]\r\n        const slabThicknessHandleWorldThree = [\r\n          viewport.canvasToWorld(line[13]),\r\n          otherViewport,\r\n          line[7],\r\n          line[8],\r\n        ]\r\n        const slabThicknessHandleWorldFour = [\r\n          viewport.canvasToWorld(line[14]),\r\n          otherViewport,\r\n          line[7],\r\n          line[8],\r\n        ]\r\n        newStpoints.push(\r\n          slabThicknessHandleWorldOne,\r\n          slabThicknessHandleWorldTwo,\r\n          slabThicknessHandleWorldThree,\r\n          slabThicknessHandleWorldFour\r\n        )\r\n\r\n        if (\r\n          lineActive &&\r\n          !rotHandlesActive &&\r\n          !slabThicknessHandlesActive &&\r\n          viewportDraggableRotatable &&\r\n          viewportSlabThicknessControlsOn\r\n        ) {\r\n          // draw all handles inactive (rotation and slab thickness)\r\n          let handleUID = `${lineIndex}One`\r\n          drawHandlesSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            handleUID,\r\n            rotationHandles,\r\n            {\r\n              color,\r\n              handleRadius: 3,\r\n              type: 'circle',\r\n            }\r\n          )\r\n          handleUID = `${lineIndex}Two`\r\n          drawHandlesSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            handleUID,\r\n            slabThicknessHandles,\r\n            {\r\n              color,\r\n              handleRadius: 3,\r\n              type: 'rect',\r\n            }\r\n          )\r\n        } else if (\r\n          lineActive &&\r\n          !rotHandlesActive &&\r\n          !slabThicknessHandlesActive &&\r\n          viewportDraggableRotatable\r\n        ) {\r\n          const handleUID = `${lineIndex}`\r\n          // draw rotation handles inactive\r\n          drawHandlesSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            handleUID,\r\n            rotationHandles,\r\n            {\r\n              color,\r\n              handleRadius: 3,\r\n              type: 'circle',\r\n            }\r\n          )\r\n        } else if (\r\n          selectedViewportUID &&\r\n          !rotHandlesActive &&\r\n          !slabThicknessHandlesActive &&\r\n          viewportSlabThicknessControlsOn\r\n        ) {\r\n          const handleUID = `${lineIndex}`\r\n          // draw slab thickness handles inactive\r\n          drawHandlesSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            handleUID,\r\n            slabThicknessHandles,\r\n            {\r\n              color,\r\n              handleRadius: 3,\r\n              type: 'rect',\r\n            }\r\n          )\r\n        } else if (rotHandlesActive && viewportDraggableRotatable) {\r\n          const handleUID = `${lineIndex}`\r\n          // draw all rotation handles as active\r\n          drawHandlesSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            handleUID,\r\n            rotationHandles,\r\n            {\r\n              color,\r\n              handleRadius: 2,\r\n              fill: color,\r\n              type: 'circle',\r\n            }\r\n          )\r\n        } else if (\r\n          slabThicknessHandlesActive &&\r\n          selectedViewportUID &&\r\n          viewportSlabThicknessControlsOn\r\n        ) {\r\n          // draw only the slab thickness handles for the active viewport as active\r\n          drawHandlesSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            lineUID,\r\n            slabThicknessHandles,\r\n            {\r\n              color,\r\n              handleRadius: 2,\r\n              fill: color,\r\n              type: 'rect',\r\n            }\r\n          )\r\n        }\r\n        const slabThicknessValue = otherViewport.getSlabThickness()\r\n        if (slabThicknessValue > 0.5 && viewportSlabThicknessControlsOn) {\r\n          // draw slab thickness reference lines\r\n          lineUID = `${lineIndex}STOne`\r\n          drawLineSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            lineUID,\r\n            line[5],\r\n            line[6],\r\n            {\r\n              color,\r\n              width: 1,\r\n              lineDash: [2, 3],\r\n            }\r\n          )\r\n\r\n          lineUID = `${lineIndex}STTwo`\r\n          drawLineSvg(\r\n            svgDrawingHelper,\r\n            this.name,\r\n            annotationUID,\r\n            lineUID,\r\n            line[7],\r\n            line[8],\r\n            {\r\n              color,\r\n              width: line,\r\n              lineDash: [2, 3],\r\n            }\r\n          )\r\n        }\r\n      }\r\n    })\r\n\r\n    // Save new handles points in toolData\r\n    data.handles.rotationPoints = newRtpoints\r\n    data.handles.slabThicknessPoints = newStpoints\r\n\r\n    // render a circle to pin point the viewport color\r\n    const referenceColorCoordinates = [sWidth * 0.95, sHeight * 0.05] as Point2\r\n    const circleRadius = canvasDiagonalLength * 0.01\r\n\r\n    const circleUID = '0'\r\n    drawCircleSvg(\r\n      svgDrawingHelper,\r\n      this.name,\r\n      annotationUID,\r\n      circleUID,\r\n      referenceColorCoordinates,\r\n      circleRadius,\r\n      { color, fill: color }\r\n    )\r\n  }\r\n\r\n  _areViewportUIDArraysEqual = (viewportUIDArrayOne, viewportUIDArrayTwo) => {\r\n    if (viewportUIDArrayOne.length !== viewportUIDArrayTwo.length) {\r\n      return false\r\n    }\r\n\r\n    viewportUIDArrayOne.forEach((uid) => {\r\n      let itemFound = false\r\n      for (let i = 0; i < viewportUIDArrayTwo.length; ++i) {\r\n        if (uid === viewportUIDArrayTwo[i]) {\r\n          itemFound = true\r\n          break\r\n        }\r\n      }\r\n      if (itemFound === false) {\r\n        return false\r\n      }\r\n    })\r\n\r\n    return true\r\n  }\r\n\r\n  _filterViewportOrientations = (enabledElement, toolState) => {\r\n    const { viewportUID, renderingEngine, viewport } = enabledElement\r\n\r\n    const otherViewportToolData = toolState.filter(\r\n      (toolData) => toolData.data.viewportUID !== viewportUID\r\n    )\r\n\r\n    if (!otherViewportToolData || !otherViewportToolData.length) {\r\n      return []\r\n    }\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewPlaneNormal, position } = camera\r\n\r\n    const viewportsWithDifferentCameras = otherViewportToolData.filter(\r\n      (toolData) => {\r\n        const { sceneUID, viewportUID } = toolData.data\r\n        const scene = renderingEngine.getScene(sceneUID)\r\n        const targetViewport = scene.getViewport(viewportUID)\r\n        const cameraOfTarget = targetViewport.getCamera()\r\n\r\n        return !(\r\n          isEqual(cameraOfTarget.viewPlaneNormal, viewPlaneNormal, 1e-2) &&\r\n          isEqual(cameraOfTarget.position, position, 1)\r\n        )\r\n      }\r\n    )\r\n\r\n    return viewportsWithDifferentCameras\r\n  }\r\n\r\n  _filterLinkedViewportWithSameOrientationAndScene = (\r\n    enabledElement,\r\n    toolState\r\n  ) => {\r\n    const { scene, renderingEngine, viewport } = enabledElement\r\n    const viewportControllable = this._getReferenceLineControllable(\r\n      viewport.uid\r\n    )\r\n\r\n    const otherLinkedViewportToolDataFromSameScene = toolState.filter(\r\n      (toolData) => {\r\n        const { data } = toolData\r\n        const otherScene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = otherScene.getViewport(data.viewportUID)\r\n        const otherViewportControllable = this._getReferenceLineControllable(\r\n          otherViewport.uid\r\n        )\r\n\r\n        return (\r\n          viewport !== otherViewport &&\r\n          scene === otherScene &&\r\n          otherViewportControllable === true &&\r\n          viewportControllable === true\r\n        )\r\n      }\r\n    )\r\n\r\n    if (\r\n      !otherLinkedViewportToolDataFromSameScene ||\r\n      !otherLinkedViewportToolDataFromSameScene.length\r\n    ) {\r\n      return []\r\n    }\r\n\r\n    const camera = viewport.getCamera()\r\n    const viewPlaneNormal = camera.viewPlaneNormal\r\n    vtkMath.normalize(viewPlaneNormal)\r\n\r\n    const otherLinkedViewportsToolDataWithSameCameraDirection = otherLinkedViewportToolDataFromSameScene.filter(\r\n      (toolData) => {\r\n        const { sceneUID, viewportUID } = toolData.data\r\n        const scene = renderingEngine.getScene(sceneUID)\r\n        const otherViewport = scene.getViewport(viewportUID)\r\n        const otherCamera = otherViewport.getCamera()\r\n        const otherViewPlaneNormal = otherCamera.viewPlaneNormal\r\n        vtkMath.normalize(otherViewPlaneNormal)\r\n\r\n        return (\r\n          isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) &&\r\n          isEqual(camera.viewUp, otherCamera.viewUp, 1e-2)\r\n        )\r\n      }\r\n    )\r\n\r\n    return otherLinkedViewportsToolDataWithSameCameraDirection\r\n  }\r\n\r\n  _filterUniqueViewportOrientations = (enabledElement, toolState) => {\r\n    const { renderingEngine, scene, viewport } = enabledElement\r\n    const camera = viewport.getCamera()\r\n    const viewPlaneNormal = camera.viewPlaneNormal\r\n    vtkMath.normalize(viewPlaneNormal)\r\n\r\n    const otherLinkedViewportToolDataFromSameScene = toolState.filter(\r\n      (toolData) => {\r\n        const { data } = toolData\r\n        const otherScene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = otherScene.getViewport(data.viewportUID)\r\n        const otherViewportControllable = this._getReferenceLineControllable(\r\n          otherViewport.uid\r\n        )\r\n\r\n        return (\r\n          viewport !== otherViewport &&\r\n          scene === otherScene &&\r\n          otherViewportControllable === true\r\n        )\r\n      }\r\n    )\r\n\r\n    const otherViewportsToolDataWithUniqueCameras = []\r\n    // Iterate first on other viewport from the same scene linked\r\n    for (let i = 0; i < otherLinkedViewportToolDataFromSameScene.length; ++i) {\r\n      const toolData = otherLinkedViewportToolDataFromSameScene[i]\r\n      const { sceneUID, viewportUID } = toolData.data\r\n      const scene = renderingEngine.getScene(sceneUID)\r\n      const otherViewport = scene.getViewport(viewportUID)\r\n      const otherCamera = otherViewport.getCamera()\r\n      const otherViewPlaneNormal = otherCamera.viewPlaneNormal\r\n      vtkMath.normalize(otherViewPlaneNormal)\r\n\r\n      if (\r\n        isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\r\n        isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      let cameraFound = false\r\n      for (\r\n        let jj = 0;\r\n        jj < otherViewportsToolDataWithUniqueCameras.length;\r\n        ++jj\r\n      ) {\r\n        const stockedToolData = otherViewportsToolDataWithUniqueCameras[jj]\r\n        const { sceneUID, viewportUID } = stockedToolData.data\r\n        const scene = renderingEngine.getScene(sceneUID)\r\n        const stockedViewport = scene.getViewport(viewportUID)\r\n        const cameraOfStocked = stockedViewport.getCamera()\r\n\r\n        if (\r\n          isEqual(\r\n            cameraOfStocked.viewPlaneNormal,\r\n            otherCamera.viewPlaneNormal,\r\n            1e-2\r\n          ) &&\r\n          isEqual(cameraOfStocked.position, otherCamera.position, 1)\r\n        ) {\r\n          cameraFound = true\r\n        }\r\n      }\r\n\r\n      if (!cameraFound) {\r\n        otherViewportsToolDataWithUniqueCameras.push(toolData)\r\n      }\r\n    }\r\n\r\n    const otherNonLinkedViewportToolDataFromSameScene = toolState.filter(\r\n      (toolData) => {\r\n        const { data } = toolData\r\n        const otherScene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = otherScene.getViewport(data.viewportUID)\r\n        const otherViewportControllable = this._getReferenceLineControllable(\r\n          otherViewport.uid\r\n        )\r\n\r\n        return (\r\n          viewport !== otherViewport &&\r\n          scene === otherScene &&\r\n          otherViewportControllable !== true\r\n        )\r\n      }\r\n    )\r\n\r\n    // Iterate second on other viewport from the same scene non linked\r\n    for (\r\n      let i = 0;\r\n      i < otherNonLinkedViewportToolDataFromSameScene.length;\r\n      ++i\r\n    ) {\r\n      const toolData = otherNonLinkedViewportToolDataFromSameScene[i]\r\n      const { sceneUID, viewportUID } = toolData.data\r\n      const scene = renderingEngine.getScene(sceneUID)\r\n      const otherViewport = scene.getViewport(viewportUID)\r\n\r\n      const otherCamera = otherViewport.getCamera()\r\n      const otherViewPlaneNormal = otherCamera.viewPlaneNormal\r\n      vtkMath.normalize(otherViewPlaneNormal)\r\n\r\n      if (\r\n        isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\r\n        isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      let cameraFound = false\r\n      for (\r\n        let jj = 0;\r\n        jj < otherViewportsToolDataWithUniqueCameras.length;\r\n        ++jj\r\n      ) {\r\n        const stockedToolData = otherViewportsToolDataWithUniqueCameras[jj]\r\n        const { sceneUID, viewportUID } = stockedToolData.data\r\n        const scene = renderingEngine.getScene(sceneUID)\r\n        const stockedViewport = scene.getViewport(viewportUID)\r\n        const cameraOfStocked = stockedViewport.getCamera()\r\n\r\n        if (\r\n          isEqual(\r\n            cameraOfStocked.viewPlaneNormal,\r\n            otherCamera.viewPlaneNormal,\r\n            1e-2\r\n          ) &&\r\n          isEqual(cameraOfStocked.position, otherCamera.position, 1)\r\n        ) {\r\n          cameraFound = true\r\n        }\r\n      }\r\n\r\n      if (!cameraFound) {\r\n        otherViewportsToolDataWithUniqueCameras.push(toolData)\r\n      }\r\n    }\r\n\r\n    // Iterate on all the viewport\r\n    const otherViewportToolData = this._filterViewportOrientations(\r\n      enabledElement,\r\n      toolState\r\n    )\r\n\r\n    for (let i = 0; i < otherViewportToolData.length; ++i) {\r\n      const toolData = otherViewportToolData[i]\r\n      if (\r\n        otherViewportsToolDataWithUniqueCameras.find(\r\n          (element) => element === toolData\r\n        ) === true\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      const { sceneUID, viewportUID } = toolData.data\r\n      const scene = renderingEngine.getScene(sceneUID)\r\n      const otherViewport = scene.getViewport(viewportUID)\r\n      const otherCamera = otherViewport.getCamera()\r\n      const otherViewPlaneNormal = otherCamera.viewPlaneNormal\r\n      vtkMath.normalize(otherViewPlaneNormal)\r\n\r\n      if (\r\n        isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\r\n        isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)\r\n      ) {\r\n        continue\r\n      }\r\n\r\n      let cameraFound = false\r\n      for (\r\n        let jj = 0;\r\n        jj < otherViewportsToolDataWithUniqueCameras.length;\r\n        ++jj\r\n      ) {\r\n        const stockedToolData = otherViewportsToolDataWithUniqueCameras[jj]\r\n        const { sceneUID, viewportUID } = stockedToolData.data\r\n        const scene = renderingEngine.getScene(sceneUID)\r\n        const stockedViewport = scene.getViewport(viewportUID)\r\n        const cameraOfStocked = stockedViewport.getCamera()\r\n\r\n        if (\r\n          isEqual(\r\n            cameraOfStocked.viewPlaneNormal,\r\n            otherCamera.viewPlaneNormal,\r\n            1e-2\r\n          ) &&\r\n          isEqual(cameraOfStocked.position, otherCamera.position, 1)\r\n        ) {\r\n          cameraFound = true\r\n        }\r\n      }\r\n\r\n      if (!cameraFound) {\r\n        otherViewportsToolDataWithUniqueCameras.push(toolData)\r\n      }\r\n    }\r\n\r\n    return otherViewportsToolDataWithUniqueCameras\r\n  }\r\n\r\n  _initCrosshairs = (evt, toolState) => {\r\n    const eventData = evt.detail\r\n    const { canvas: element } = eventData\r\n    const enabledElement = getEnabledElement(element)\r\n    const {\r\n      viewport,\r\n      FrameOfReferenceUID,\r\n      viewportUID,\r\n      sceneUID,\r\n    } = enabledElement\r\n    const { sHeight, sWidth, canvasToWorld } = viewport\r\n    const centerCanvas: Point2 = [sWidth * 0.5, sHeight * 0.5]\r\n\r\n    // Calculate the crosshair center\r\n    // NOTE: it is assumed that all the active/linked viewports share the same crosshair center.\r\n    // This because the rotation operations rotates also all the other active/intersecting reference lines of the same angle\r\n    this.toolCenter = canvasToWorld(centerCanvas)\r\n\r\n    const camera = viewport.getCamera()\r\n    const { position, focalPoint } = camera\r\n\r\n    const toolData = {\r\n      metadata: {\r\n        cameraPosition: [...position],\r\n        cameraFocalPoint: [...focalPoint],\r\n        FrameOfReferenceUID,\r\n        toolName: this.name,\r\n      },\r\n      data: {\r\n        handles: {\r\n          rotationPoints: [], // rotation handles, used for rotation interactions\r\n          slabThicknessPoints: [], // slab thickness handles, used for setting the slab thickness\r\n        },\r\n        active: false,\r\n        activeOperation: null, // 0 translation, 1 rotation handles, 2 slab thickness handles\r\n        activeViewportUIDs: [], // a list of the viewport uids connected to the reference lines being translated\r\n        viewportUID,\r\n        sceneUID,\r\n      },\r\n    }\r\n\r\n    // NOTE: rotation handles are initialized in renderTool when drawing.\r\n\r\n    addToolState(element, toolData)\r\n\r\n    showToolCursor(element)\r\n  }\r\n\r\n  _jump = (enabledElement, jumpWorld) => {\r\n    state.isToolLocked = true\r\n\r\n    const toolState = getToolState(enabledElement, this.name)\r\n    const { renderingEngine, scene } = enabledElement\r\n\r\n    const delta: Point3 = [0, 0, 0]\r\n    vtkMath.subtract(jumpWorld, this.toolCenter, delta)\r\n\r\n    // TRANSLATION\r\n    // get the toolData of the other viewport which are parallel to the delta shift and are of the same scene\r\n    const otherViewportToolData = this._filterViewportOrientations(\r\n      enabledElement,\r\n      toolState\r\n    )\r\n\r\n    const viewportsToolDataToUpdate = otherViewportToolData.filter(\r\n      (toolData) => {\r\n        const { data } = toolData\r\n        const otherScene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = otherScene.getViewport(data.viewportUID)\r\n\r\n        return (\r\n          this._getReferenceLineControllable(otherViewport.uid) &&\r\n          this._getReferenceLineDraggableRotatable(otherViewport.uid) &&\r\n          otherScene === scene\r\n        )\r\n      }\r\n    )\r\n\r\n    if (viewportsToolDataToUpdate.length === 0) {\r\n      state.isToolLocked = false\r\n      return false\r\n    }\r\n\r\n    this._applyDeltaShiftToSelectedViewportCameras(\r\n      renderingEngine,\r\n      viewportsToolDataToUpdate,\r\n      delta\r\n    )\r\n\r\n    state.isToolLocked = false\r\n\r\n    return true\r\n  }\r\n\r\n  jumpToWorld = (enabledElement, jumpWorld) => {\r\n    state.isToolLocked = true\r\n\r\n    const toolState = getToolState(enabledElement, this.name)\r\n    const { renderingEngine, viewport } = enabledElement\r\n\r\n    const delta: Point3 = [0, 0, 0]\r\n    vtkMath.subtract(jumpWorld, this.toolCenter, delta)\r\n\r\n    const viewportToolData = toolState.find(\r\n      (toolData) => toolData.data.viewportUID === viewport.uid\r\n    )\r\n\r\n    this._applyDeltaShiftToViewportCamera(\r\n      renderingEngine,\r\n      viewportToolData,\r\n      delta\r\n    )\r\n\r\n    state.isToolLocked = false\r\n\r\n    return true\r\n  }\r\n\r\n  _activateModify(element) {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  _deactivateModify(element) {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  _mouseUpCallback(evt) {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    this.editData.toolData.data.active = false\r\n    this.editData.toolData.data.handles.activeOperation = null\r\n    this.editData.toolData.data.activeViewportUIDs = []\r\n\r\n    this._deactivateModify(element)\r\n\r\n    showToolCursor(element)\r\n\r\n    this.editData = null\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _mouseDragCallback(evt) {\r\n    const eventData = evt.detail\r\n    const delta = eventData.deltaPoints.world\r\n\r\n    if (\r\n      Math.abs(delta[0]) < 1e-3 &&\r\n      Math.abs(delta[1]) < 1e-3 &&\r\n      Math.abs(delta[2]) < 1e-3\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { element: canvas } = eventData\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { renderingEngine, viewport } = enabledElement\r\n    const toolState = getToolState(enabledElement, this.name)\r\n    const filteredToolState = this.filterInteractableToolStateForElement(\r\n      canvas,\r\n      toolState\r\n    )\r\n\r\n    // viewport ToolData\r\n    const viewportToolData = filteredToolState[0]\r\n    if (!viewportToolData) {\r\n      return\r\n    }\r\n\r\n    const { handles } = viewportToolData.data\r\n    const { currentPoints } = evt.detail\r\n    const canvasCoords = currentPoints.canvas\r\n\r\n    if (handles.activeOperation === OPERATION.DRAG) {\r\n      // TRANSLATION\r\n      // get the toolData of the other viewport which are parallel to the delta shift and are of the same scene\r\n      const otherViewportToolData = this._filterViewportOrientations(\r\n        enabledElement,\r\n        toolState\r\n      )\r\n\r\n      const viewportsToolDataToUpdate = otherViewportToolData.filter(\r\n        (toolData) => {\r\n          const { data } = toolData\r\n          const scene = renderingEngine.getScene(data.sceneUID)\r\n          const otherViewport = scene.getViewport(data.viewportUID)\r\n\r\n          return viewportToolData.data.activeViewportUIDs.find(\r\n            (uid) => uid === otherViewport.uid\r\n          )\r\n        }\r\n      )\r\n\r\n      this._applyDeltaShiftToSelectedViewportCameras(\r\n        renderingEngine,\r\n        viewportsToolDataToUpdate,\r\n        delta\r\n      )\r\n    } else if (handles.activeOperation === OPERATION.ROTATE) {\r\n      // ROTATION\r\n      const otherViewportToolData = this._filterViewportOrientations(\r\n        enabledElement,\r\n        toolState\r\n      )\r\n\r\n      const scene = renderingEngine.getScene(viewportToolData.data.sceneUID)\r\n\r\n      const viewportsToolDataToUpdate = otherViewportToolData.filter(\r\n        (toolData) => {\r\n          const { data } = toolData\r\n          const otherScene = renderingEngine.getScene(data.sceneUID)\r\n          const otherViewport = otherScene.getViewport(data.viewportUID)\r\n          const otherViewportControllable = this._getReferenceLineControllable(\r\n            otherViewport.uid\r\n          )\r\n          const otherViewportRotatable = this._getReferenceLineDraggableRotatable(\r\n            otherViewport.uid\r\n          )\r\n\r\n          return (\r\n            scene === otherScene &&\r\n            otherViewportControllable === true &&\r\n            otherViewportRotatable === true\r\n          )\r\n        }\r\n      )\r\n\r\n      const dir1 = vec2.create()\r\n      const dir2 = vec2.create()\r\n\r\n      const center: Point3 = [\r\n        this.toolCenter[0],\r\n        this.toolCenter[1],\r\n        this.toolCenter[2],\r\n      ]\r\n      const centerCanvas = viewport.worldToCanvas(center)\r\n\r\n      const finalPointCanvas = eventData.currentPoints.canvas\r\n      const originalPointCanvas = vec2.create()\r\n      vec2.sub(\r\n        originalPointCanvas,\r\n        finalPointCanvas,\r\n        eventData.deltaPoints.canvas\r\n      )\r\n      vec2.sub(dir1, originalPointCanvas, <vec2>centerCanvas)\r\n      vec2.sub(dir2, finalPointCanvas, <vec2>centerCanvas)\r\n\r\n      let angle = vec2.angle(dir1, dir2)\r\n\r\n      if (\r\n        this._isClockWise(centerCanvas, originalPointCanvas, finalPointCanvas)\r\n      ) {\r\n        angle *= -1\r\n      }\r\n\r\n      const rotationAxis = viewport.getCamera().viewPlaneNormal\r\n      // @ts-ignore : vtkjs incorrect typing\r\n      const { matrix } = vtkMatrixBuilder\r\n        .buildFromRadian()\r\n        .translate(center[0], center[1], center[2])\r\n        // @ts-ignore\r\n        .rotate(angle, rotationAxis) //todo: why we are passing\r\n        .translate(-center[0], -center[1], -center[2])\r\n\r\n      // update camera for the other viewports.\r\n      // NOTE: The lines then are rendered by the onCameraModified\r\n      viewportsToolDataToUpdate.forEach((toolData) => {\r\n        const { data } = toolData\r\n\r\n        const scene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = scene.getViewport(data.viewportUID)\r\n        const camera = otherViewport.getCamera()\r\n        const { viewUp, position, focalPoint } = camera\r\n\r\n        viewUp[0] += position[0]\r\n        viewUp[1] += position[1]\r\n        viewUp[2] += position[2]\r\n\r\n        vec3.transformMat4(focalPoint, focalPoint, matrix)\r\n        vec3.transformMat4(position, position, matrix)\r\n        vec3.transformMat4(viewUp, viewUp, matrix)\r\n\r\n        viewUp[0] -= position[0]\r\n        viewUp[1] -= position[1]\r\n        viewUp[2] -= position[2]\r\n\r\n        otherViewport.setCamera({\r\n          position,\r\n          viewUp,\r\n          focalPoint,\r\n        })\r\n      })\r\n    } else if (handles.activeOperation === OPERATION.SLAB) {\r\n      // SLAB THICKNESS\r\n      // this should be just the active one under the mouse,\r\n      const viewportsToolDataToUpdate = toolState.filter((toolData) => {\r\n        const { data } = toolData\r\n        const scene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = scene.getViewport(data.viewportUID)\r\n\r\n        return viewportToolData.data.activeViewportUIDs.find(\r\n          (uid) => uid === otherViewport.uid\r\n        )\r\n      })\r\n\r\n      viewportsToolDataToUpdate.forEach((toolData) => {\r\n        const { data } = toolData\r\n\r\n        const scene = renderingEngine.getScene(data.sceneUID)\r\n        const otherViewport = scene.getViewport(data.viewportUID)\r\n        const camera = otherViewport.getCamera()\r\n        const normal = camera.viewPlaneNormal\r\n\r\n        const dotProd = vtkMath.dot(delta, normal)\r\n        const projectedDelta = [...normal]\r\n        vtkMath.multiplyScalar(projectedDelta, dotProd)\r\n\r\n        if (\r\n          Math.abs(projectedDelta[0]) > 1e-3 ||\r\n          Math.abs(projectedDelta[1]) > 1e-3 ||\r\n          Math.abs(projectedDelta[2]) > 1e-3\r\n        ) {\r\n          const mod = Math.sqrt(\r\n            projectedDelta[0] * projectedDelta[0] +\r\n              projectedDelta[1] * projectedDelta[1] +\r\n              projectedDelta[2] * projectedDelta[2]\r\n          )\r\n\r\n          const currentPoint = eventData.lastPoints.world\r\n          const direction: Point3 = [0, 0, 0]\r\n\r\n          const currentCenter: Point3 = [\r\n            this.toolCenter[0],\r\n            this.toolCenter[1],\r\n            this.toolCenter[2],\r\n          ]\r\n\r\n          // use this.toolCenter only if viewportDraggableRotatable\r\n          const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n            otherViewport.uid\r\n          )\r\n          if (!viewportDraggableRotatable) {\r\n            const { rotationPoints } = this.editData.toolData.data.handles\r\n            const otherViewportRotationPoints = rotationPoints.filter(\r\n              (point) => point[1].uid === otherViewport.uid\r\n            )\r\n            if (otherViewportRotationPoints.length === 2) {\r\n              const point1 = viewport.canvasToWorld(\r\n                otherViewportRotationPoints[0][3]\r\n              )\r\n              const point2 = viewport.canvasToWorld(\r\n                otherViewportRotationPoints[1][3]\r\n              )\r\n              vtkMath.add(point1, point2, currentCenter)\r\n              vtkMath.multiplyScalar(currentCenter, 0.5)\r\n            }\r\n          }\r\n\r\n          vtkMath.subtract(currentPoint, currentCenter, direction)\r\n          const dotProdDirection = vtkMath.dot(direction, normal)\r\n          const projectedDirection = [...normal]\r\n          vtkMath.multiplyScalar(projectedDirection, dotProdDirection)\r\n          const normalizedProjectedDirection: Point3 = [\r\n            projectedDirection[0],\r\n            projectedDirection[1],\r\n            projectedDirection[2],\r\n          ]\r\n          vec3.normalize(\r\n            normalizedProjectedDirection,\r\n            normalizedProjectedDirection\r\n          )\r\n          const normalizedProjectedDelta: Point3 = [\r\n            projectedDelta[0],\r\n            projectedDelta[1],\r\n            projectedDelta[2],\r\n          ]\r\n          vec3.normalize(normalizedProjectedDelta, normalizedProjectedDelta)\r\n\r\n          let slabThicknessValue = otherViewport.getSlabThickness()\r\n          if (\r\n            isOpposite(\r\n              normalizedProjectedDirection,\r\n              normalizedProjectedDelta,\r\n              1e-3\r\n            )\r\n          ) {\r\n            slabThicknessValue -= mod\r\n          } else {\r\n            slabThicknessValue += mod\r\n          }\r\n\r\n          slabThicknessValue = Math.abs(slabThicknessValue)\r\n          slabThicknessValue = Math.max(0.1, slabThicknessValue)\r\n\r\n          const near = this._pointNearReferenceLine(\r\n            viewportToolData,\r\n            canvasCoords,\r\n            6,\r\n            otherViewport\r\n          )\r\n\r\n          if (near) {\r\n            otherViewport.setSlabThickness(null)\r\n          } else {\r\n            otherViewport.setSlabThickness(slabThicknessValue)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  _isClockWise(a, b, c) {\r\n    // return true if the rotation is clockwise\r\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0\r\n  }\r\n\r\n  _applyDeltaShiftToSelectedViewportCameras(\r\n    renderingEngine,\r\n    viewportsToolDataToUpdate,\r\n    delta\r\n  ) {\r\n    // update camera for the other viewports.\r\n    // NOTE1: The lines then are rendered by the onCameraModified\r\n    // NOTE2: crosshair center are automatically updated in the onCameraModified event\r\n    viewportsToolDataToUpdate.forEach((toolData) => {\r\n      this._applyDeltaShiftToViewportCamera(renderingEngine, toolData, delta)\r\n    })\r\n  }\r\n  _applyDeltaShiftToViewportCamera(renderingEngine, toolData, delta) {\r\n    // update camera for the other viewports.\r\n    // NOTE1: The lines then are rendered by the onCameraModified\r\n    // NOTE2: crosshair center are automatically updated in the onCameraModified event\r\n    const { data } = toolData\r\n\r\n    const scene = renderingEngine.getScene(data.sceneUID)\r\n    const viewport = scene.getViewport(data.viewportUID)\r\n    const camera = viewport.getCamera()\r\n    const normal = camera.viewPlaneNormal\r\n\r\n    // Project delta over camera normal\r\n    // (we don't need to pan, we need only to scroll the camera as in the wheel stack scroll tool)\r\n    const dotProd = vtkMath.dot(delta, normal)\r\n    const projectedDelta = [...normal]\r\n    vtkMath.multiplyScalar(projectedDelta, dotProd)\r\n\r\n    if (\r\n      Math.abs(projectedDelta[0]) > 1e-3 ||\r\n      Math.abs(projectedDelta[1]) > 1e-3 ||\r\n      Math.abs(projectedDelta[2]) > 1e-3\r\n    ) {\r\n      const newFocalPoint = [0, 0, 0],\r\n        newPosition = [0, 0, 0]\r\n\r\n      vtkMath.add(camera.focalPoint, projectedDelta, newFocalPoint)\r\n      vtkMath.add(camera.position, projectedDelta, newPosition)\r\n\r\n      viewport.setCamera({\r\n        focalPoint: newFocalPoint,\r\n        position: newPosition,\r\n      })\r\n    }\r\n  }\r\n\r\n  _pointNearReferenceLine = (\r\n    toolData,\r\n    canvasCoords,\r\n    proximity,\r\n    lineViewport\r\n  ) => {\r\n    const { data } = toolData\r\n    const { rotationPoints } = data.handles\r\n\r\n    for (let i = 0; i < rotationPoints.length - 1; ++i) {\r\n      const otherViewport = rotationPoints[i][1]\r\n      if (otherViewport.uid !== lineViewport.uid) {\r\n        continue\r\n      }\r\n\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      if (!viewportControllable) {\r\n        continue\r\n      }\r\n\r\n      const lineSegment1 = {\r\n        start: {\r\n          x: rotationPoints[i][2][0],\r\n          y: rotationPoints[i][2][1],\r\n        },\r\n        end: {\r\n          x: rotationPoints[i][3][0],\r\n          y: rotationPoints[i][3][1],\r\n        },\r\n      }\r\n\r\n      const distanceToPoint1 = lineSegment.distanceToPoint(\r\n        [lineSegment1.start.x, lineSegment1.start.y],\r\n        [lineSegment1.end.x, lineSegment1.end.y],\r\n        [canvasCoords[0], canvasCoords[1]]\r\n      )\r\n\r\n      const lineSegment2 = {\r\n        start: {\r\n          x: rotationPoints[i + 1][2][0],\r\n          y: rotationPoints[i + 1][2][1],\r\n        },\r\n        end: {\r\n          x: rotationPoints[i + 1][3][0],\r\n          y: rotationPoints[i + 1][3][1],\r\n        },\r\n      }\r\n\r\n      const distanceToPoint2 = lineSegment.distanceToPoint(\r\n        [lineSegment2.start.x, lineSegment2.start.y],\r\n        [lineSegment2.end.x, lineSegment2.end.y],\r\n        [canvasCoords[0], canvasCoords[1]]\r\n      )\r\n\r\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\r\n        return true\r\n      }\r\n\r\n      // rotation handles are two for viewport\r\n      i++\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  _getRotationHandleNearImagePoint(\r\n    viewport,\r\n    toolData,\r\n    canvasCoords,\r\n    proximity\r\n  ) {\r\n    const { data } = toolData\r\n    const { rotationPoints } = data.handles\r\n\r\n    for (let i = 0; i < rotationPoints.length; i++) {\r\n      const point = rotationPoints[i][0]\r\n      const otherViewport = rotationPoints[i][1]\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      if (!viewportControllable) {\r\n        continue\r\n      }\r\n\r\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n        otherViewport.uid\r\n      )\r\n      if (!viewportDraggableRotatable) {\r\n        continue\r\n      }\r\n\r\n      const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n      if (vec2.distance(canvasCoords, toolDataCanvasCoordinate) < proximity) {\r\n        data.handles.activeOperation = OPERATION.ROTATE\r\n\r\n        this.editData = {\r\n          toolData,\r\n        }\r\n\r\n        return point\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _getSlabThicknessHandleNearImagePoint(\r\n    viewport,\r\n    toolData,\r\n    canvasCoords,\r\n    proximity\r\n  ) {\r\n    const { data } = toolData\r\n    const { slabThicknessPoints } = data.handles\r\n\r\n    for (let i = 0; i < slabThicknessPoints.length; i++) {\r\n      const point = slabThicknessPoints[i][0]\r\n      const otherViewport = slabThicknessPoints[i][1]\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      if (!viewportControllable) {\r\n        continue\r\n      }\r\n\r\n      const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(\r\n        otherViewport.uid\r\n      )\r\n      if (!viewportSlabThicknessControlsOn) {\r\n        continue\r\n      }\r\n\r\n      const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n      if (vec2.distance(canvasCoords, toolDataCanvasCoordinate) < proximity) {\r\n        data.handles.activeOperation = OPERATION.SLAB\r\n\r\n        data.activeViewportUIDs = [otherViewport.uid]\r\n\r\n        this.editData = {\r\n          toolData,\r\n        }\r\n\r\n        return point\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  _pointNearTool(element, toolData, canvasCoords, proximity) {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n    const { sWidth, sHeight } = viewport\r\n    const canvasDiagonalLength = Math.sqrt(sWidth * sWidth + sHeight * sHeight)\r\n    const { data } = toolData\r\n\r\n    const { rotationPoints } = data.handles\r\n    const { slabThicknessPoints } = data.handles\r\n    const viewportUIDArray = []\r\n\r\n    for (let i = 0; i < rotationPoints.length - 1; ++i) {\r\n      const otherViewport = rotationPoints[i][1]\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\r\n        otherViewport.uid\r\n      )\r\n\r\n      if (!viewportControllable || !viewportDraggableRotatable) {\r\n        continue\r\n      }\r\n\r\n      const lineSegment1 = {\r\n        start: {\r\n          x: rotationPoints[i][2][0],\r\n          y: rotationPoints[i][2][1],\r\n        },\r\n        end: {\r\n          x: rotationPoints[i][3][0],\r\n          y: rotationPoints[i][3][1],\r\n        },\r\n      }\r\n\r\n      const distanceToPoint1 = lineSegment.distanceToPoint(\r\n        [lineSegment1.start.x, lineSegment1.start.y],\r\n        [lineSegment1.end.x, lineSegment1.end.y],\r\n        [canvasCoords[0], canvasCoords[1]]\r\n      )\r\n\r\n      const lineSegment2 = {\r\n        start: {\r\n          x: rotationPoints[i + 1][2][0],\r\n          y: rotationPoints[i + 1][2][1],\r\n        },\r\n        end: {\r\n          x: rotationPoints[i + 1][3][0],\r\n          y: rotationPoints[i + 1][3][1],\r\n        },\r\n      }\r\n\r\n      const distanceToPoint2 = lineSegment.distanceToPoint(\r\n        [lineSegment2.start.x, lineSegment2.start.y],\r\n        [lineSegment2.end.x, lineSegment2.end.y],\r\n        [canvasCoords[0], canvasCoords[1]]\r\n      )\r\n\r\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\r\n        viewportUIDArray.push(otherViewport.uid)\r\n        data.handles.activeOperation = OPERATION.DRAG\r\n      }\r\n\r\n      // rotation handles are two for viewport\r\n      i++\r\n    }\r\n\r\n    for (let i = 0; i < slabThicknessPoints.length - 1; ++i) {\r\n      const otherViewport = slabThicknessPoints[i][1]\r\n      if (viewportUIDArray.find((uid) => uid === otherViewport.uid)) {\r\n        continue\r\n      }\r\n\r\n      const viewportControllable = this._getReferenceLineControllable(\r\n        otherViewport.uid\r\n      )\r\n      const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(\r\n        otherViewport.uid\r\n      )\r\n\r\n      if (!viewportControllable || !viewportSlabThicknessControlsOn) {\r\n        continue\r\n      }\r\n\r\n      const stPointLineCanvas1 = slabThicknessPoints[i][2]\r\n      const stPointLineCanvas2 = slabThicknessPoints[i][3]\r\n\r\n      const centerCanvas = vec2.create()\r\n      vec2.add(centerCanvas, stPointLineCanvas1, stPointLineCanvas2)\r\n      vec2.scale(centerCanvas, centerCanvas, 0.5)\r\n\r\n      const canvasUnitVectorFromCenter = vec2.create()\r\n      vec2.subtract(\r\n        canvasUnitVectorFromCenter,\r\n        stPointLineCanvas1,\r\n        centerCanvas\r\n      )\r\n      vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter)\r\n\r\n      const canvasVectorFromCenterStart = vec2.create()\r\n      vec2.scale(\r\n        canvasVectorFromCenterStart,\r\n        canvasUnitVectorFromCenter,\r\n        canvasDiagonalLength * 0.05\r\n      )\r\n\r\n      const stPointLineCanvas1Start = vec2.create()\r\n      const stPointLineCanvas2Start = vec2.create()\r\n      vec2.add(\r\n        stPointLineCanvas1Start,\r\n        centerCanvas,\r\n        canvasVectorFromCenterStart\r\n      )\r\n      vec2.subtract(\r\n        stPointLineCanvas2Start,\r\n        centerCanvas,\r\n        canvasVectorFromCenterStart\r\n      )\r\n\r\n      const lineSegment1 = {\r\n        start: {\r\n          x: stPointLineCanvas1Start[0],\r\n          y: stPointLineCanvas1Start[1],\r\n        },\r\n        end: {\r\n          x: stPointLineCanvas1[0],\r\n          y: stPointLineCanvas1[1],\r\n        },\r\n      }\r\n\r\n      const distanceToPoint1 = lineSegment.distanceToPoint(\r\n        [lineSegment1.start.x, lineSegment1.start.y],\r\n        [lineSegment1.end.x, lineSegment1.end.y],\r\n        [canvasCoords[0], canvasCoords[1]]\r\n      )\r\n\r\n      const lineSegment2 = {\r\n        start: {\r\n          x: stPointLineCanvas2Start[0],\r\n          y: stPointLineCanvas2Start[1],\r\n        },\r\n        end: {\r\n          x: stPointLineCanvas2[0],\r\n          y: stPointLineCanvas2[1],\r\n        },\r\n      }\r\n\r\n      const distanceToPoint2 = lineSegment.distanceToPoint(\r\n        [lineSegment2.start.x, lineSegment2.start.y],\r\n        [lineSegment2.end.x, lineSegment2.end.y],\r\n        [canvasCoords[0], canvasCoords[1]]\r\n      )\r\n\r\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\r\n        viewportUIDArray.push(otherViewport.uid) // we still need this to draw inactive slab thickness handles\r\n        data.handles.activeOperation = null // no operation\r\n      }\r\n\r\n      // slab thickness handles are in couples\r\n      i++\r\n    }\r\n\r\n    data.activeViewportUIDs = [...viewportUIDArray]\r\n\r\n    this.editData = {\r\n      toolData,\r\n    }\r\n\r\n    return data.handles.activeOperation === OPERATION.DRAG ? true : false\r\n  }\r\n}\r\n","import _getHash from './_getHash'\r\nimport { Point2 } from '../types'\r\n\r\nfunction drawCircle(\r\n  svgDrawingHelper: any,\r\n  toolUID: string,\r\n  annotationUID: string,\r\n  circleUID: string,\r\n  center: Point2,\r\n  radius: number,\r\n  options = {}\r\n): void {\r\n  const { color, fill, width, lineWidth } = Object.assign(\r\n    {\r\n      color: 'dodgerblue',\r\n      fill: 'transparent',\r\n      width: '2',\r\n      lineWidth: undefined,\r\n    },\r\n    options\r\n  )\r\n\r\n  // for supporting both lineWidth and width options\r\n  const strokeWidth = lineWidth || width\r\n\r\n  // variable for the namespace\r\n  const svgns = 'http://www.w3.org/2000/svg'\r\n  const svgNodeHash = _getHash(toolUID, annotationUID, 'circle', circleUID)\r\n  const existingCircleElement = svgDrawingHelper._getSvgNode(svgNodeHash)\r\n\r\n  if (existingCircleElement) {\r\n    existingCircleElement.setAttribute('cx', `${center[0]}`)\r\n    existingCircleElement.setAttribute('cy', `${center[1]}`)\r\n    existingCircleElement.setAttribute('r', `${radius}`)\r\n    existingCircleElement.setAttribute('stroke', color)\r\n    existingCircleElement.setAttribute('fill', fill)\r\n    existingCircleElement.setAttribute('stroke-width', strokeWidth)\r\n\r\n    svgDrawingHelper._setNodeTouched(svgNodeHash)\r\n  } else {\r\n    const newCircleElement = document.createElementNS(svgns, 'circle')\r\n\r\n    newCircleElement.setAttribute('cx', `${center[0]}`)\r\n    newCircleElement.setAttribute('cy', `${center[1]}`)\r\n    newCircleElement.setAttribute('r', `${radius}`)\r\n    newCircleElement.setAttribute('stroke', color)\r\n    newCircleElement.setAttribute('fill', fill)\r\n    newCircleElement.setAttribute('stroke-width', strokeWidth)\r\n\r\n    svgDrawingHelper._appendNode(newCircleElement, svgNodeHash)\r\n  }\r\n}\r\n\r\nexport default drawCircle\r\n","import { BaseTool } from './base'\r\nimport { getEnabledElement, Scene } from '@ohif/cornerstone-render'\r\nimport { getVoxelPositionBasedOnIntensity } from '../util/planar'\r\nimport { ToolGroupManager } from '../store'\r\nimport CrosshairsTool from './CrosshairsTool'\r\n\r\nconst CROSSHAIRS = 'Crosshairs'\r\n\r\nexport default class MIPJumpToClickTool extends BaseTool {\r\n  _configuration: any\r\n  _bounds: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'MIPJumpToClickTool',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: {},\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Handles the click event, and move the camera's focal point the brightest\r\n   * point that is in the line of sight of camera. This function 1) search for the\r\n   * brightest point in the line of sight, 2) move the crosshairs to that point,\r\n   * this triggers a cameraModified event which then 4) moves all other synced\r\n   * viewports and their crosshairs.\r\n   *\r\n   * @param evt click event\r\n   */\r\n  mouseClickCallback(evt): void {\r\n    const {\r\n      element: canvas,\r\n      currentPoints,\r\n      renderingEngineUID,\r\n      sceneUID,\r\n    } = evt.detail\r\n\r\n    // 1. Getting the enabled element\r\n    const enabledElement = getEnabledElement(canvas)\r\n    const { viewport, scene, renderingEngine } = enabledElement\r\n\r\n    // 2. Getting the target volume that is clicked on\r\n    const targetVolumeUID = this._getTargetVolumeUID(scene)\r\n\r\n    // 3. Criteria function to search for the point (maximum intensity)\r\n    let maxIntensity = -Infinity\r\n    const maxFn = (intensity, point) => {\r\n      if (intensity > maxIntensity) {\r\n        maxIntensity = intensity\r\n        return point\r\n      }\r\n    }\r\n\r\n    // 4. Search for the brightest point location in the line of sight\r\n    const brightestPoint = getVoxelPositionBasedOnIntensity(\r\n      scene,\r\n      viewport,\r\n      targetVolumeUID,\r\n      maxFn,\r\n      currentPoints.world\r\n    )\r\n\r\n    if (!brightestPoint || !brightestPoint.length) {\r\n      return\r\n    }\r\n\r\n    // 5. Get all the scenes containing the volume\r\n    const scenes = renderingEngine.getScenesContainingVolume(targetVolumeUID)\r\n\r\n    // 6. Update all the scenes and its viewports, to jump their crosshairs\r\n    // to the clicked point\r\n    scenes.forEach((scene) => {\r\n      if (scene.uid === sceneUID) {\r\n        return\r\n      }\r\n\r\n      const viewports = scene.getViewports()\r\n\r\n      viewports.forEach((viewport) => {\r\n        const toolGroups = ToolGroupManager.getToolGroups(\r\n          renderingEngineUID,\r\n          scene.uid,\r\n          viewport.uid\r\n        )\r\n\r\n        toolGroups.forEach((toolGroup) => {\r\n          const crosshairs = toolGroup.getToolInstance(CROSSHAIRS)\r\n\r\n          if (crosshairs && crosshairs instanceof CrosshairsTool) {\r\n            const enabledElement = {\r\n              viewport,\r\n              scene,\r\n              renderingEngine,\r\n              viewportUID: viewport.uid,\r\n              sceneUID,\r\n              renderingEngineUID: renderingEngine.uid,\r\n              FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\r\n            }\r\n\r\n            crosshairs.jumpToWorld(enabledElement, brightestPoint)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns the volume UID in the scene. It returns the first volume.\r\n   * @param scene Scene\r\n   * @returns volume UID\r\n   */\r\n  _getTargetVolumeUID = (scene: Scene): string => {\r\n    if (this.configuration.volumeUID) {\r\n      return this.configuration.volumeUID\r\n    }\r\n\r\n    const volumeActors = scene.getVolumeActors()\r\n\r\n    if (!volumeActors && !volumeActors.length) {\r\n      // No stack to scroll through\r\n      return\r\n    }\r\n\r\n    return volumeActors[0].uid\r\n  }\r\n}\r\n","import { BaseAnnotationTool } from '../base'\r\nimport vtkMath from 'vtk.js/Sources/Common/Core/Math'\r\n// ~~ VTK Viewport\r\nimport { Settings, getEnabledElement, Types } from '@ohif/cornerstone-render'\r\nimport { getTargetVolume, getToolStateWithinSlice } from '../../util/planar'\r\nimport throttle from '../../util/throttle'\r\nimport { addToolState, getToolState } from '../../stateManagement/toolState'\r\nimport {\r\n  drawLine as drawLineSvg,\r\n  drawHandles as drawHandlesSvg,\r\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\r\n} from '../../drawingSvg'\r\nimport { vec2, vec3 } from 'gl-matrix'\r\nimport { state } from '../../store'\r\nimport { CornerstoneTools3DEvents as EVENTS } from '../../enums'\r\nimport { getViewportUIDsWithToolToRender } from '../../util/viewportFilters'\r\nimport { indexWithinDimensions } from '../../util/vtkjs'\r\nimport lineSegment from '../../util/math/line'\r\nimport { getTextBoxCoordsCanvas } from '../../util/drawing'\r\nimport { showToolCursor, hideToolCursor } from '../../store/toolCursor'\r\nimport { ToolSpecificToolData } from '../../types'\r\n\r\nexport default class BidirectionalTool extends BaseAnnotationTool {\r\n  touchDragCallback: any\r\n  mouseDragCallback: any\r\n  _throttledCalculateCachedStats: any\r\n  editData: {\r\n    toolData: any\r\n    viewportUIDsToRender: string[]\r\n    handleIndex?: number\r\n    movingTextBox: boolean\r\n    newAnnotation?: boolean\r\n    hasMoved?: boolean\r\n  } | null\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'Bidirectional',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: {\r\n        shadow: true,\r\n      },\r\n    })\r\n\r\n    this._throttledCalculateCachedStats = throttle(\r\n      this._calculateCachedStats,\r\n      100,\r\n      { trailing: true }\r\n    )\r\n  }\r\n\r\n  addNewMeasurement = (evt: CustomEvent): ToolSpecificToolData => {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const worldPos = currentPoints.world\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, FrameOfReferenceUID, renderingEngine } = enabledElement\r\n\r\n    if (!FrameOfReferenceUID) {\r\n      console.warn('No FrameOfReferenceUID, empty scene, exiting early.')\r\n\r\n      return\r\n    }\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewPlaneNormal, viewUp } = camera\r\n    const toolData = {\r\n      metadata: {\r\n        viewPlaneNormal: [...viewPlaneNormal],\r\n        viewUp: [...viewUp],\r\n        FrameOfReferenceUID,\r\n        toolName: this.name,\r\n      },\r\n      data: {\r\n        invalidated: true,\r\n        handles: {\r\n          points: [\r\n            // long\r\n            [...worldPos],\r\n            [...worldPos],\r\n            // short\r\n            [...worldPos],\r\n            [...worldPos],\r\n          ],\r\n          textBox: {\r\n            hasMoved: false,\r\n            worldPosition: [0, 0, 0],\r\n          },\r\n          activeHandleIndex: null,\r\n        },\r\n        cachedStats: {},\r\n        active: true,\r\n      },\r\n    } as ToolSpecificToolData\r\n\r\n    // Ensure settings are initialized after tool data instantiation\r\n    Settings.getObjectSettings(toolData, BidirectionalTool)\r\n\r\n    addToolState(element, toolData)\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex: 1,\r\n      movingTextBox: false,\r\n      newAnnotation: true,\r\n      hasMoved: false,\r\n    }\r\n    this._activateDraw(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    return toolData\r\n  }\r\n\r\n  getHandleNearImagePoint = (element, toolData, canvasCoords, proximity) => {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const { points, textBox } = data.handles\r\n    const { worldBoundingBox } = textBox\r\n\r\n    if (worldBoundingBox) {\r\n      const canvasBoundingBox = {\r\n        topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\r\n        topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\r\n        bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\r\n        bottmRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\r\n      }\r\n\r\n      if (\r\n        canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\r\n        canvasCoords[0] <= canvasBoundingBox.bottmRight[0] &&\r\n        canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\r\n        canvasCoords[1] <= canvasBoundingBox.bottmRight[1]\r\n      ) {\r\n        data.handles.activeHandleIndex = null\r\n        return textBox\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i]\r\n      const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n\r\n      const near =\r\n        vec2.distance(canvasCoords, <vec2>toolDataCanvasCoordinate) < proximity\r\n\r\n      if (near === true) {\r\n        data.handles.activeHandleIndex = i\r\n        return point\r\n      }\r\n    }\r\n\r\n    data.handles.activeHandleIndex = null\r\n  }\r\n\r\n  pointNearTool = (element, toolData, canvasCoords, proximity) => {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n    const { data } = toolData\r\n    const { points } = data.handles\r\n\r\n    // Check long axis\r\n    let canavasPoint1 = viewport.worldToCanvas(points[0])\r\n    let canavasPoint2 = viewport.worldToCanvas(points[1])\r\n\r\n    let line = {\r\n      start: {\r\n        x: canavasPoint1[0],\r\n        y: canavasPoint1[1],\r\n      },\r\n      end: {\r\n        x: canavasPoint2[0],\r\n        y: canavasPoint2[1],\r\n      },\r\n    }\r\n\r\n    let distanceToPoint = lineSegment.distanceToPoint(\r\n      [line.start.x, line.start.y],\r\n      [line.end.x, line.end.y],\r\n      [canvasCoords[0], canvasCoords[1]]\r\n    )\r\n\r\n    if (distanceToPoint <= proximity) {\r\n      return true\r\n    }\r\n\r\n    // Check short axis\r\n    canavasPoint1 = viewport.worldToCanvas(points[2])\r\n    canavasPoint2 = viewport.worldToCanvas(points[3])\r\n\r\n    line = {\r\n      start: {\r\n        x: canavasPoint1[0],\r\n        y: canavasPoint1[1],\r\n      },\r\n      end: {\r\n        x: canavasPoint2[0],\r\n        y: canavasPoint2[1],\r\n      },\r\n    }\r\n\r\n    distanceToPoint = lineSegment.distanceToPoint(\r\n      [line.start.x, line.start.y],\r\n      [line.end.x, line.end.y],\r\n      [canvasCoords[0], canvasCoords[1]]\r\n    )\r\n\r\n    if (distanceToPoint <= proximity) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  toolSelectedCallback = (evt, toolData, interactionType = 'mouse') => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      movingTextBox: false,\r\n    }\r\n\r\n    this._activateModify(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  handleSelectedCallback = (\r\n    evt,\r\n    toolData,\r\n    handle,\r\n    interactionType = 'mouse'\r\n  ) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    let movingTextBox = false\r\n    let handleIndex\r\n\r\n    if (handle.worldPosition) {\r\n      movingTextBox = true\r\n    } else {\r\n      handleIndex = data.handles.points.findIndex((p) => p === handle)\r\n    }\r\n\r\n    // Find viewports to render on drag.\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    hideToolCursor(element)\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex,\r\n      movingTextBox,\r\n    }\r\n    this._activateModify(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  _mouseUpCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { toolData, viewportUIDsToRender, newAnnotation, hasMoved } =\r\n      this.editData\r\n    const { data } = toolData\r\n\r\n    if (newAnnotation && !hasMoved) {\r\n      return\r\n    }\r\n\r\n    data.active = false\r\n    data.handles.activeHandleIndex = null\r\n\r\n    this._deactivateModify(element)\r\n    this._deactivateDraw(element)\r\n\r\n    showToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    if (this.editData.handleIndex !== undefined) {\r\n      const { points } = data.handles\r\n      const firstLineSegmentLength = vec3.distance(points[0], points[1])\r\n      const secondLineSegmentLength = vec3.distance(points[2], points[3])\r\n\r\n      if (secondLineSegmentLength > firstLineSegmentLength) {\r\n        // Switch points so [0,1] is the long axis and [2,3] is the short axis.\r\n\r\n        const longAxis = [[...points[2]], [...points[3]]]\r\n\r\n        const shortAxisPoint0 = [...points[0]]\r\n        const shortAxisPoint1 = [...points[1]]\r\n\r\n        // shortAxis[0->1] should be perpendicular (counter-clockwise) to longAxis[0->1]\r\n        const longAxisVector = vec2.create()\r\n\r\n        vec2.set(\r\n          longAxisVector,\r\n          longAxis[1][0] - longAxis[0][0],\r\n          longAxis[1][1] - longAxis[1][0]\r\n        )\r\n\r\n        const counterClockWisePerpendicularToLongAxis = vec2.create()\r\n\r\n        vec2.set(\r\n          counterClockWisePerpendicularToLongAxis,\r\n          -longAxisVector[1],\r\n          longAxisVector[0]\r\n        )\r\n\r\n        const currentShortAxisVector = vec2.create()\r\n\r\n        vec2.set(\r\n          currentShortAxisVector,\r\n          shortAxisPoint1[0] - shortAxisPoint0[0],\r\n          shortAxisPoint1[1] - shortAxisPoint0[0]\r\n        )\r\n\r\n        let shortAxis\r\n\r\n        if (\r\n          vec2.dot(\r\n            currentShortAxisVector,\r\n            counterClockWisePerpendicularToLongAxis\r\n          ) > 0\r\n        ) {\r\n          shortAxis = [shortAxisPoint0, shortAxisPoint1]\r\n        } else {\r\n          shortAxis = [shortAxisPoint1, shortAxisPoint0]\r\n        }\r\n\r\n        data.handles.points = [\r\n          longAxis[0],\r\n          longAxis[1],\r\n          shortAxis[0],\r\n          shortAxis[1],\r\n        ]\r\n      }\r\n    }\r\n\r\n    this.editData = null\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _mouseDragDrawCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine, viewport } = enabledElement\r\n    const { worldToCanvas } = viewport\r\n    const { toolData, viewportUIDsToRender, handleIndex } = this.editData\r\n    const { data } = toolData\r\n\r\n    const worldPos = currentPoints.world\r\n\r\n    // Update first move handle\r\n    data.handles.points[handleIndex] = [...worldPos]\r\n\r\n    const canvasCoordPoints = data.handles.points.map(worldToCanvas)\r\n\r\n    const canvasCoords = {\r\n      longLineSegment: {\r\n        start: {\r\n          x: canvasCoordPoints[0][0],\r\n          y: canvasCoordPoints[0][1],\r\n        },\r\n        end: {\r\n          x: canvasCoordPoints[1][0],\r\n          y: canvasCoordPoints[1][1],\r\n        },\r\n      },\r\n      shortLineSegment: {\r\n        start: {\r\n          x: canvasCoordPoints[2][0],\r\n          y: canvasCoordPoints[2][1],\r\n        },\r\n        end: {\r\n          x: canvasCoordPoints[3][0],\r\n          y: canvasCoordPoints[3][1],\r\n        },\r\n      },\r\n    }\r\n\r\n    // ~~ calculate worldPos of our short axis handles\r\n    // 1/3 distance between long points\r\n    const dist = vec2.distance(canvasCoordPoints[0], canvasCoordPoints[1])\r\n\r\n    const shortAxisDistFromCenter = dist / 3\r\n    // Calculate long line's incline\r\n    const dx =\r\n      canvasCoords.longLineSegment.start.x - canvasCoords.longLineSegment.end.x\r\n    const dy =\r\n      canvasCoords.longLineSegment.start.y - canvasCoords.longLineSegment.end.y\r\n    const length = Math.sqrt(dx * dx + dy * dy)\r\n    const vectorX = dx / length\r\n    const vectorY = dy / length\r\n    // middle point between long line segment's points\r\n    const xMid =\r\n      (canvasCoords.longLineSegment.start.x +\r\n        canvasCoords.longLineSegment.end.x) /\r\n      2\r\n    const yMid =\r\n      (canvasCoords.longLineSegment.start.y +\r\n        canvasCoords.longLineSegment.end.y) /\r\n      2\r\n    // short points 1/3 distance from center of long points\r\n    const startX = xMid + shortAxisDistFromCenter * vectorY\r\n    const startY = yMid - shortAxisDistFromCenter * vectorX\r\n    const endX = xMid - shortAxisDistFromCenter * vectorY\r\n    const endY = yMid + shortAxisDistFromCenter * vectorX\r\n\r\n    // Update perpendicular line segment's points\r\n    data.handles.points[2] = viewport.canvasToWorld([startX, startY])\r\n    data.handles.points[3] = viewport.canvasToWorld([endX, endY])\r\n\r\n    data.invalidated = true\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    this.editData.hasMoved = true\r\n  }\r\n\r\n  _mouseDragModifyCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n    const { toolData, viewportUIDsToRender, handleIndex, movingTextBox } =\r\n      this.editData\r\n    const { data } = toolData\r\n    if (movingTextBox) {\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const { textBox } = data.handles\r\n      const { worldPosition } = textBox\r\n\r\n      worldPosition[0] += worldPosDelta[0]\r\n      worldPosition[1] += worldPosDelta[1]\r\n      worldPosition[2] += worldPosDelta[2]\r\n\r\n      textBox.hasMoved = true\r\n    } else if (handleIndex === undefined) {\r\n      // Moving tool\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n      const points = data.handles.points\r\n\r\n      points.forEach((point) => {\r\n        point[0] += worldPosDelta[0]\r\n        point[1] += worldPosDelta[1]\r\n        point[2] += worldPosDelta[2]\r\n      })\r\n    } else {\r\n      this._mouseDragModifyHandle(evt)\r\n    }\r\n\r\n    data.invalidated = true\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _mouseDragModifyHandle = (evt) => {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n    const { toolData, handleIndex } = this.editData\r\n    const { data } = toolData\r\n\r\n    // Moving handle\r\n    const worldPos = currentPoints.world\r\n    const canvasCoordHandlesCurrent = [\r\n      viewport.worldToCanvas(data.handles.points[0]),\r\n      viewport.worldToCanvas(data.handles.points[1]),\r\n      viewport.worldToCanvas(data.handles.points[2]),\r\n      viewport.worldToCanvas(data.handles.points[3]),\r\n    ]\r\n    // Which line is long? Which line is short?\r\n    const firstLineSegment = {\r\n      start: {\r\n        x: canvasCoordHandlesCurrent[0][0],\r\n        y: canvasCoordHandlesCurrent[0][1],\r\n      },\r\n      end: {\r\n        x: canvasCoordHandlesCurrent[1][0],\r\n        y: canvasCoordHandlesCurrent[1][1],\r\n      },\r\n    }\r\n    const secondLineSegment = {\r\n      start: {\r\n        x: canvasCoordHandlesCurrent[2][0],\r\n        y: canvasCoordHandlesCurrent[2][1],\r\n      },\r\n      end: {\r\n        x: canvasCoordHandlesCurrent[3][0],\r\n        y: canvasCoordHandlesCurrent[3][1],\r\n      },\r\n    }\r\n\r\n    // Handle we've selected's proposed point\r\n    const proposedPoint = <Types.Point3>[...worldPos]\r\n    const proposedCanvasCoord = viewport.worldToCanvas(proposedPoint)\r\n\r\n    if (handleIndex === 0 || handleIndex === 1) {\r\n      const fixedHandleIndex = handleIndex === 0 ? 1 : 0\r\n\r\n      const fixedCanvasCoord = canvasCoordHandlesCurrent[fixedHandleIndex]\r\n\r\n      // Check whether this\r\n      const proposedFirstLineSegment = {\r\n        start: {\r\n          x: fixedCanvasCoord[0],\r\n          y: fixedCanvasCoord[1],\r\n        },\r\n        end: {\r\n          x: proposedCanvasCoord[0],\r\n          y: proposedCanvasCoord[1],\r\n        },\r\n      }\r\n\r\n      if (\r\n        this._movingLongAxisWouldPutItThroughShortAxis(\r\n          proposedFirstLineSegment,\r\n          secondLineSegment\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // --> We need to preserve this distance\r\n      const intersectionPoint = lineSegment.intersectLine(\r\n        [secondLineSegment.start.x, secondLineSegment.start.y],\r\n        [secondLineSegment.end.x, secondLineSegment.end.y],\r\n        [firstLineSegment.start.x, firstLineSegment.start.y],\r\n        [firstLineSegment.end.x, firstLineSegment.end.y]\r\n      )\r\n\r\n      const intersectionCoord = vec2.create()\r\n\r\n      vec2.set(intersectionCoord, intersectionPoint[0], intersectionPoint[1])\r\n\r\n      // 1. distance from intersection point to start handle?\r\n      const distFromLeftHandle = vec2.distance(\r\n        <vec2>canvasCoordHandlesCurrent[2],\r\n        intersectionCoord\r\n      )\r\n\r\n      // 2. distance from intersection point to end handle?\r\n      const distFromRightHandle = vec2.distance(\r\n        <vec2>canvasCoordHandlesCurrent[3],\r\n        intersectionCoord\r\n      )\r\n\r\n      // 3. distance from long's opposite handle and intersect point\r\n      // Need new intersect x/y\r\n      const distIntersectAndFixedPoint = Math.abs(\r\n        vec2.distance(<vec2>fixedCanvasCoord, intersectionCoord)\r\n      )\r\n\r\n      // Find inclination of perpindicular\r\n      // Should use proposed point to find new inclination\r\n      const dx = fixedCanvasCoord[0] - proposedCanvasCoord[0]\r\n      const dy = fixedCanvasCoord[1] - proposedCanvasCoord[1]\r\n      const length = Math.sqrt(dx * dx + dy * dy)\r\n      const vectorX = dx / length\r\n      const vectorY = dy / length\r\n\r\n      // Find new intersection point\r\n      // --> fixedPoint, magnitude in perpendicular\r\n      // minus if right\r\n      // add if left\r\n      const intersectX =\r\n        fixedCanvasCoord[0] - distIntersectAndFixedPoint * vectorX\r\n      const intersectY =\r\n        fixedCanvasCoord[1] - distIntersectAndFixedPoint * vectorY\r\n\r\n      // short points 1/4 distance from center of long points\r\n      // Flip signs depending on grabbed handle\r\n      const mod = handleIndex === 0 ? -1 : 1\r\n      const leftX = intersectX + distFromLeftHandle * vectorY * mod\r\n      const leftY = intersectY - distFromLeftHandle * vectorX * mod\r\n      const rightX = intersectX - distFromRightHandle * vectorY * mod\r\n      const rightY = intersectY + distFromRightHandle * vectorX * mod\r\n\r\n      data.handles.points[handleIndex] = proposedPoint\r\n      data.handles.points[2] = viewport.canvasToWorld([leftX, leftY])\r\n      data.handles.points[3] = viewport.canvasToWorld([rightX, rightY])\r\n    } else {\r\n      // Translation manipulator\r\n      const translateHandleIndex = handleIndex === 2 ? 3 : 2\r\n\r\n      // does not rotate, but can translate entire line (other end of short)\r\n      const proposedCanvasCoordPoint = {\r\n        x: proposedCanvasCoord[0],\r\n        y: proposedCanvasCoord[1],\r\n      }\r\n      const canvasCoordsCurrent = {\r\n        longLineSegment: {\r\n          start: firstLineSegment.start,\r\n          end: firstLineSegment.end,\r\n        },\r\n        shortLineSegment: {\r\n          start: secondLineSegment.start,\r\n          end: secondLineSegment.end,\r\n        },\r\n      }\r\n\r\n      // get incline of other line (should not change w/ this movement)\r\n      const dx =\r\n        canvasCoordsCurrent.longLineSegment.start.x -\r\n        canvasCoordsCurrent.longLineSegment.end.x\r\n      const dy =\r\n        canvasCoordsCurrent.longLineSegment.start.y -\r\n        canvasCoordsCurrent.longLineSegment.end.y\r\n      const length = Math.sqrt(dx * dx + dy * dy)\r\n      const vectorX = dx / length\r\n      const vectorY = dy / length\r\n      // Create a helper line to find the intesection point in the long line\r\n      const highNumber = Number.MAX_SAFE_INTEGER\r\n      // Get the multiplier\r\n      // +1 or -1 depending on which perp end we grabbed (and if it was \"fixed\" end)\r\n      const mod = handleIndex === 0 || handleIndex === 3 ? 1 : -1\r\n      const multiplier = mod * highNumber\r\n      const helperLine = {\r\n        start: proposedCanvasCoordPoint, // could be start or end\r\n        end: {\r\n          x: proposedCanvasCoordPoint.x + vectorY * multiplier,\r\n          y: proposedCanvasCoordPoint.y + vectorX * multiplier * -1,\r\n        },\r\n      }\r\n\r\n      const newIntersectionPoint = lineSegment.intersectLine(\r\n        [\r\n          canvasCoordsCurrent.longLineSegment.start.x,\r\n          canvasCoordsCurrent.longLineSegment.start.y,\r\n        ],\r\n        [\r\n          canvasCoordsCurrent.longLineSegment.end.x,\r\n          canvasCoordsCurrent.longLineSegment.end.y,\r\n        ],\r\n        [helperLine.start.x, helperLine.start.y],\r\n        [helperLine.end.x, helperLine.end.y]\r\n      )\r\n\r\n      // short-circuit\r\n      if (newIntersectionPoint === undefined) {\r\n        return\r\n      }\r\n\r\n      // 1. distance from intersection point to start handle?\r\n      const distFromTranslateHandle = vec2.distance(\r\n        <vec2>canvasCoordHandlesCurrent[translateHandleIndex],\r\n        [newIntersectionPoint[0], newIntersectionPoint[1]]\r\n      )\r\n\r\n      // isStart if index is 0 or 2\r\n      const shortLineSegment = {\r\n        start: {\r\n          x: newIntersectionPoint[0] + vectorY * distFromTranslateHandle,\r\n          y: newIntersectionPoint[1] + vectorX * distFromTranslateHandle * -1,\r\n        },\r\n        end: {\r\n          x: newIntersectionPoint[0] + vectorY * distFromTranslateHandle * -1,\r\n          y: newIntersectionPoint[1] + vectorX * distFromTranslateHandle,\r\n        },\r\n      }\r\n      const translatedHandleCoords =\r\n        translateHandleIndex === 2\r\n          ? shortLineSegment.start\r\n          : shortLineSegment.end\r\n\r\n      data.handles.points[translateHandleIndex] = viewport.canvasToWorld([\r\n        translatedHandleCoords.x,\r\n        translatedHandleCoords.y,\r\n      ])\r\n      data.handles.points[handleIndex] = proposedPoint\r\n    }\r\n  }\r\n\r\n  _movingLongAxisWouldPutItThroughShortAxis = (\r\n    proposedFirstLineSegment,\r\n    secondLineSegment\r\n  ) => {\r\n    const vectorInSecondLineDirection = vec2.create()\r\n\r\n    vec2.set(\r\n      vectorInSecondLineDirection,\r\n      secondLineSegment.end.x - secondLineSegment.start.x,\r\n      secondLineSegment.end.y - secondLineSegment.start.y\r\n    )\r\n\r\n    vec2.normalize(vectorInSecondLineDirection, vectorInSecondLineDirection)\r\n\r\n    const extendedSecondLineSegment = {\r\n      start: {\r\n        x: secondLineSegment.start.x - vectorInSecondLineDirection[0] * 10,\r\n        y: secondLineSegment.start.y - vectorInSecondLineDirection[1] * 10,\r\n      },\r\n      end: {\r\n        x: secondLineSegment.end.x + vectorInSecondLineDirection[0] * 10,\r\n        y: secondLineSegment.end.y + vectorInSecondLineDirection[1] * 10,\r\n      },\r\n    }\r\n\r\n    // Add some buffer in the secondLineSegment when finding the proposedIntersectionPoint\r\n    // Of points to stop us getting stack when rotating quickly.\r\n\r\n    const proposedIntersectionPoint = lineSegment.intersectLine(\r\n      [extendedSecondLineSegment.start.x, extendedSecondLineSegment.start.y],\r\n      [extendedSecondLineSegment.end.x, extendedSecondLineSegment.end.y],\r\n      [proposedFirstLineSegment.start.x, proposedFirstLineSegment.start.y],\r\n      [proposedFirstLineSegment.end.x, proposedFirstLineSegment.end.y]\r\n    )\r\n\r\n    const wouldPutThroughShortAxis = !proposedIntersectionPoint\r\n\r\n    return wouldPutThroughShortAxis\r\n  }\r\n\r\n  _activateDraw = (element) => {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragDrawCallback)\r\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._mouseDragDrawCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragDrawCallback)\r\n  }\r\n\r\n  _deactivateDraw = (element) => {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragDrawCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_MOVE, this._mouseDragDrawCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragDrawCallback)\r\n  }\r\n\r\n  _activateModify = (element) => {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragModifyCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragModifyCallback)\r\n  }\r\n\r\n  _deactivateModify = (element) => {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(\r\n      EVENTS.MOUSE_DRAG,\r\n      this._mouseDragModifyCallback\r\n    )\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(\r\n      EVENTS.TOUCH_DRAG,\r\n      this._mouseDragModifyCallback\r\n    )\r\n  }\r\n\r\n  /**\r\n   * getToolState = Custom getToolStateMethod with filtering.\r\n   * @param element\r\n   */\r\n  filterInteractableToolStateForElement = (element, toolState) => {\r\n    if (!toolState || !toolState.length) {\r\n      return\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, scene } = enabledElement\r\n    const camera = viewport.getCamera()\r\n\r\n    const { spacingInNormalDirection } = getTargetVolume(scene, camera)\r\n\r\n    // Get data with same normal\r\n    const toolDataWithinSlice = getToolStateWithinSlice(\r\n      toolState,\r\n      camera,\r\n      spacingInNormalDirection\r\n    )\r\n\r\n    return toolDataWithinSlice\r\n  }\r\n\r\n  renderToolData(evt: CustomEvent, svgDrawingHelper: any): void {\r\n    const eventData = evt.detail\r\n    const { canvas: canvasElement } = eventData\r\n    let toolState = getToolState(svgDrawingHelper.enabledElement, this.name)\r\n\r\n    if (!toolState) {\r\n      return\r\n    }\r\n\r\n    toolState = this.filterInteractableToolStateForElement(\r\n      canvasElement,\r\n      toolState\r\n    )\r\n\r\n    if (!toolState.length) {\r\n      return\r\n    }\r\n\r\n    const { viewport } = svgDrawingHelper.enabledElement\r\n\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const toolData = toolState[i]\r\n      const settings = Settings.getObjectSettings(toolData, BidirectionalTool)\r\n      const annotationUID = toolData.metadata.toolUID\r\n      const data = toolData.data\r\n      const { points, activeHandleIndex } = data.handles\r\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p))\r\n      const lineWidth = this.getStyle(settings, 'lineWidth', toolData)\r\n      const lineDash = this.getStyle(settings, 'lineDash', toolData)\r\n      const color = this.getStyle(settings, 'color', toolData)\r\n\r\n      if (data.invalidated) {\r\n        this._throttledCalculateCachedStats(data)\r\n      }\r\n\r\n      let activeHandleCanvasCoords\r\n\r\n      if (!this.editData && activeHandleIndex !== null) {\r\n        // Not creating and hovering over handle, so render handle.\r\n\r\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]]\r\n      }\r\n\r\n      if (activeHandleCanvasCoords) {\r\n        const handleGroupUID = '0'\r\n\r\n        drawHandlesSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          handleGroupUID,\r\n          activeHandleCanvasCoords,\r\n          {\r\n            color,\r\n          }\r\n        )\r\n      }\r\n\r\n      const lineUID = '0'\r\n      drawLineSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        lineUID,\r\n        canvasCoordinates[0],\r\n        canvasCoordinates[1],\r\n        {\r\n          color,\r\n          lineDash,\r\n          lineWidth,\r\n        }\r\n      )\r\n\r\n      const secondLineUID = '1'\r\n      drawLineSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        secondLineUID,\r\n        canvasCoordinates[2],\r\n        canvasCoordinates[3],\r\n        {\r\n          color,\r\n          lineDash,\r\n          lineWidth,\r\n        }\r\n      )\r\n\r\n      const textLines = this._getTextLines(data)\r\n\r\n      if (!textLines || textLines.length === 0) {\r\n        continue\r\n      }\r\n      let canvasTextBoxCoords\r\n\r\n      if (!data.handles.textBox.hasMoved) {\r\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates)\r\n\r\n        data.handles.textBox.worldPosition =\r\n          viewport.canvasToWorld(canvasTextBoxCoords)\r\n      }\r\n\r\n      const textBoxPosition = viewport.worldToCanvas(\r\n        data.handles.textBox.worldPosition\r\n      )\r\n\r\n      const textBoxUID = '1'\r\n      const boundingBox = drawLinkedTextBoxSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        textBoxUID,\r\n        textLines,\r\n        textBoxPosition,\r\n        canvasCoordinates,\r\n        {},\r\n        this.getLinkedTextBoxStyle(settings, toolData)\r\n      )\r\n\r\n      const { x: left, y: top, width, height } = boundingBox\r\n\r\n      data.handles.textBox.worldBoundingBox = {\r\n        topLeft: viewport.canvasToWorld([left, top]),\r\n        topRight: viewport.canvasToWorld([left + width, top]),\r\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\r\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\r\n      }\r\n    }\r\n  }\r\n\r\n  _getTextLines = (data) => {\r\n    const { cachedStats } = data\r\n    const { length, width } = cachedStats\r\n\r\n    if (length === undefined) {\r\n      return\r\n    }\r\n\r\n    // spaceBetweenSlices & pixelSpacing &\r\n    // magnitude in each direction? Otherwise, this is \"px\"?\r\n    const textLines = [\r\n      `L: ${length.toFixed(2)} mm`,\r\n      `W: ${width.toFixed(2)} mm`,\r\n    ]\r\n\r\n    return textLines\r\n  }\r\n\r\n  _calculateCachedStats = (data) => {\r\n    const worldPos1 = data.handles.points[0]\r\n    const worldPos2 = data.handles.points[1]\r\n    const worldPos3 = data.handles.points[2]\r\n    const worldPos4 = data.handles.points[3]\r\n\r\n    // https://github.com/Kitware/vtk-js/blob/b50fd091cb9b5b65981bc7c64af45e8f2472d7a1/Sources/Common/Core/Math/index.js#L331\r\n    const dist1 = Math.sqrt(\r\n      vtkMath.distance2BetweenPoints(worldPos1, worldPos2)\r\n    )\r\n    const dist2 = Math.sqrt(\r\n      vtkMath.distance2BetweenPoints(worldPos3, worldPos4)\r\n    )\r\n    const length = dist1 > dist2 ? dist1 : dist2\r\n    const width = dist1 > dist2 ? dist2 : dist1\r\n\r\n    data.cachedStats = {\r\n      length,\r\n      width,\r\n    }\r\n\r\n    data.invalidated = false\r\n  }\r\n\r\n  _isInsideVolume = (index1, index2, dimensions) => {\r\n    return (\r\n      indexWithinDimensions(index1, dimensions) &&\r\n      indexWithinDimensions(index2, dimensions)\r\n    )\r\n  }\r\n\r\n  _clipIndexToVolume = (index, dimensions) => {\r\n    for (let i = 0; i <= 2; i++) {\r\n      if (index[i] < 0) {\r\n        index[i] = 0\r\n      } else if (index[i] >= dimensions[i]) {\r\n        index[i] = dimensions[i] - 1\r\n      }\r\n    }\r\n  }\r\n\r\n  _getTargetVolumeUID = (scene) => {\r\n    if (this.configuration.volumeUID) {\r\n      return this.configuration.volumeUID\r\n    }\r\n\r\n    const volumeActors = scene.getVolumeActors()\r\n\r\n    if (!volumeActors && !volumeActors.length) {\r\n      // No stack to scroll through\r\n      return\r\n    }\r\n\r\n    return volumeActors[0].uid\r\n  }\r\n}\r\n","import vtkMath from 'vtk.js/Sources/Common/Core/Math'\r\nimport { vec2 } from 'gl-matrix'\r\nimport {\r\n  getEnabledElement,\r\n  VIEWPORT_TYPE,\r\n  getVolume,\r\n  StackViewport,\r\n  Settings,\r\n} from '@ohif/cornerstone-render'\r\n\r\nimport { getToolStateForDisplay, getImageIdForTool } from '../../util/planar'\r\nimport { BaseAnnotationTool } from '../base'\r\nimport throttle from '../../util/throttle'\r\nimport { addToolState, getToolState } from '../../stateManagement/toolState'\r\nimport { lineSegment } from '../../util/math'\r\nimport {\r\n  drawHandles as drawHandlesSvg,\r\n  drawLine as drawLineSvg,\r\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\r\n} from '../../drawingSvg'\r\nimport { state } from '../../store'\r\nimport { CornerstoneTools3DEvents as EVENTS } from '../../enums'\r\nimport { getViewportUIDsWithToolToRender } from '../../util/viewportFilters'\r\nimport { indexWithinDimensions } from '../../util/vtkjs'\r\nimport { getTextBoxCoordsCanvas } from '../../util/drawing'\r\nimport { showToolCursor, hideToolCursor } from '../../store/toolCursor'\r\nimport { ToolSpecificToolData } from '../../types'\r\n\r\nclass LengthTool extends BaseAnnotationTool {\r\n  public touchDragCallback: any\r\n  public mouseDragCallback: any\r\n  _throttledCalculateCachedStats: any\r\n  editData: {\r\n    toolData: any\r\n    viewportUIDsToRender: string[]\r\n    handleIndex?: number\r\n    movingTextBox?: boolean\r\n    newAnnotation?: boolean\r\n    hasMoved?: boolean\r\n  } | null\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'Length',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: {\r\n        shadow: true,\r\n      },\r\n    })\r\n\r\n    /**\r\n     * Will only fire fore cornerstone events:\r\n     * - TOUCH_DRAG\r\n     * - MOUSE_DRAG\r\n     *\r\n     * Given that the tool is active and has matching bindings for the\r\n     * underlying touch/mouse event.\r\n     */\r\n    this._activateModify = this._activateModify.bind(this)\r\n    this._deactivateModify = this._deactivateModify.bind(this)\r\n    this._mouseUpCallback = this._mouseUpCallback.bind(this)\r\n    this._mouseDragCallback = this._mouseDragCallback.bind(this)\r\n\r\n    this._throttledCalculateCachedStats = throttle(\r\n      this._calculateCachedStats,\r\n      100,\r\n      { trailing: true }\r\n    )\r\n  }\r\n\r\n  addNewMeasurement(evt: CustomEvent): ToolSpecificToolData {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const worldPos = currentPoints.world\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, renderingEngine } = enabledElement\r\n\r\n    hideToolCursor(element)\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewPlaneNormal, viewUp } = camera\r\n\r\n    // TODO: what do we do here? this feels wrong\r\n    let referencedImageId\r\n    if (viewport instanceof StackViewport) {\r\n      referencedImageId =\r\n        viewport.getCurrentImageId && viewport.getCurrentImageId()\r\n    } else {\r\n      const { volumeUID } = this.configuration\r\n      const imageVolume = getVolume(volumeUID)\r\n      referencedImageId = getImageIdForTool(\r\n        worldPos,\r\n        viewPlaneNormal,\r\n        viewUp,\r\n        imageVolume\r\n      )\r\n    }\r\n\r\n    if (referencedImageId) {\r\n      const colonIndex = referencedImageId.indexOf(':')\r\n      referencedImageId = referencedImageId.substring(colonIndex + 1)\r\n    }\r\n\r\n    const toolData = {\r\n      metadata: {\r\n        viewPlaneNormal: [...viewPlaneNormal],\r\n        viewUp: [...viewUp],\r\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\r\n        referencedImageId,\r\n        toolName: this.name,\r\n      },\r\n      data: {\r\n        invalidated: true,\r\n        handles: {\r\n          points: [[...worldPos], [...worldPos]],\r\n          activeHandleIndex: null,\r\n          textBox: {\r\n            hasMoved: false,\r\n            worldPosition: [0, 0, 0],\r\n          },\r\n        },\r\n        cachedStats: {},\r\n        active: true,\r\n      },\r\n    } as ToolSpecificToolData\r\n\r\n    // Ensure settings are initialized after tool data instantiation\r\n    Settings.getObjectSettings(toolData, LengthTool)\r\n\r\n    addToolState(element, toolData)\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex: 1,\r\n      movingTextBox: false,\r\n      newAnnotation: true,\r\n      hasMoved: false,\r\n    }\r\n    this._activateDraw(element)\r\n\r\n    evt.preventDefault()\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    return toolData\r\n  }\r\n\r\n  getHandleNearImagePoint(element, toolData, canvasCoords, proximity) {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const { points, textBox } = data.handles\r\n    const { worldBoundingBox } = textBox\r\n\r\n    if (worldBoundingBox) {\r\n      const canvasBoundingBox = {\r\n        topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\r\n        topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\r\n        bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\r\n        bottomRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\r\n      }\r\n\r\n      if (\r\n        canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\r\n        canvasCoords[0] <= canvasBoundingBox.bottomRight[0] &&\r\n        canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\r\n        canvasCoords[1] <= canvasBoundingBox.bottomRight[1]\r\n      ) {\r\n        data.handles.activeHandleIndex = null\r\n        return textBox\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i]\r\n      const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n\r\n      const near =\r\n        vec2.distance(canvasCoords, <vec2>toolDataCanvasCoordinate) < proximity\r\n\r\n      if (near === true) {\r\n        data.handles.activeHandleIndex = i\r\n        return point\r\n      }\r\n    }\r\n\r\n    data.handles.activeHandleIndex = null\r\n  }\r\n\r\n  pointNearTool(element, toolData, canvasCoords, proximity) {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n    const { data } = toolData\r\n    const [point1, point2] = data.handles.points\r\n    const canvasPoint1 = viewport.worldToCanvas(point1)\r\n    const canvasPoint2 = viewport.worldToCanvas(point2)\r\n\r\n    const line = {\r\n      start: {\r\n        x: canvasPoint1[0],\r\n        y: canvasPoint1[1],\r\n      },\r\n      end: {\r\n        x: canvasPoint2[0],\r\n        y: canvasPoint2[1],\r\n      },\r\n    }\r\n\r\n    const distanceToPoint = lineSegment.distanceToPoint(\r\n      [line.start.x, line.start.y],\r\n      [line.end.x, line.end.y],\r\n      [canvasCoords[0], canvasCoords[1]]\r\n    )\r\n\r\n    if (distanceToPoint <= proximity) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  toolSelectedCallback(evt, toolData, interactionType = 'mouse') {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      movingTextBox: false,\r\n    }\r\n\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  handleSelectedCallback(evt, toolData, handle, interactionType = 'mouse') {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    let movingTextBox = false\r\n    let handleIndex\r\n\r\n    if (handle.worldPosition) {\r\n      movingTextBox = true\r\n    } else {\r\n      handleIndex = data.handles.points.findIndex((p) => p === handle)\r\n    }\r\n\r\n    // Find viewports to render on drag.\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex,\r\n      movingTextBox,\r\n    }\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  _mouseUpCallback(evt) {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      newAnnotation,\r\n      hasMoved,\r\n    } = this.editData\r\n    const { data } = toolData\r\n\r\n    if (newAnnotation && !hasMoved) {\r\n      return\r\n    }\r\n\r\n    data.active = false\r\n    data.handles.activeHandleIndex = null\r\n\r\n    this._deactivateModify(element)\r\n    this._deactivateDraw(element)\r\n    showToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    this.editData = null\r\n  }\r\n\r\n  _mouseDragCallback(evt) {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex,\r\n      movingTextBox,\r\n    } = this.editData\r\n    const { data } = toolData\r\n\r\n    if (movingTextBox) {\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const { textBox } = data.handles\r\n      const { worldPosition } = textBox\r\n\r\n      worldPosition[0] += worldPosDelta[0]\r\n      worldPosition[1] += worldPosDelta[1]\r\n      worldPosition[2] += worldPosDelta[2]\r\n\r\n      textBox.hasMoved = true\r\n    } else if (handleIndex === undefined) {\r\n      // Moving tool\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const points = data.handles.points\r\n\r\n      points.forEach((point) => {\r\n        point[0] += worldPosDelta[0]\r\n        point[1] += worldPosDelta[1]\r\n        point[2] += worldPosDelta[2]\r\n      })\r\n    } else {\r\n      // Moving handle\r\n      const { currentPoints } = eventData\r\n      const worldPos = currentPoints.world\r\n\r\n      data.handles.points[handleIndex] = [...worldPos]\r\n    }\r\n\r\n    data.invalidated = true\r\n    this.editData.hasMoved = true\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _activateModify(element) {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  _deactivateModify(element) {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  _activateDraw(element) {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  _deactivateDraw(element) {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_MOVE, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  /**\r\n   * getToolState = Custom getToolStateMethod with filtering.\r\n   * @param element\r\n   * @param toolState\r\n   */\r\n  filterInteractableToolStateForElement(element, toolState) {\r\n    if (!toolState || !toolState.length) {\r\n      return\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    return getToolStateForDisplay(viewport, toolState)\r\n  }\r\n\r\n  renderToolData(evt: CustomEvent, svgDrawingHelper: any): void {\r\n    const eventData = evt.detail\r\n    const { canvas: canvasElement } = eventData\r\n    let toolState = getToolState(svgDrawingHelper.enabledElement, this.name)\r\n\r\n    if (!toolState) {\r\n      return\r\n    }\r\n\r\n    toolState = this.filterInteractableToolStateForElement(\r\n      canvasElement,\r\n      toolState\r\n    )\r\n\r\n    if (!toolState.length) {\r\n      return\r\n    }\r\n\r\n    const { viewport } = svgDrawingHelper.enabledElement\r\n\r\n    let targetVolumeUID\r\n    if (viewport.type === VIEWPORT_TYPE.STACK) {\r\n      targetVolumeUID = 'targetVolumeUID'\r\n    } else if (viewport.type === VIEWPORT_TYPE.ORTHOGRAPHIC) {\r\n      const scene = viewport.getScene()\r\n      targetVolumeUID = this._getTargetVolumeUID(scene)\r\n    } else {\r\n      throw new Error(`Viewport Type not supported: ${viewport.type}`)\r\n    }\r\n\r\n    // Draw SVG\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const toolData = toolState[i]\r\n      const settings = Settings.getObjectSettings(toolData, LengthTool)\r\n      const annotationUID = toolData.metadata.toolUID\r\n      const data = toolData.data\r\n      const { points, activeHandleIndex } = data.handles\r\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p))\r\n      const lineWidth = this.getStyle(settings, 'lineWidth', toolData)\r\n      const lineDash = this.getStyle(settings, 'lineDash', toolData)\r\n      const color = this.getStyle(settings, 'color', toolData)\r\n\r\n      let activeHandleCanvasCoords\r\n\r\n      if (!this.editData && activeHandleIndex !== null) {\r\n        // Not creating and hovering over handle, so render handle.\r\n\r\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]]\r\n      }\r\n\r\n      if (activeHandleCanvasCoords) {\r\n        const handleGroupUID = '0'\r\n\r\n        drawHandlesSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          handleGroupUID,\r\n          canvasCoordinates,\r\n          {\r\n            color,\r\n          }\r\n        )\r\n      }\r\n\r\n      const lineUID = '1'\r\n      drawLineSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        lineUID,\r\n        canvasCoordinates[0],\r\n        canvasCoordinates[1],\r\n        {\r\n          color,\r\n          lineDash,\r\n          lineWidth,\r\n        }\r\n      )\r\n\r\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\r\n      if (!data.cachedStats[targetVolumeUID]) {\r\n        data.cachedStats[targetVolumeUID] = {}\r\n\r\n        this._calculateCachedStats(data)\r\n      } else if (data.invalidated) {\r\n        this._throttledCalculateCachedStats(data)\r\n      }\r\n\r\n      const textLines = this._getTextLines(data, targetVolumeUID)\r\n\r\n      // Need to update to sync w/ annotation while unlinked/not moved\r\n      if (!data.handles.textBox.hasMoved) {\r\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates)\r\n\r\n        data.handles.textBox.worldPosition = viewport.canvasToWorld(\r\n          canvasTextBoxCoords\r\n        )\r\n      }\r\n\r\n      const textBoxPosition = viewport.worldToCanvas(\r\n        data.handles.textBox.worldPosition\r\n      )\r\n\r\n      const textBoxUID = '1'\r\n      const boundingBox = drawLinkedTextBoxSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        textBoxUID,\r\n        textLines,\r\n        textBoxPosition,\r\n        canvasCoordinates,\r\n        {},\r\n        this.getLinkedTextBoxStyle(settings, toolData)\r\n      )\r\n\r\n      const { x: left, y: top, width, height } = boundingBox\r\n\r\n      data.handles.textBox.worldBoundingBox = {\r\n        topLeft: viewport.canvasToWorld([left, top]),\r\n        topRight: viewport.canvasToWorld([left + width, top]),\r\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\r\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\r\n      }\r\n    }\r\n  }\r\n\r\n  _findTextBoxAnchorPoints(points) {\r\n    return [\r\n      points[0],\r\n      points[1],\r\n      [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2],\r\n    ]\r\n  }\r\n\r\n  _getTextLines(data, targetVolumeUID) {\r\n    const cachedVolumeStats = data.cachedStats[targetVolumeUID]\r\n    const { length } = cachedVolumeStats\r\n\r\n    if (length === undefined) {\r\n      return\r\n    }\r\n\r\n    // spaceBetweenSlices & pixelSpacing &\r\n    // magnitude in each direction? Otherwise, this is \"px\"?\r\n    const textLines = [`${length.toFixed(2)} mm`]\r\n\r\n    return textLines\r\n  }\r\n\r\n  _calculateCachedStats(data) {\r\n    const worldPos1 = data.handles.points[0]\r\n    const worldPos2 = data.handles.points[1]\r\n    const { cachedStats } = data\r\n    const volumeUIDs = Object.keys(cachedStats)\r\n\r\n    // TODO clean up, this doesn't need a length per volume, it has no stats derived from volumes.\r\n\r\n    for (let i = 0; i < volumeUIDs.length; i++) {\r\n      const volumeUID = volumeUIDs[i]\r\n\r\n      // TODO: Why are we doing a sqrt here?\r\n      const length = Math.sqrt(\r\n        vtkMath.distance2BetweenPoints(worldPos1, worldPos2)\r\n      )\r\n\r\n      // TODO -> Do we instead want to clip to the bounds of the volume and only include that portion?\r\n      // Seems like a lot of work for an unrealistic case. At the moment bail out of stat calculation if either\r\n      // corner is off the canvas.\r\n\r\n      cachedStats[volumeUID] = {\r\n        length,\r\n      }\r\n    }\r\n\r\n    data.invalidated = false\r\n\r\n    return cachedStats\r\n  }\r\n\r\n  _isInsideVolume(index1, index2, dimensions) {\r\n    return (\r\n      indexWithinDimensions(index1, dimensions) &&\r\n      indexWithinDimensions(index2, dimensions)\r\n    )\r\n  }\r\n\r\n  _clipIndexToVolume(index, dimensions) {\r\n    for (let i = 0; i <= 2; i++) {\r\n      if (index[i] < 0) {\r\n        index[i] = 0\r\n      } else if (index[i] >= dimensions[i]) {\r\n        index[i] = dimensions[i] - 1\r\n      }\r\n    }\r\n  }\r\n\r\n  _getTargetVolumeUID(scene) {\r\n    if (this.configuration.volumeUID) {\r\n      return this.configuration.volumeUID\r\n    }\r\n\r\n    const volumeActors = scene.getVolumeActors()\r\n\r\n    if (!volumeActors && !volumeActors.length) {\r\n      // No stack to scroll through\r\n      return\r\n    }\r\n\r\n    return volumeActors[0].uid\r\n  }\r\n}\r\n\r\nexport default LengthTool\r\n","import { metaData } from '@ohif/cornerstone-render'\r\nimport { vec3 } from 'gl-matrix'\r\nimport math from '../math'\r\nimport { Point3 } from '@ohif/cornerstone-render'\r\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection'\r\n\r\nexport default function getImageIdForTool(\r\n  worldPos: Point3,\r\n  viewPlaneNormal: Point3,\r\n  viewUp: Point3,\r\n  imageVolume\r\n): string {\r\n  const { direction, imageIds } = imageVolume\r\n\r\n  // 1. Get ScanAxis vector\r\n  const kVector = direction.slice(6, 9)\r\n\r\n  // 2. Check if scanAxis is not parallel to camera viewPlaneNormal\r\n  const dotProducts = vec3.dot(kVector, <vec3>viewPlaneNormal)\r\n\r\n  // 2.a if imagePlane is not parallel to the camera: tool is not drawn on an\r\n  // imaging plane, return\r\n  if (Math.abs(dotProducts) < 0.99) {\r\n    return\r\n  }\r\n\r\n  // 3. Calculate Spacing the in the normal direction, this will get used to\r\n  // check whether we are withing a slice\r\n  const spacingInNormalDirection = getSpacingInNormalDirection(\r\n    imageVolume,\r\n    viewPlaneNormal\r\n  )\r\n\r\n  const halfSpacingInNormalDirection = spacingInNormalDirection / 2\r\n\r\n  // 4. Iterate over all imageIds and check if the tool point (worldPos) is\r\n  // withing one of the slices defined by an imageId\r\n  let imageIdForTool\r\n  for (let i = 0; i < imageIds.length; i++) {\r\n    const imageId = imageIds[i]\r\n\r\n    // 4.a Get metadata for the imageId\r\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId)\r\n\r\n    // 4.b Calculate the direction vector from toolData point to the first voxel\r\n    // of this image defined by imageId\r\n    const dir = vec3.create()\r\n    vec3.sub(dir, worldPos, imagePositionPatient)\r\n\r\n    // 4.c Calculate the distance between the vector above and the viewplaneNormal\r\n    // i.e., projected distance\r\n    const dot = vec3.dot(dir, viewPlaneNormal)\r\n\r\n    // 4.d If the distance is withing range, return the imageId\r\n    if (Math.abs(dot) < halfSpacingInNormalDirection) {\r\n      imageIdForTool = imageId\r\n    }\r\n  }\r\n\r\n  return imageIdForTool\r\n}\r\n","import getTargetVolume from './getTargetVolume'\r\nimport getToolStateWithinSlice from './getToolStateWithinSlice'\r\nimport {\r\n  StackViewport,\r\n  VIEWPORT_TYPE,\r\n  VolumeViewport,\r\n  IViewport,\r\n} from '@ohif/cornerstone-render'\r\n\r\n// const { ICamera } = Types\r\n\r\nexport default function getToolStateForDisplay(viewport: IViewport, toolState) {\r\n  if (viewport instanceof StackViewport) {\r\n    // 1. Get the currently displayed imageId from the StackViewport\r\n    let imageId = viewport.getCurrentImageId()\r\n\r\n    // 2. remove the dataLoader scheme\r\n    const colonIndex = imageId.indexOf(':')\r\n    imageId = imageId.substring(colonIndex + 1)\r\n\r\n    // 3. Filter tool data in the frame of reference by the referenced image ID property\r\n    return toolState.filter((toolData) => {\r\n      return toolData.metadata.referencedImageId === imageId\r\n    })\r\n  } else if (viewport instanceof VolumeViewport) {\r\n    const scene = viewport.getScene()\r\n    const camera = viewport.getCamera()\r\n\r\n    const { spacingInNormalDirection } = getTargetVolume(scene, camera)\r\n\r\n    // Get data with same normal\r\n    return getToolStateWithinSlice(toolState, camera, spacingInNormalDirection)\r\n  } else {\r\n    throw new Error(`Viewport Type ${viewport.type} not supported`)\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { BaseAnnotationTool } from '../base'\r\n// ~~ VTK Viewport\r\nimport {\r\n  Settings,\r\n  getEnabledElement,\r\n  getVolume,\r\n  StackViewport,\r\n  Types,\r\n} from '@ohif/cornerstone-render'\r\nimport { getTargetVolume, getToolStateWithinSlice } from '../../util/planar'\r\nimport { addToolState, getToolState } from '../../stateManagement/toolState'\r\nimport {\r\n  drawHandles as drawHandlesSvg,\r\n  drawTextBox as drawTextBoxSvg,\r\n} from '../../drawingSvg'\r\nimport { vec2 } from 'gl-matrix'\r\nimport { state } from '../../store'\r\nimport { CornerstoneTools3DEvents as EVENTS } from '../../enums'\r\nimport { getViewportUIDsWithToolToRender } from '../../util/viewportFilters'\r\nimport { indexWithinDimensions } from '../../util/vtkjs'\r\nimport { showToolCursor, hideToolCursor } from '../../store/toolCursor'\r\nimport { ToolSpecificToolData } from '../../types'\r\n\r\nexport default class ProbeTool extends BaseAnnotationTool {\r\n  touchDragCallback: any\r\n  mouseDragCallback: any\r\n  editData: { toolData: any; viewportUIDsToRender: string[] } | null\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    const defaultToolConfiguration = {\r\n      name: 'Probe',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: { shadow: true },\r\n    }\r\n\r\n    super(toolConfiguration, defaultToolConfiguration)\r\n\r\n    /**\r\n     * Will only fire fore cornerstone events:\r\n     * - TOUCH_DRAG\r\n     * - MOUSE_DRAG\r\n     *\r\n     * Given that the tool is active and has matching bindings for the\r\n     * underlying touch/mouse event.\r\n     */\r\n    this._activateModify = this._activateModify.bind(this)\r\n    this._deactivateModify = this._deactivateModify.bind(this)\r\n    this._mouseUpCallback = this._mouseUpCallback.bind(this)\r\n    this._mouseDragCallback = this._mouseDragCallback.bind(this)\r\n  }\r\n\r\n  // Not necessary for this tool but needs to be defined since it's an abstract\r\n  // method from the parent class.\r\n  pointNearTool(): boolean {\r\n    return false\r\n  }\r\n\r\n  toolSelectedCallback() {}\r\n\r\n  addNewMeasurement(evt: CustomEvent): ToolSpecificToolData {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const worldPos = currentPoints.world\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, renderingEngine } = enabledElement\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewPlaneNormal, viewUp } = camera\r\n\r\n    let referencedImageId\r\n    if (viewport instanceof StackViewport) {\r\n      referencedImageId = viewport.getCurrentImageId()\r\n    }\r\n    const toolData = {\r\n      metadata: {\r\n        viewPlaneNormal: [...viewPlaneNormal],\r\n        viewUp: [...viewUp],\r\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\r\n        referencedImageId,\r\n        toolName: this.name,\r\n      },\r\n      data: {\r\n        invalidated: true,\r\n        handles: { points: [[...worldPos]] },\r\n        cachedStats: {},\r\n        active: true,\r\n      },\r\n    } as ToolSpecificToolData\r\n\r\n    // Ensure settings are initialized after tool data instantiation\r\n    Settings.getObjectSettings(toolData, ProbeTool)\r\n\r\n    addToolState(element, toolData)\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n    }\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    return toolData\r\n  }\r\n\r\n  getHandleNearImagePoint(element, toolData, canvasCoords, proximity) {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const point = data.handles.points[0]\r\n    const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n\r\n    const near =\r\n      vec2.distance(canvasCoords, <vec2>toolDataCanvasCoordinate) < proximity\r\n\r\n    if (near === true) {\r\n      return point\r\n    }\r\n\r\n    return near\r\n  }\r\n\r\n  handleSelectedCallback(evt, toolData, handle, interactionType = 'mouse') {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    // Find viewports to render on drag.\r\n\r\n    this.editData = {\r\n      //handle, // This would be useful for other tools with more than one handle\r\n      toolData,\r\n      viewportUIDsToRender,\r\n    }\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  _mouseUpCallback(evt) {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { toolData, viewportUIDsToRender } = this.editData\r\n    const { data } = toolData\r\n\r\n    data.active = false\r\n\r\n    this._deactivateModify(element)\r\n\r\n    showToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    this.editData = null\r\n  }\r\n\r\n  _mouseDragCallback(evt) {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const worldPos = currentPoints.world\r\n\r\n    const { toolData, viewportUIDsToRender } = this.editData\r\n    const { data } = toolData\r\n\r\n    data.handles.points[0] = [...worldPos]\r\n    data.invalidated = true\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _activateModify(element) {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  _deactivateModify(element) {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  /**\r\n   * getToolState = Custom getToolStateMethod with filtering.\r\n   * @param element\r\n   */\r\n  filterInteractableToolStateForElement(element, toolState) {\r\n    if (!toolState || !toolState.length) {\r\n      return\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, scene } = enabledElement\r\n    const camera = viewport.getCamera()\r\n\r\n    // TODO -> Cache this on camera change and on volume added?\r\n    const { spacingInNormalDirection } = getTargetVolume(scene, camera)\r\n\r\n    // Get data with same normal\r\n    const toolDataWithinSlice = getToolStateWithinSlice(\r\n      toolState,\r\n      camera,\r\n      spacingInNormalDirection\r\n    )\r\n\r\n    return toolDataWithinSlice\r\n  }\r\n\r\n  renderToolData(evt: CustomEvent, svgDrawingHelper: any): void {\r\n    const eventData = evt.detail\r\n    const { canvas: canvasElement } = eventData\r\n\r\n    let toolState = getToolState(svgDrawingHelper.enabledElement, this.name)\r\n\r\n    if (!toolState) {\r\n      return\r\n    }\r\n\r\n    toolState = this.filterInteractableToolStateForElement(\r\n      canvasElement,\r\n      toolState\r\n    )\r\n\r\n    if (!toolState.length) {\r\n      return\r\n    }\r\n\r\n    const { viewport, scene } = svgDrawingHelper.enabledElement\r\n    const targetVolumeUID = this._getTargetVolumeUID(scene)\r\n\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const toolData = toolState[i]\r\n      const settings = Settings.getObjectSettings(toolData, ProbeTool)\r\n      const annotationUID = toolData.metadata.toolUID\r\n      const data = toolData.data\r\n      const point = data.handles.points[0]\r\n      const canvasCoordinates = viewport.worldToCanvas(point)\r\n      const color = this.getStyle(settings, 'color', toolData)\r\n\r\n      if (!data.cachedStats[targetVolumeUID]) {\r\n        data.cachedStats[targetVolumeUID] = {}\r\n        this._calculateCachedStats(data)\r\n      } else if (data.invalidated) {\r\n        this._calculateCachedStats(data)\r\n      }\r\n\r\n      const handleGroupUID = '0'\r\n\r\n      drawHandlesSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        handleGroupUID,\r\n        [canvasCoordinates],\r\n        { color }\r\n      )\r\n\r\n      const textLines = this._getTextLines(data, targetVolumeUID)\r\n      if (textLines) {\r\n        const textCanvasCoorinates = [\r\n          canvasCoordinates[0] + 6,\r\n          canvasCoordinates[1] - 6,\r\n        ]\r\n\r\n        const textUID = '0'\r\n        drawTextBoxSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          textUID,\r\n          textLines,\r\n          [textCanvasCoorinates[0], textCanvasCoorinates[1]],\r\n          this.getLinkedTextBoxStyle(settings, toolData)\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  _getTextLines(data, targetVolumeUID) {\r\n    const cachedVolumeStats = data.cachedStats[targetVolumeUID]\r\n    const { index, value, Modality } = cachedVolumeStats\r\n\r\n    if (value === undefined) {\r\n      return\r\n    }\r\n\r\n    const textLines = []\r\n\r\n    textLines.push(`(${index[0]}, ${index[1]}, ${index[2]})`)\r\n\r\n    if (Modality === 'PT') {\r\n      // Check if we have scaling for the other 2 SUV types for the PET.\r\n\r\n      const imageVolume = getVolume(targetVolumeUID)\r\n\r\n      if (\r\n        imageVolume.scaling.PET &&\r\n        (imageVolume.scaling.PET.suvbwToSuvbsa ||\r\n          imageVolume.scaling.PET.suvbwToSuvlbm)\r\n      ) {\r\n        const { suvbwToSuvlbm, suvbwToSuvbsa } = imageVolume.scaling.PET\r\n\r\n        textLines.push(`${value.toFixed(2)} SUV bw`)\r\n\r\n        if (suvbwToSuvlbm) {\r\n          const SUVLbm = value * suvbwToSuvlbm\r\n\r\n          textLines.push(`${SUVLbm.toFixed(2)} SUV lbm`)\r\n        }\r\n\r\n        if (suvbwToSuvlbm) {\r\n          const SUVBsa = value * suvbwToSuvbsa\r\n\r\n          textLines.push(`${SUVBsa.toFixed(2)} SUV bsa`)\r\n        }\r\n      } else {\r\n        textLines.push(`${value.toFixed(2)} SUV`)\r\n      }\r\n    } else if (Modality === 'CT') {\r\n      textLines.push(`${value.toFixed(2)} HU`)\r\n    } else {\r\n      textLines.push(`${value.toFixed(2)} MO`)\r\n    }\r\n\r\n    return textLines\r\n  }\r\n\r\n  _calculateCachedStats(data) {\r\n    const worldPos = data.handles.points[0]\r\n    const { cachedStats } = data\r\n\r\n    const volumeUIDs = Object.keys(cachedStats)\r\n\r\n    for (let i = 0; i < volumeUIDs.length; i++) {\r\n      const volumeUID = volumeUIDs[i]\r\n      const imageVolume = getVolume(volumeUID)\r\n\r\n      const {\r\n        dimensions,\r\n        scalarData,\r\n        vtkImageData: imageData,\r\n        metadata,\r\n      } = imageVolume\r\n      const index = <Types.Point3>[0, 0, 0]\r\n\r\n      imageData.worldToIndexVec3(worldPos, index)\r\n\r\n      index[0] = Math.floor(index[0])\r\n      index[1] = Math.floor(index[1])\r\n      index[2] = Math.floor(index[2])\r\n\r\n      if (indexWithinDimensions(index, dimensions)) {\r\n        const yMultiple = dimensions[0]\r\n        const zMultiple = dimensions[0] * dimensions[1]\r\n\r\n        const value =\r\n          scalarData[index[2] * zMultiple + index[1] * yMultiple + index[0]]\r\n\r\n        cachedStats[volumeUID] = {\r\n          index,\r\n          value,\r\n          Modality: metadata.Modality,\r\n        }\r\n      } else {\r\n        cachedStats[volumeUID] = {\r\n          index,\r\n          Modality: metadata.Modality,\r\n        }\r\n      }\r\n    }\r\n\r\n    data.invalidated = false\r\n  }\r\n\r\n  _getTargetVolumeUID(scene) {\r\n    if (this.configuration.volumeUID) {\r\n      return this.configuration.volumeUID\r\n    }\r\n\r\n    const volumeActors = scene.getVolumeActors()\r\n\r\n    if (!volumeActors && !volumeActors.length) {\r\n      // No stack to scroll through\r\n      return\r\n    }\r\n\r\n    return volumeActors[0].uid\r\n  }\r\n}\r\n","import { BaseAnnotationTool } from '../base'\r\n// ~~ VTK Viewport\r\nimport {\r\n  Settings,\r\n  getEnabledElement,\r\n  getVolume,\r\n  Types,\r\n} from '@ohif/cornerstone-render'\r\nimport { getTargetVolume, getToolStateWithinSlice } from '../../util/planar'\r\nimport throttle from '../../util/throttle'\r\nimport { addToolState, getToolState } from '../../stateManagement/toolState'\r\nimport {\r\n  drawHandles as drawHandlesSvg,\r\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\r\n  drawRect as drawRectSvg,\r\n} from '../../drawingSvg'\r\nimport { vec2, vec3 } from 'gl-matrix'\r\nimport { state } from '../../store'\r\nimport { CornerstoneTools3DEvents as EVENTS } from '../../enums'\r\nimport { getViewportUIDsWithToolToRender } from '../../util/viewportFilters'\r\nimport rectangle from '../../util/math/rectangle'\r\nimport { getTextBoxCoordsCanvas } from '../../util/drawing'\r\nimport getWorldWidthAndHeightInPlane from '../../util/planar/getWorldWidthAndHeightInPlane'\r\nimport { indexWithinDimensions } from '../../util/vtkjs'\r\nimport { showToolCursor, hideToolCursor } from '../../store/toolCursor'\r\nimport { ToolSpecificToolData } from '../../types'\r\n\r\nexport default class RectangleRoiTool extends BaseAnnotationTool {\r\n  _throttledCalculateCachedStats: any\r\n  editData: {\r\n    toolData: any\r\n    viewportUIDsToRender: string[]\r\n    handleIndex?: number\r\n    movingTextBox: boolean\r\n    newAnnotation?: boolean\r\n    hasMoved?: boolean\r\n  } | null\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'RectangleRoi',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: { shadow: true },\r\n    })\r\n\r\n    this._throttledCalculateCachedStats = throttle(\r\n      this._calculateCachedStats,\r\n      100,\r\n      { trailing: true }\r\n    )\r\n  }\r\n\r\n  addNewMeasurement = (evt: CustomEvent): ToolSpecificToolData => {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const worldPos = currentPoints.world\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, FrameOfReferenceUID, renderingEngine } = enabledElement\r\n\r\n    if (!FrameOfReferenceUID) {\r\n      console.warn('No FrameOfReferenceUID, empty scene, exiting early.')\r\n\r\n      return\r\n    }\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewPlaneNormal, viewUp } = camera\r\n\r\n    const toolData = {\r\n      metadata: {\r\n        viewPlaneNormal: [...viewPlaneNormal],\r\n        viewUp: [...viewUp],\r\n        FrameOfReferenceUID,\r\n        toolName: this.name,\r\n      },\r\n      data: {\r\n        invalidated: true,\r\n        handles: {\r\n          points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\r\n          textBox: {\r\n            hasMoved: false,\r\n            worldPosition: [0, 0, 0],\r\n          },\r\n          activeHandleIndex: null,\r\n        },\r\n        cachedStats: {},\r\n        active: true,\r\n      },\r\n    } as ToolSpecificToolData\r\n\r\n    // Ensure settings are initialized after tool data instantiation\r\n    Settings.getObjectSettings(toolData, RectangleRoiTool)\r\n\r\n    addToolState(element, toolData)\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex: 3,\r\n      movingTextBox: false,\r\n      newAnnotation: true,\r\n      hasMoved: false,\r\n    }\r\n    this._activateDraw(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    return toolData\r\n  }\r\n\r\n  getHandleNearImagePoint = (element, toolData, canvasCoords, proximity) => {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const { points, textBox } = data.handles\r\n    const { worldBoundingBox } = textBox\r\n\r\n    if (worldBoundingBox) {\r\n      // If the bounding box for the textbox exists, see if we are clicking within it.\r\n      const canvasBoundingBox = {\r\n        topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\r\n        topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\r\n        bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\r\n        bottmRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\r\n      }\r\n\r\n      if (\r\n        canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\r\n        canvasCoords[0] <= canvasBoundingBox.bottmRight[0] &&\r\n        canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\r\n        canvasCoords[1] <= canvasBoundingBox.bottmRight[1]\r\n      ) {\r\n        data.handles.activeHandleIndex = null\r\n        return textBox\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i]\r\n      const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n\r\n      const near =\r\n        vec2.distance(canvasCoords, <vec2>toolDataCanvasCoordinate) < proximity\r\n\r\n      if (near === true) {\r\n        data.handles.activeHandleIndex = i\r\n        return point\r\n      }\r\n    }\r\n\r\n    data.handles.activeHandleIndex = null\r\n  }\r\n\r\n  pointNearTool = (element, toolData, canvasCoords, proximity) => {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const { points } = data.handles\r\n\r\n    const canvasPoint1 = viewport.worldToCanvas(points[0])\r\n    const canvasPoint2 = viewport.worldToCanvas(points[3])\r\n\r\n    const rect = this._getRectangleImageCoordinates([\r\n      canvasPoint1,\r\n      canvasPoint2,\r\n    ])\r\n\r\n    const point = [canvasCoords[0], canvasCoords[1]]\r\n    const { left, top, width, height } = rect\r\n\r\n    const distanceToPoint = rectangle.distanceToPoint(\r\n      [left, top, width, height],\r\n      point\r\n    )\r\n\r\n    if (distanceToPoint <= proximity) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  toolSelectedCallback = (evt, toolData, interactionType = 'mouse') => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      movingTextBox: false,\r\n    }\r\n\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  handleSelectedCallback = (\r\n    evt,\r\n    toolData,\r\n    handle,\r\n    interactionType = 'mouse'\r\n  ) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    let movingTextBox = false\r\n    let handleIndex\r\n\r\n    if (handle.worldPosition) {\r\n      movingTextBox = true\r\n    } else {\r\n      handleIndex = data.handles.points.findIndex((p) => p === handle)\r\n    }\r\n\r\n    // Find viewports to render on drag.\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex,\r\n      movingTextBox,\r\n    }\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  _mouseUpCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { toolData, viewportUIDsToRender, newAnnotation, hasMoved } =\r\n      this.editData\r\n    const { data } = toolData\r\n\r\n    if (newAnnotation && !hasMoved) {\r\n      return\r\n    }\r\n\r\n    data.active = false\r\n    data.handles.activeHandleIndex = null\r\n\r\n    this._deactivateModify(element)\r\n    this._deactivateDraw(element)\r\n\r\n    showToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    this.editData = null\r\n  }\r\n\r\n  _mouseDragCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { toolData, viewportUIDsToRender, handleIndex, movingTextBox } =\r\n      this.editData\r\n    const { data } = toolData\r\n\r\n    if (movingTextBox) {\r\n      // Move the text boxes world position\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const { textBox } = data.handles\r\n      const { worldPosition } = textBox\r\n\r\n      worldPosition[0] += worldPosDelta[0]\r\n      worldPosition[1] += worldPosDelta[1]\r\n      worldPosition[2] += worldPosDelta[2]\r\n\r\n      textBox.hasMoved = true\r\n    } else if (handleIndex === undefined) {\r\n      // Moving tool, so move all points by the world points delta\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const { points } = data.handles\r\n\r\n      points.forEach((point) => {\r\n        point[0] += worldPosDelta[0]\r\n        point[1] += worldPosDelta[1]\r\n        point[2] += worldPosDelta[2]\r\n      })\r\n    } else {\r\n      // Moving handle.\r\n      const { currentPoints } = eventData\r\n      const enabledElement = getEnabledElement(element)\r\n      const { worldToCanvas, canvasToWorld } = enabledElement.viewport\r\n      const worldPos = currentPoints.world\r\n\r\n      const { points } = data.handles\r\n\r\n      // Move this handle.\r\n      points[handleIndex] = [...worldPos]\r\n\r\n      let bottomLeftCanvas\r\n      let bottomRightCanvas\r\n      let topLeftCanvas\r\n      let topRightCanvas\r\n\r\n      let bottomLeftWorld\r\n      let bottomRightWorld\r\n      let topLeftWorld\r\n      let topRightWorld\r\n\r\n      switch (handleIndex) {\r\n        case 0:\r\n        case 3:\r\n          // Moving bottomLeft or topRight\r\n\r\n          bottomLeftCanvas = worldToCanvas(points[0])\r\n          topRightCanvas = worldToCanvas(points[3])\r\n\r\n          bottomRightCanvas = [topRightCanvas[0], bottomLeftCanvas[1]]\r\n          topLeftCanvas = [bottomLeftCanvas[0], topRightCanvas[1]]\r\n\r\n          bottomRightWorld = canvasToWorld(bottomRightCanvas)\r\n          topLeftWorld = canvasToWorld(topLeftCanvas)\r\n\r\n          points[1] = bottomRightWorld\r\n          points[2] = topLeftWorld\r\n\r\n          break\r\n        case 1:\r\n        case 2:\r\n          // Moving bottomRight or topLeft\r\n          bottomRightCanvas = worldToCanvas(points[1])\r\n          topLeftCanvas = worldToCanvas(points[2])\r\n\r\n          bottomLeftCanvas = <Types.Point2>[\r\n            topLeftCanvas[0],\r\n            bottomRightCanvas[1],\r\n          ]\r\n          topRightCanvas = <Types.Point2>[\r\n            bottomRightCanvas[0],\r\n            topLeftCanvas[1],\r\n          ]\r\n\r\n          bottomLeftWorld = canvasToWorld(bottomLeftCanvas)\r\n          topRightWorld = canvasToWorld(topRightCanvas)\r\n\r\n          points[0] = bottomLeftWorld\r\n          points[3] = topRightWorld\r\n\r\n          break\r\n      }\r\n    }\r\n\r\n    data.invalidated = true\r\n    this.editData.hasMoved = true\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  /**\r\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\r\n   */\r\n  _activateDraw = (element) => {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  /**\r\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\r\n   */\r\n  _deactivateDraw = (element) => {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_MOVE, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  /**\r\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\r\n   */\r\n  _activateModify = (element) => {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  /**\r\n   * Remove event handlers for the modify event loop, and enable default event propagation.\r\n   */\r\n  _deactivateModify = (element) => {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragCallback)\r\n  }\r\n\r\n  /**\r\n   * getToolState = Custom getToolStateMethod with filtering.\r\n   * @param element\r\n   * @param toolState\r\n   */\r\n  filterInteractableToolStateForElement = (element, toolState) => {\r\n    if (!toolState || !toolState.length) {\r\n      return\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, scene } = enabledElement\r\n    const camera = viewport.getCamera()\r\n\r\n    const { spacingInNormalDirection } = getTargetVolume(scene, camera)\r\n\r\n    // Get data with same normal\r\n    const toolDataWithinSlice = getToolStateWithinSlice(\r\n      toolState,\r\n      camera,\r\n      spacingInNormalDirection\r\n    )\r\n\r\n    return toolDataWithinSlice\r\n  }\r\n\r\n  renderToolData(evt: CustomEvent, svgDrawingHelper: any): void {\r\n    const eventData = evt.detail\r\n    const { canvas: canvasElement } = eventData\r\n\r\n    let toolState = getToolState(svgDrawingHelper.enabledElement, this.name)\r\n\r\n    if (!toolState) {\r\n      return\r\n    }\r\n\r\n    toolState = this.filterInteractableToolStateForElement(\r\n      canvasElement,\r\n      toolState\r\n    )\r\n\r\n    if (!toolState.length) {\r\n      return\r\n    }\r\n\r\n    const { viewport, scene } = svgDrawingHelper.enabledElement\r\n    const targetVolumeUID = this._getTargetVolumeUID(scene)\r\n\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const toolData = toolState[i]\r\n      const settings = Settings.getObjectSettings(toolData, RectangleRoiTool)\r\n      const annotationUID = toolData.metadata.toolUID\r\n      const data = toolData.data\r\n      const { points, activeHandleIndex } = data.handles\r\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p))\r\n      const lineWidth = this.getStyle(settings, 'lineWidth', toolData)\r\n      const lineDash = this.getStyle(settings, 'lineDash', toolData)\r\n      const color = this.getStyle(settings, 'color', toolData)\r\n\r\n      if (!data.cachedStats[targetVolumeUID]) {\r\n        // This volume has not had its stats calulcated yet, so recalculate the stats.\r\n        data.cachedStats[targetVolumeUID] = {}\r\n\r\n        const { viewPlaneNormal, viewUp } = viewport.getCamera()\r\n        this._calculateCachedStats(data, viewPlaneNormal, viewUp)\r\n      } else if (data.invalidated) {\r\n        // The data has been invalidated as it was just edited. Recalculate cached stats.\r\n        const { viewPlaneNormal, viewUp } = viewport.getCamera()\r\n        this._throttledCalculateCachedStats(data, viewPlaneNormal, viewUp)\r\n      }\r\n\r\n      let activeHandleCanvasCoords\r\n\r\n      if (!this.editData && activeHandleIndex !== null) {\r\n        // Not creating and hovering over handle, so render handle.\r\n\r\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]]\r\n      }\r\n\r\n      if (activeHandleCanvasCoords) {\r\n        const handleGroupUID = '0'\r\n\r\n        drawHandlesSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          handleGroupUID,\r\n          activeHandleCanvasCoords,\r\n          {\r\n            color,\r\n          }\r\n        )\r\n      }\r\n\r\n      const rectangleUID = '0'\r\n      drawRectSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        rectangleUID,\r\n        canvasCoordinates[0],\r\n        canvasCoordinates[3],\r\n        {\r\n          color,\r\n          lineDash,\r\n          lineWidth,\r\n        }\r\n      )\r\n\r\n      const textLines = this._getTextLines(data, targetVolumeUID)\r\n      if (!textLines || textLines.length === 0) {\r\n        continue\r\n      }\r\n\r\n      if (!data.handles.textBox.hasMoved) {\r\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates)\r\n\r\n        data.handles.textBox.worldPosition =\r\n          viewport.canvasToWorld(canvasTextBoxCoords)\r\n      }\r\n\r\n      const textBoxPosition = viewport.worldToCanvas(\r\n        data.handles.textBox.worldPosition\r\n      )\r\n\r\n      const textBoxUID = '1'\r\n      const boundingBox = drawLinkedTextBoxSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        textBoxUID,\r\n        textLines,\r\n        textBoxPosition,\r\n        canvasCoordinates,\r\n        {},\r\n        this.getLinkedTextBoxStyle(settings, toolData)\r\n      )\r\n\r\n      const { x: left, y: top, width, height } = boundingBox\r\n\r\n      data.handles.textBox.worldBoundingBox = {\r\n        topLeft: viewport.canvasToWorld([left, top]),\r\n        topRight: viewport.canvasToWorld([left + width, top]),\r\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\r\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _findTextBoxAnchorPoints - Finds the middle points of each rectangle side\r\n   * to attach the linked textbox to.\r\n   *\r\n   * @param {} points - An array of points.\r\n   */\r\n  _findTextBoxAnchorPoints = (\r\n    points: Array<Types.Point2>\r\n  ): Array<Types.Point2> => {\r\n    const { left, top, width, height } =\r\n      this._getRectangleImageCoordinates(points)\r\n\r\n    return [\r\n      [\r\n        // Top middle point of rectangle\r\n        left + width / 2,\r\n        top,\r\n      ],\r\n      [\r\n        // Left middle point of rectangle\r\n        left,\r\n        top + height / 2,\r\n      ],\r\n      [\r\n        // Bottom middle point of rectangle\r\n        left + width / 2,\r\n        top + height,\r\n      ],\r\n      [\r\n        // Right middle point of rectangle\r\n        left + width,\r\n        top + height / 2,\r\n      ],\r\n    ]\r\n  }\r\n\r\n  _getRectangleImageCoordinates = (\r\n    points: Array<Types.Point2>\r\n  ): {\r\n    left: number\r\n    top: number\r\n    width: number\r\n    height: number\r\n  } => {\r\n    const [point0, point1] = points\r\n\r\n    return {\r\n      left: Math.min(point0[0], point1[0]),\r\n      top: Math.min(point0[1], point1[1]),\r\n      width: Math.abs(point0[0] - point1[0]),\r\n      height: Math.abs(point0[1] - point1[1]),\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _getTextLines - Returns the Area, mean and std deviation of the area of the\r\n   * target volume enclosed by the rectangle.\r\n   *\r\n   * @param {object} data - The toolDatas tool-specific data.\r\n   * @param {string} targetVolumeUID - The volumeUID of the volume to display the stats for.\r\n   */\r\n  _getTextLines = (data, targetVolumeUID: string) => {\r\n    const cachedVolumeStats = data.cachedStats[targetVolumeUID]\r\n    const { area, mean, stdDev, Modality } = cachedVolumeStats\r\n\r\n    if (mean === undefined) {\r\n      return\r\n    }\r\n\r\n    const textLines = []\r\n\r\n    const areaLine = `Area: ${area.toFixed(2)} mm${String.fromCharCode(178)}`\r\n    let meanLine = `Mean: ${mean.toFixed(2)}`\r\n    let stdDevLine = `Std Dev: ${stdDev.toFixed(2)}`\r\n\r\n    // Give appropriate units for the modality.\r\n    if (Modality === 'PT') {\r\n      meanLine += ' SUV'\r\n      stdDevLine += ' SUV'\r\n    } else if (Modality === 'CT') {\r\n      meanLine += ' HU'\r\n      stdDevLine += ' HU'\r\n    } else {\r\n      meanLine += ' MO'\r\n      stdDevLine += ' MO'\r\n    }\r\n\r\n    textLines.push(areaLine)\r\n    textLines.push(meanLine)\r\n    textLines.push(stdDevLine)\r\n\r\n    return textLines\r\n  }\r\n\r\n  /**\r\n   * _calculateCachedStats - For each volume in the frame of reference that a\r\n   * tool instance in particular viewport defines as its target volume, find the\r\n   * volume coordinates (i,j,k) being probed by the two corners. One of i,j or k\r\n   * will be constant across the two points. In the other two directions iterate\r\n   * over the voxels and calculate the first and second-order statistics.\r\n   *\r\n   * @param {object} data - The toolDatas tool-specific data.\r\n   * @param {Array<number>} viewPlaneNormal The normal vector of the camera.\r\n   * @param {Array<number>} viewUp The viewUp vector of the camera.\r\n   */\r\n  _calculateCachedStats = (data, viewPlaneNormal, viewUp) => {\r\n    const worldPos1 = data.handles.points[0]\r\n    const worldPos2 = data.handles.points[3]\r\n    const { cachedStats } = data\r\n\r\n    const volumeUIDs = Object.keys(cachedStats)\r\n\r\n    for (let i = 0; i < volumeUIDs.length; i++) {\r\n      const volumeUID = volumeUIDs[i]\r\n      const imageVolume = getVolume(volumeUID)\r\n\r\n      const {\r\n        dimensions,\r\n        scalarData,\r\n        vtkImageData: imageData,\r\n        metadata,\r\n      } = imageVolume\r\n      const worldPos1Index = vec3.fromValues(0, 0, 0)\r\n      const worldPos2Index = vec3.fromValues(0, 0, 0)\r\n\r\n      imageData.worldToIndexVec3(worldPos1, worldPos1Index)\r\n\r\n      worldPos1Index[0] = Math.floor(worldPos1Index[0])\r\n      worldPos1Index[1] = Math.floor(worldPos1Index[1])\r\n      worldPos1Index[2] = Math.floor(worldPos1Index[2])\r\n\r\n      imageData.worldToIndexVec3(worldPos2, worldPos2Index)\r\n\r\n      worldPos2Index[0] = Math.floor(worldPos2Index[0])\r\n      worldPos2Index[1] = Math.floor(worldPos2Index[1])\r\n      worldPos2Index[2] = Math.floor(worldPos2Index[2])\r\n\r\n      // Check if one of the indexes are inside the volume, this then gives us\r\n      // Some area to do stats over.\r\n\r\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\r\n        // Calculate index bounds to itterate over\r\n\r\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0])\r\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0])\r\n\r\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1])\r\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1])\r\n\r\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2])\r\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2])\r\n\r\n        const { worldWidth, worldHeight } = getWorldWidthAndHeightInPlane(\r\n          viewPlaneNormal,\r\n          viewUp,\r\n          imageVolume,\r\n          worldPos1,\r\n          worldPos2\r\n        )\r\n\r\n        const area = worldWidth * worldHeight\r\n\r\n        let count = 0\r\n        let mean = 0\r\n        let stdDev = 0\r\n\r\n        const yMultiple = dimensions[0]\r\n        const zMultiple = dimensions[0] * dimensions[1]\r\n\r\n        // This is a tripple loop, but one of these 3 values will be constant\r\n        // In the planar view.\r\n        for (let k = kMin; k <= kMax; k++) {\r\n          for (let j = jMin; j <= jMax; j++) {\r\n            for (let i = iMin; i <= iMax; i++) {\r\n              const value = scalarData[k * zMultiple + j * yMultiple + i]\r\n\r\n              count++\r\n              mean += value\r\n            }\r\n          }\r\n        }\r\n\r\n        mean /= count\r\n\r\n        for (let k = kMin; k <= kMax; k++) {\r\n          for (let j = jMin; j <= jMax; j++) {\r\n            for (let i = iMin; i <= iMax; i++) {\r\n              const value = scalarData[k * zMultiple + j * yMultiple + i]\r\n\r\n              const valueMinusMean = value - mean\r\n\r\n              stdDev += valueMinusMean * valueMinusMean\r\n            }\r\n          }\r\n        }\r\n\r\n        stdDev /= count\r\n        stdDev = Math.sqrt(stdDev)\r\n\r\n        cachedStats[volumeUID] = {\r\n          Modality: metadata.Modality,\r\n          area,\r\n          mean,\r\n          stdDev,\r\n        }\r\n      } else {\r\n        cachedStats[volumeUID] = {\r\n          Modality: metadata.Modality,\r\n        }\r\n      }\r\n    }\r\n\r\n    data.invalidated = false\r\n\r\n    return cachedStats\r\n  }\r\n\r\n  _isInsideVolume = (index1, index2, dimensions) => {\r\n    return (\r\n      indexWithinDimensions(index1, dimensions) &&\r\n      indexWithinDimensions(index2, dimensions)\r\n    )\r\n  }\r\n\r\n  _getTargetVolumeUID = (scene) => {\r\n    if (this.configuration.volumeUID) {\r\n      return this.configuration.volumeUID\r\n    }\r\n\r\n    const volumeActors = scene.getVolumeActors()\r\n\r\n    if (!volumeActors && !volumeActors.length) {\r\n      // No stack to scroll through\r\n      return\r\n    }\r\n\r\n    return volumeActors[0].uid\r\n  }\r\n}\r\n","import { BaseAnnotationTool } from '../base'\r\n// ~~ VTK Viewport\r\nimport {\r\n  Settings,\r\n  getEnabledElement,\r\n  getVolume,\r\n  Types,\r\n} from '@ohif/cornerstone-render'\r\nimport { getTargetVolume, getToolStateWithinSlice } from '../../util/planar'\r\nimport throttle from '../../util/throttle'\r\nimport { addToolState, getToolState } from '../../stateManagement/toolState'\r\nimport {\r\n  drawEllipse as drawEllipseSvg,\r\n  drawHandles as drawHandlesSvg,\r\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\r\n} from '../../drawingSvg'\r\nimport { vec2, vec3 } from 'gl-matrix'\r\nimport { state } from '../../store'\r\nimport { CornerstoneTools3DEvents as EVENTS } from '../../enums'\r\nimport { getViewportUIDsWithToolToRender } from '../../util/viewportFilters'\r\nimport { indexWithinDimensions } from '../../util/vtkjs'\r\nimport { getTextBoxCoordsCanvas } from '../../util/drawing'\r\nimport { pointInEllipse } from '../../util/math/ellipse'\r\nimport getWorldWidthAndHeightInPlane from '../../util/planar/getWorldWidthAndHeightInPlane'\r\nimport { showToolCursor, hideToolCursor } from '../../store/toolCursor'\r\nimport { ToolSpecificToolData } from '../../types'\r\n\r\nexport default class EllipticalRoiTool extends BaseAnnotationTool {\r\n  touchDragCallback: any\r\n  mouseDragCallback: any\r\n  _throttledCalculateCachedStats: any\r\n  editData: {\r\n    toolData: any\r\n    viewportUIDsToRender: Array<string>\r\n    handleIndex?: number\r\n    movingTextBox?: boolean\r\n    centerCanvas?: Array<number>\r\n    canvasWidth?: number\r\n    canvasHeight?: number\r\n    originalHandleCanvas?: Array<number>\r\n    newAnnotation?: boolean\r\n    hasMoved?: boolean\r\n  } | null\r\n  _configuration: any\r\n\r\n  constructor(toolConfiguration = {}) {\r\n    super(toolConfiguration, {\r\n      name: 'EllipticalRoi',\r\n      supportedInteractionTypes: ['Mouse', 'Touch'],\r\n      configuration: { shadow: true },\r\n    })\r\n\r\n    this._throttledCalculateCachedStats = throttle(\r\n      this._calculateCachedStats,\r\n      100,\r\n      { trailing: true }\r\n    )\r\n  }\r\n\r\n  addNewMeasurement = (evt: CustomEvent): ToolSpecificToolData => {\r\n    const eventData = evt.detail\r\n    const { currentPoints, element } = eventData\r\n    const worldPos = currentPoints.world\r\n    const canvasPos = currentPoints.canvas\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, FrameOfReferenceUID, renderingEngine } = enabledElement\r\n\r\n    if (!FrameOfReferenceUID) {\r\n      console.warn('No FrameOfReferenceUID, empty scene, exiting early.')\r\n\r\n      return\r\n    }\r\n\r\n    const camera = viewport.getCamera()\r\n    const { viewPlaneNormal, viewUp } = camera\r\n\r\n    const toolData = {\r\n      metadata: {\r\n        viewPlaneNormal: [...viewPlaneNormal],\r\n        viewUp: [...viewUp],\r\n        FrameOfReferenceUID,\r\n        toolName: this.name,\r\n      },\r\n      data: {\r\n        invalidated: true,\r\n        handles: {\r\n          textBox: {\r\n            hasMoved: false,\r\n            worldPosition: [0, 0, 0],\r\n          },\r\n          points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\r\n          activeHandleIndex: null,\r\n        },\r\n        isDrawing: true,\r\n        cachedStats: {},\r\n        active: true,\r\n      },\r\n    } as ToolSpecificToolData\r\n\r\n    // Ensure settings are initialized after tool data instantiation\r\n    Settings.getObjectSettings(toolData, EllipticalRoiTool)\r\n\r\n    addToolState(element, toolData)\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      centerCanvas: canvasPos,\r\n      newAnnotation: true,\r\n      hasMoved: false,\r\n    }\r\n    this._activateDraw(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    evt.preventDefault()\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    return toolData\r\n  }\r\n\r\n  getHandleNearImagePoint = (element, toolData, canvasCoords, proximity) => {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const { points, textBox } = data.handles\r\n    const { worldBoundingBox } = textBox\r\n\r\n    if (worldBoundingBox) {\r\n      const canvasBoundingBox = {\r\n        topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\r\n        topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\r\n        bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\r\n        bottmRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\r\n      }\r\n\r\n      if (\r\n        canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\r\n        canvasCoords[0] <= canvasBoundingBox.bottmRight[0] &&\r\n        canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\r\n        canvasCoords[1] <= canvasBoundingBox.bottmRight[1]\r\n      ) {\r\n        data.handles.activeHandleIndex = null\r\n        return textBox\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i]\r\n      const toolDataCanvasCoordinate = viewport.worldToCanvas(point)\r\n\r\n      const near =\r\n        vec2.distance(canvasCoords, <vec2>toolDataCanvasCoordinate) < proximity\r\n\r\n      if (near === true) {\r\n        data.handles.activeHandleIndex = i\r\n        return point\r\n      }\r\n    }\r\n\r\n    data.handles.activeHandleIndex = null\r\n  }\r\n\r\n  pointNearTool = (element, toolData, canvasCoords, proximity) => {\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport } = enabledElement\r\n\r\n    const { data } = toolData\r\n    const { points } = data.handles\r\n\r\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p))\r\n    const canvasCorners = this._getCanvasEllipseCorners(canvasCoordinates)\r\n\r\n    const [canvasPoint1, canvasPoint2] = canvasCorners\r\n\r\n    const minorEllipse = {\r\n      left: Math.min(canvasPoint1[0], canvasPoint2[0]) + proximity / 2,\r\n      top: Math.min(canvasPoint1[1], canvasPoint2[1]) + proximity / 2,\r\n      width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) - proximity,\r\n      height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) - proximity,\r\n    }\r\n\r\n    const majorEllipse = {\r\n      left: Math.min(canvasPoint1[0], canvasPoint2[0]) - proximity / 2,\r\n      top: Math.min(canvasPoint1[1], canvasPoint2[1]) - proximity / 2,\r\n      width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) + proximity,\r\n      height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) + proximity,\r\n    }\r\n\r\n    const pointInMinorEllipse = pointInEllipse(minorEllipse, canvasCoords)\r\n    const pointInMajorEllipse = pointInEllipse(majorEllipse, canvasCoords)\r\n\r\n    if (pointInMajorEllipse && !pointInMinorEllipse) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  toolSelectedCallback = (evt, toolData, interactionType = 'mouse') => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      movingTextBox: false,\r\n    }\r\n\r\n    hideToolCursor(element)\r\n\r\n    this._activateModify(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  handleSelectedCallback = (\r\n    evt,\r\n    toolData,\r\n    handle,\r\n    interactionType = 'mouse'\r\n  ) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const { data } = toolData\r\n\r\n    data.active = true\r\n\r\n    let movingTextBox = false\r\n    let handleIndex\r\n\r\n    let centerCanvas\r\n    let canvasWidth\r\n    let canvasHeight\r\n    let originalHandleCanvas\r\n\r\n    if (handle.worldPosition) {\r\n      movingTextBox = true\r\n    } else {\r\n      const { points } = data.handles\r\n      const enabledElement = getEnabledElement(element)\r\n      const { worldToCanvas } = enabledElement.viewport\r\n\r\n      handleIndex = points.findIndex((p) => p === handle)\r\n\r\n      const pointsCanvas = points.map(worldToCanvas)\r\n\r\n      originalHandleCanvas = pointsCanvas[handleIndex]\r\n\r\n      canvasWidth = Math.abs(pointsCanvas[2][0] - pointsCanvas[3][0])\r\n      canvasHeight = Math.abs(pointsCanvas[0][1] - pointsCanvas[1][1])\r\n\r\n      centerCanvas = [\r\n        (pointsCanvas[2][0] + pointsCanvas[3][0]) / 2,\r\n        (pointsCanvas[0][1] + pointsCanvas[1][1]) / 2,\r\n      ]\r\n    }\r\n\r\n    // Find viewports to render on drag.\r\n    const viewportUIDsToRender = getViewportUIDsWithToolToRender(\r\n      element,\r\n      this.name\r\n    )\r\n\r\n    this.editData = {\r\n      toolData,\r\n      viewportUIDsToRender,\r\n      handleIndex,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      centerCanvas,\r\n      originalHandleCanvas,\r\n      movingTextBox,\r\n    }\r\n    this._activateModify(element)\r\n\r\n    hideToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n\r\n    evt.preventDefault()\r\n  }\r\n\r\n  _mouseUpCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { toolData, viewportUIDsToRender, newAnnotation, hasMoved } =\r\n      this.editData\r\n    const { data } = toolData\r\n\r\n    if (newAnnotation && !hasMoved) {\r\n      return\r\n    }\r\n\r\n    data.active = false\r\n    data.handles.activeHandleIndex = null\r\n\r\n    delete data.isDrawing\r\n    delete data.isDrawing\r\n\r\n    this._deactivateModify(element)\r\n    this._deactivateDraw(element)\r\n\r\n    showToolCursor(element)\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    this.editData = null\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _mouseDragDrawCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const { currentPoints } = eventData\r\n    const currentCanvasPoints = currentPoints.canvas\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine, viewport } = enabledElement\r\n    const { canvasToWorld } = viewport\r\n\r\n    //////\r\n    const { toolData, viewportUIDsToRender, centerCanvas } = this.editData\r\n    const { data } = toolData\r\n\r\n    const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0])\r\n    const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1])\r\n\r\n    const bottomCanvas = <Types.Point2>[centerCanvas[0], centerCanvas[1] - dY]\r\n    const topCanvas = <Types.Point2>[centerCanvas[0], centerCanvas[1] + dY]\r\n    const leftCanvas = <Types.Point2>[centerCanvas[0] - dX, centerCanvas[1]]\r\n    const rightCanvas = <Types.Point2>[centerCanvas[0] + dX, centerCanvas[1]]\r\n\r\n    data.handles.points = [\r\n      canvasToWorld(bottomCanvas),\r\n      canvasToWorld(topCanvas),\r\n      canvasToWorld(leftCanvas),\r\n      canvasToWorld(rightCanvas),\r\n    ]\r\n\r\n    data.invalidated = true\r\n\r\n    this.editData.hasMoved = true\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _mouseDragModifyCallback = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n\r\n    const { toolData, viewportUIDsToRender, handleIndex, movingTextBox } =\r\n      this.editData\r\n    const { data } = toolData\r\n\r\n    if (movingTextBox) {\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const { textBox } = data.handles\r\n      const { worldPosition } = textBox\r\n\r\n      worldPosition[0] += worldPosDelta[0]\r\n      worldPosition[1] += worldPosDelta[1]\r\n      worldPosition[2] += worldPosDelta[2]\r\n\r\n      textBox.hasMoved = true\r\n    } else if (handleIndex === undefined) {\r\n      // Moving tool\r\n      const { deltaPoints } = eventData\r\n      const worldPosDelta = deltaPoints.world\r\n\r\n      const points = data.handles.points\r\n\r\n      points.forEach((point) => {\r\n        point[0] += worldPosDelta[0]\r\n        point[1] += worldPosDelta[1]\r\n        point[2] += worldPosDelta[2]\r\n      })\r\n    } else {\r\n      this._dragHandle(evt)\r\n    }\r\n\r\n    data.invalidated = true\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { renderingEngine } = enabledElement\r\n\r\n    renderingEngine.renderViewports(viewportUIDsToRender)\r\n  }\r\n\r\n  _dragHandle = (evt) => {\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const enabledElement = getEnabledElement(element)\r\n    const { canvasToWorld } = enabledElement.viewport\r\n\r\n    const {\r\n      toolData,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      handleIndex,\r\n      centerCanvas,\r\n      originalHandleCanvas,\r\n    } = this.editData\r\n    const { data } = toolData\r\n    const { points } = data.handles\r\n\r\n    // Move current point in that direction.\r\n    // Move other points in oposite direction.\r\n\r\n    const { currentPoints } = eventData\r\n    const currentCanvasPoints = currentPoints.canvas\r\n\r\n    if (handleIndex === 0 || handleIndex === 1) {\r\n      // Dragging top or bottom point\r\n      const dYCanvas = Math.abs(currentCanvasPoints[1] - centerCanvas[1])\r\n      const canvasBottom = <Types.Point2>[\r\n        centerCanvas[0],\r\n        centerCanvas[1] - dYCanvas,\r\n      ]\r\n      const canvasTop = <Types.Point2>[\r\n        centerCanvas[0],\r\n        centerCanvas[1] + dYCanvas,\r\n      ]\r\n\r\n      points[0] = canvasToWorld(canvasBottom)\r\n      points[1] = canvasToWorld(canvasTop)\r\n\r\n      const dXCanvas = currentCanvasPoints[0] - originalHandleCanvas[0]\r\n      const newHalfCanvasWidth = canvasWidth / 2 + dXCanvas\r\n      const canvasLeft = <Types.Point2>[\r\n        centerCanvas[0] - newHalfCanvasWidth,\r\n        centerCanvas[1],\r\n      ]\r\n      const canvasRight = <Types.Point2>[\r\n        centerCanvas[0] + newHalfCanvasWidth,\r\n        centerCanvas[1],\r\n      ]\r\n\r\n      points[2] = canvasToWorld(canvasLeft)\r\n      points[3] = canvasToWorld(canvasRight)\r\n    } else {\r\n      // Dragging left or right point\r\n      const dXCanvas = Math.abs(currentCanvasPoints[0] - centerCanvas[0])\r\n      const canvasLeft = <Types.Point2>[\r\n        centerCanvas[0] - dXCanvas,\r\n        centerCanvas[1],\r\n      ]\r\n      const canvasRight = <Types.Point2>[\r\n        centerCanvas[0] + dXCanvas,\r\n        centerCanvas[1],\r\n      ]\r\n\r\n      points[2] = canvasToWorld(canvasLeft)\r\n      points[3] = canvasToWorld(canvasRight)\r\n\r\n      const dYCanvas = currentCanvasPoints[1] - originalHandleCanvas[1]\r\n      const newHalfCanvasHeight = canvasHeight / 2 + dYCanvas\r\n      const canvasBottom = <Types.Point2>[\r\n        centerCanvas[0],\r\n        centerCanvas[1] - newHalfCanvasHeight,\r\n      ]\r\n      const canvasTop = <Types.Point2>[\r\n        centerCanvas[0],\r\n        centerCanvas[1] + newHalfCanvasHeight,\r\n      ]\r\n\r\n      points[0] = canvasToWorld(canvasBottom)\r\n      points[1] = canvasToWorld(canvasTop)\r\n    }\r\n  }\r\n\r\n  _activateModify = (element) => {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragModifyCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragModifyCallback)\r\n  }\r\n\r\n  _deactivateModify = (element) => {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(\r\n      EVENTS.MOUSE_DRAG,\r\n      this._mouseDragModifyCallback\r\n    )\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(\r\n      EVENTS.TOUCH_DRAG,\r\n      this._mouseDragModifyCallback\r\n    )\r\n  }\r\n\r\n  _activateDraw = (element) => {\r\n    state.isToolLocked = true\r\n\r\n    element.addEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._mouseDragDrawCallback)\r\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._mouseDragDrawCallback)\r\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.addEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._mouseDragDrawCallback)\r\n  }\r\n\r\n  _deactivateDraw = (element) => {\r\n    state.isToolLocked = false\r\n\r\n    element.removeEventListener(EVENTS.MOUSE_UP, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._mouseDragDrawCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_MOVE, this._mouseDragDrawCallback)\r\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._mouseUpCallback)\r\n\r\n    element.removeEventListener(EVENTS.TOUCH_END, this._mouseUpCallback)\r\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._mouseDragDrawCallback)\r\n  }\r\n\r\n  /**\r\n   * getToolState = Custom getToolStateMethod with filtering.\r\n   * @param element\r\n   */\r\n  filterInteractableToolStateForElement = (element, toolState) => {\r\n    if (!toolState || !toolState.length) {\r\n      return\r\n    }\r\n\r\n    const enabledElement = getEnabledElement(element)\r\n    const { viewport, scene } = enabledElement\r\n    const camera = viewport.getCamera()\r\n\r\n    const { spacingInNormalDirection } = getTargetVolume(scene, camera)\r\n\r\n    // Get data with same normal\r\n    const toolDataWithinSlice = getToolStateWithinSlice(\r\n      toolState,\r\n      camera,\r\n      spacingInNormalDirection\r\n    )\r\n\r\n    return toolDataWithinSlice\r\n  }\r\n\r\n  renderToolData(evt: CustomEvent, svgDrawingHelper: any): void {\r\n    const eventData = evt.detail\r\n    const { canvas: canvasElement } = eventData\r\n    let toolState = getToolState(svgDrawingHelper.enabledElement, this.name)\r\n\r\n    if (!toolState) {\r\n      return\r\n    }\r\n\r\n    toolState = this.filterInteractableToolStateForElement(\r\n      canvasElement,\r\n      toolState\r\n    )\r\n\r\n    if (!toolState.length) {\r\n      return\r\n    }\r\n\r\n    const { viewport, scene } = svgDrawingHelper.enabledElement\r\n    const targetVolumeUID = this._getTargetVolumeUID(scene)\r\n\r\n    for (let i = 0; i < toolState.length; i++) {\r\n      const toolData = toolState[i]\r\n      const settings = Settings.getObjectSettings(toolData, EllipticalRoiTool)\r\n      const annotationUID = toolData.metadata.toolUID\r\n      const data = toolData.data\r\n      const { handles, isDrawing } = data\r\n      const { points, activeHandleIndex } = handles\r\n      const lineWidth = this.getStyle(settings, 'lineWidth', toolData)\r\n      const lineDash = this.getStyle(settings, 'lineDash', toolData)\r\n      const color = this.getStyle(settings, 'color', toolData)\r\n\r\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p))\r\n      const canvasCorners = <Array<Types.Point2>>(\r\n        this._getCanvasEllipseCorners(canvasCoordinates)\r\n      )\r\n\r\n      if (!data.cachedStats[targetVolumeUID]) {\r\n        data.cachedStats[targetVolumeUID] = {}\r\n\r\n        this._calculateCachedStats(data, viewport, canvasCorners)\r\n      } else if (data.invalidated) {\r\n        this._throttledCalculateCachedStats(data, viewport, canvasCorners)\r\n      }\r\n\r\n      let activeHandleCanvasCoords\r\n\r\n      if (!this.editData && activeHandleIndex !== null) {\r\n        // Not creating and hovering over handle, so render handle.\r\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]]\r\n      }\r\n\r\n      if (activeHandleCanvasCoords) {\r\n        const handleGroupUID = '0'\r\n        drawHandlesSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          handleGroupUID,\r\n          activeHandleCanvasCoords,\r\n          {\r\n            color,\r\n          }\r\n        )\r\n      }\r\n\r\n      const ellipseUID = '0'\r\n      drawEllipseSvg(\r\n        svgDrawingHelper,\r\n        this.name,\r\n        annotationUID,\r\n        ellipseUID,\r\n        canvasCorners[0],\r\n        canvasCorners[1],\r\n        {\r\n          color,\r\n          lineDash,\r\n          lineWidth,\r\n        }\r\n      )\r\n\r\n      const textLines = this._getTextLines(data, targetVolumeUID)\r\n      if (!textLines || textLines.length === 0) {\r\n        continue\r\n      }\r\n\r\n      // Poor man's cached?\r\n      if (!isDrawing) {\r\n        let canvasTextBoxCoords\r\n\r\n        if (!data.handles.textBox.hasMoved) {\r\n          canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners)\r\n\r\n          data.handles.textBox.worldPosition =\r\n            viewport.canvasToWorld(canvasTextBoxCoords)\r\n        }\r\n\r\n        const textBoxPosition = viewport.worldToCanvas(\r\n          data.handles.textBox.worldPosition\r\n        )\r\n\r\n        const textBoxUID = '1'\r\n        const boundingBox = drawLinkedTextBoxSvg(\r\n          svgDrawingHelper,\r\n          this.name,\r\n          annotationUID,\r\n          textBoxUID,\r\n          textLines,\r\n          textBoxPosition,\r\n          canvasCoordinates,\r\n          {},\r\n          this.getLinkedTextBoxStyle(settings, toolData)\r\n        )\r\n\r\n        const { x: left, y: top, width, height } = boundingBox\r\n\r\n        data.handles.textBox.worldBoundingBox = {\r\n          topLeft: viewport.canvasToWorld([left, top]),\r\n          topRight: viewport.canvasToWorld([left + width, top]),\r\n          bottomLeft: viewport.canvasToWorld([left, top + height]),\r\n          bottomRight: viewport.canvasToWorld([left + width, top + height]),\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _getCanvasEllipseCorners = (canvasCoordinates): Array<Types.Point2> => {\r\n    const [bottom, top, left, right] = canvasCoordinates\r\n\r\n    const topLeft = <Types.Point2>[left[0], top[1]]\r\n    const bottomRight = <Types.Point2>[right[0], bottom[1]]\r\n\r\n    return [topLeft, bottomRight]\r\n  }\r\n\r\n  _getTextLines = (data, targetVolumeUID) => {\r\n    const cachedVolumeStats = data.cachedStats[targetVolumeUID]\r\n    const { area, mean, stdDev, isEmptyArea, Modality } = cachedVolumeStats\r\n\r\n    if (mean === undefined) {\r\n      return\r\n    }\r\n\r\n    const textLines = []\r\n\r\n    const areaLine = isEmptyArea\r\n      ? `Area: Oblique not supported`\r\n      : `Area: ${area.toFixed(2)} mm${String.fromCharCode(178)}`\r\n    let meanLine = `Mean: ${mean.toFixed(2)}`\r\n    let stdDevLine = `Std Dev: ${stdDev.toFixed(2)}`\r\n\r\n    if (Modality === 'PT') {\r\n      meanLine += ' SUV'\r\n      stdDevLine += ' SUV'\r\n    } else if (Modality === 'CT') {\r\n      meanLine += ' HU'\r\n      stdDevLine += ' HU'\r\n    } else {\r\n      meanLine += ' MO'\r\n      stdDevLine += ' MO'\r\n    }\r\n\r\n    textLines.push(areaLine)\r\n    textLines.push(meanLine)\r\n    textLines.push(stdDevLine)\r\n\r\n    return textLines\r\n  }\r\n\r\n  _calculateCachedStats = (data, viewport, canvasCorners) => {\r\n    const [canvasPoint1, canvasPoint2] = canvasCorners\r\n    const worldPos1 = viewport.canvasToWorld(canvasPoint1)\r\n    const worldPos2 = viewport.canvasToWorld(canvasPoint2)\r\n\r\n    const { viewPlaneNormal, viewUp } = viewport.getCamera()\r\n\r\n    const { cachedStats } = data\r\n\r\n    const ellipse = {\r\n      left: Math.min(canvasPoint1[0], canvasPoint2[0]),\r\n      top: Math.min(canvasPoint1[1], canvasPoint2[1]),\r\n      width: Math.abs(canvasPoint1[0] - canvasPoint2[0]),\r\n      height: Math.abs(canvasPoint1[1] - canvasPoint2[1]),\r\n    }\r\n\r\n    const volumeUIDs = Object.keys(cachedStats)\r\n\r\n    for (let i = 0; i < volumeUIDs.length; i++) {\r\n      const volumeUID = volumeUIDs[i]\r\n      const imageVolume = getVolume(volumeUID)\r\n\r\n      const {\r\n        dimensions,\r\n        scalarData,\r\n        vtkImageData: imageData,\r\n        metadata,\r\n      } = imageVolume\r\n      const worldPos1Index = vec3.fromValues(0, 0, 0)\r\n      const worldPos2Index = vec3.fromValues(0, 0, 0)\r\n\r\n      imageData.worldToIndexVec3(worldPos1, worldPos1Index)\r\n\r\n      worldPos1Index[0] = Math.floor(worldPos1Index[0])\r\n      worldPos1Index[1] = Math.floor(worldPos1Index[1])\r\n      worldPos1Index[2] = Math.floor(worldPos1Index[2])\r\n\r\n      imageData.worldToIndexVec3(worldPos2, worldPos2Index)\r\n\r\n      worldPos2Index[0] = Math.floor(worldPos2Index[0])\r\n      worldPos2Index[1] = Math.floor(worldPos2Index[1])\r\n      worldPos2Index[2] = Math.floor(worldPos2Index[2])\r\n\r\n      // Check if one of the indexes are inside the volume, this then gives us\r\n      // Some area to do stats over.\r\n\r\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\r\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0])\r\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0])\r\n\r\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1])\r\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1])\r\n\r\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2])\r\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2])\r\n\r\n        const { worldWidth, worldHeight } = getWorldWidthAndHeightInPlane(\r\n          viewPlaneNormal,\r\n          viewUp,\r\n          imageVolume,\r\n          worldPos1,\r\n          worldPos2\r\n        )\r\n        const isEmptyArea = worldWidth === 0 && worldHeight === 0\r\n        const area = Math.PI * (worldWidth / 2) * (worldHeight / 2)\r\n\r\n        let count = 0\r\n        let mean = 0\r\n        let stdDev = 0\r\n\r\n        const yMultiple = dimensions[0]\r\n        const zMultiple = dimensions[0] * dimensions[1]\r\n\r\n        // Calling worldToCanvas on voxels all the time is super slow,\r\n        // So we instead work out the change in canvas position incrementing each index causes.\r\n        const start = vec3.fromValues(iMin, jMin, kMin)\r\n\r\n        const worldPosStart = vec3.create()\r\n        imageData.indexToWorldVec3(start, worldPosStart)\r\n        const canvasPosStart = viewport.worldToCanvas(worldPosStart)\r\n\r\n        const startPlusI = vec3.fromValues(iMin + 1, jMin, kMin)\r\n        const startPlusJ = vec3.fromValues(iMin, jMin + 1, kMin)\r\n        const startPlusK = vec3.fromValues(iMin, jMin, kMin + 1)\r\n\r\n        const worldPosStartPlusI = vec3.create()\r\n        const plusICanvasDelta = vec2.create()\r\n        imageData.indexToWorldVec3(startPlusI, worldPosStartPlusI)\r\n        const canvasPosStartPlusI = viewport.worldToCanvas(worldPosStartPlusI)\r\n        vec2.sub(plusICanvasDelta, canvasPosStartPlusI, canvasPosStart)\r\n\r\n        const worldPosStartPlusJ = vec3.create()\r\n        const plusJCanvasDelta = vec2.create()\r\n        imageData.indexToWorldVec3(startPlusJ, worldPosStartPlusJ)\r\n        const canvasPosStartPlusJ = viewport.worldToCanvas(worldPosStartPlusJ)\r\n        vec2.sub(plusJCanvasDelta, canvasPosStartPlusJ, canvasPosStart)\r\n\r\n        const worldPosStartPlusK = vec3.create()\r\n        const plusKCanvasDelta = vec2.create()\r\n        imageData.indexToWorldVec3(startPlusK, worldPosStartPlusK)\r\n        const canvasPosStartPlusK = viewport.worldToCanvas(worldPosStartPlusK)\r\n        vec2.sub(plusKCanvasDelta, canvasPosStartPlusK, canvasPosStart)\r\n\r\n        // This is a tripple loop, but one of these 3 values will be constant\r\n        // In the planar view.\r\n        for (let k = kMin; k <= kMax; k++) {\r\n          for (let j = jMin; j <= jMax; j++) {\r\n            for (let i = iMin; i <= iMax; i++) {\r\n              const dI = i - iMin\r\n              const dJ = j - jMin\r\n              const dK = k - kMin\r\n\r\n              let canvasCoords = <Types.Point2>[\r\n                canvasPosStart[0],\r\n                canvasPosStart[1],\r\n              ]\r\n\r\n              canvasCoords = [\r\n                canvasCoords[0] +\r\n                  plusICanvasDelta[0] * dI +\r\n                  plusJCanvasDelta[0] * dJ +\r\n                  plusKCanvasDelta[0] * dK,\r\n                canvasCoords[1] +\r\n                  plusICanvasDelta[1] * dI +\r\n                  plusJCanvasDelta[1] * dJ +\r\n                  plusKCanvasDelta[1] * dK,\r\n              ]\r\n\r\n              if (pointInEllipse(ellipse, canvasCoords)) {\r\n                const value = scalarData[k * zMultiple + j * yMultiple + i]\r\n\r\n                count++\r\n                mean += value\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        mean /= count\r\n\r\n        for (let k = kMin; k <= kMax; k++) {\r\n          for (let j = jMin; j <= jMax; j++) {\r\n            for (let i = iMin; i <= iMax; i++) {\r\n              const value = scalarData[k * zMultiple + j * yMultiple + i]\r\n\r\n              const valueMinusMean = value - mean\r\n\r\n              stdDev += valueMinusMean * valueMinusMean\r\n            }\r\n          }\r\n        }\r\n\r\n        stdDev /= count\r\n        stdDev = Math.sqrt(stdDev)\r\n\r\n        cachedStats[volumeUID] = {\r\n          Modality: metadata.Modality,\r\n          area,\r\n          mean,\r\n          stdDev,\r\n          isEmptyArea,\r\n        }\r\n      } else {\r\n        cachedStats[volumeUID] = {\r\n          Modality: metadata.Modality,\r\n        }\r\n      }\r\n    }\r\n\r\n    data.invalidated = false\r\n\r\n    return cachedStats\r\n  }\r\n\r\n  _isInsideVolume = (index1, index2, dimensions) => {\r\n    return (\r\n      indexWithinDimensions(index1, dimensions) &&\r\n      indexWithinDimensions(index2, dimensions)\r\n    )\r\n  }\r\n\r\n  _getTargetVolumeUID = (scene) => {\r\n    if (this.configuration.volumeUID) {\r\n      return this.configuration.volumeUID\r\n    }\r\n\r\n    const volumeActors = scene.getVolumeActors()\r\n\r\n    if (!volumeActors && !volumeActors.length) {\r\n      // No stack to scroll through\r\n      return\r\n    }\r\n\r\n    return volumeActors[0].uid\r\n  }\r\n}\r\n"],"sourceRoot":""}